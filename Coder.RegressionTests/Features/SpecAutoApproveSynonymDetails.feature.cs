// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.RegressionTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("In general, synonyms created from direct dictionary matches will not be available" +
        " when Auto Approve is configured.")]
    [NUnit.Framework.CategoryAttribute("specAutoApproveSynonymDetails.feature")]
    [NUnit.Framework.CategoryAttribute("CoderCore")]
    public partial class InGeneralSynonymsCreatedFromDirectDictionaryMatchesWillNotBeAvailableWhenAutoApproveIsConfigured_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SpecAutoApproveSynonymDetails.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "In general, synonyms created from direct dictionary matches will not be available" +
                    " when Auto Approve is configured.", "Synonyms created from direct dictionary matches will be available when Auto Appro" +
                    "ve is not configured. This logic has some \r\nexceptions based on the type of dict" +
                    "ionary and single vs. multiple path synonyms. The following truth table was used" +
                    " to help map the requirements to the cases.\r\n\r\nTest Case\t            | AutoAppro" +
                    "ve\t| Single/Multi\t| Dictionary\t| Synonyms\r\nPBMCC_197253_001/011\t| On\t        |  " +
                    "   Single\t| MedDRA\t    | Hidden\r\nPBMCC_197253_002/012\t| On\t        |     Single\t" +
                    "| WhoDrug\t    | Hidden\r\nPBMCC_197253_003/013\t| On\t        |     Single\t| JDrug\t " +
                    "       | Hidden\r\nPBMCC_197253_004/014\t| Off\t        |     Single\t| MedDRA\t    | " +
                    "Shown\r\nPBMCC_197253_005/015\t| Off\t        |     Single\t| WhoDrug\t    | Shown\r\nPB" +
                    "MCC_197253_006/016\t| Off\t        |     Single\t| JDrug\t        | Shown\r\nPBMCC_197" +
                    "253_007/017\t| On\t        |     Multi\t    | MedDRA\t    | Hidden\r\nPBMCC_197253_008" +
                    "/018\t| On\t        |     Multi\t    | WhoDrug\t    | Shown\r\nPBMCC_197253_009/019\t| " +
                    "Off\t        |     Multi\t    | MedDRA\t    | Shown\r\nPBMCC_197253_010/020\t| Off\t   " +
                    "     |     Multi\t    | WhoDrug\t    | Shown\r\n\r\n_ The following environment config" +
                    "uration settings were enabled:\r\n\r\n Empty Synonym Lists Registered:\r\n Synonym Lis" +
                    "t 1: MedDRA             (ENG) 16.0     MedDRA_DDM\r\n Synonym List 2: WhoDrugDDEB2" +
                    "       (ENG) 201306   WhoDrugDDEB2_DDM\r\n Synonym List 3: JDrug              (JPN" +
                    ") 2013H1   JDrug_DDM\r\n\r\n Common Configurations:\r\n Configuration Name       | Dec" +
                    "larative Browser Class | \r\n Completed Reconsider     | CompletedReconsiderSetup " +
                    " | \r\n Basic                    | BasicSetup                |", ProgrammingLanguage.CSharp, new string[] {
                        "specAutoApproveSynonymDetails.feature",
                        "CoderCore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\" and autocoding Single path MedDRA Direct Dic" +
            "tionary Matches; upon creation of the synonyms, they shall not be available to d" +
            "ownload and the count shall not change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_001")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOnAndAutocodingSinglePathMedDRADirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallNotBeAvailableToDownloadAndTheCountShallNotChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\" and autocoding Single path MedDRA Direct Dic" +
                    "tionary Matches; upon creation of the synonyms, they shall not be available to d" +
                    "ownload and the count shall not change", new string[] {
                        "VAL",
                        "PBMCC_197253_001",
                        "Release2015.3.0"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table1.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 36
 testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table2.AddRow(new string[] {
                        "HEADACHE",
                        "LLT"});
#line 39
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table2, "When ");
#line 42
 testRunner.Then("the number of synonyms for list \"MedDRA ENG 16.0 MedDRA_DDM\" is \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
 testRunner.And("the synonym list \"MedDRA ENG 16.0 MedDRA_DDM\" cannot be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
    testRunner.Then("a synonym for verbatim term \"HEADACHE\" should be created and not exist in list \"M" +
                    "edDRA ENG 16.0 MedDRA_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\" and autocoding Single path WhoDrug Direct Di" +
            "ctionary Matches; upon creation of the synonyms, they shall not be available to " +
            "download and the count shall not change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_002")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOnAndAutocodingSinglePathWhoDrugDirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallNotBeAvailableToDownloadAndTheCountShallNotChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\" and autocoding Single path WhoDrug Direct Di" +
                    "ctionary Matches; upon creation of the synonyms, they shall not be available to " +
                    "download and the count shall not change", new string[] {
                        "VAL",
                        "PBMCC_197253_002",
                        "Release2015.3.0"});
#line 49
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table3.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201306",
                        "ENG"});
#line 51
  testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table3, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table4.AddRow(new string[] {
                        "PAIN FREE",
                        "PRODUCT"});
            table4.AddRow(new string[] {
                        "METHANOL",
                        "PRODUCT"});
#line 54
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table4, "When ");
#line 58
 testRunner.Then("the number of synonyms for list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" is \"0\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 59
 testRunner.And("the synonym list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" cannot be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table5.AddRow(new string[] {
                        "PAIN FREE",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "false"});
            table5.AddRow(new string[] {
                        "METHANOL",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "false"});
#line 60
    testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\" and autocoding Single path JDrug Direct Dict" +
            "ionary Matches; upon creation of the synonyms, they shall not be available to do" +
            "wnload and the count shall not change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_003")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOnAndAutocodingSinglePathJDrugDirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallNotBeAvailableToDownloadAndTheCountShallNotChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\" and autocoding Single path JDrug Direct Dict" +
                    "ionary Matches; upon creation of the synonyms, they shall not be available to do" +
                    "wnload and the count shall not change", new string[] {
                        "VAL",
                        "PBMCC_197253_003",
                        "Release2015.3.0"});
#line 68
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table6.AddRow(new string[] {
                        "JDrug_DDM",
                        "JDrug",
                        "2013H1",
                        "JPN"});
#line 70
  testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table6, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table7.AddRow(new string[] {
                        "イマジニール３００",
                        "DrugName"});
#line 73
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table7, "When ");
#line 76
 testRunner.Then("the number of synonyms for list \"J-Drug JPN 2013H1 JDrug_DDM\" is \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 77
 testRunner.And("the synonym list \"J-Drug JPN 2013H1 JDrug_DDM\" cannot be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
    testRunner.And("a synonym for verbatim term \"イマジニール３００\" should be created and not exist in list \"" +
                    "J-Drug JPN 2013H1 JDrug_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\" and autocoding Single path MedDRA Direct Di" +
            "ctionary Matches; upon creation of the synonyms, they shall be available to down" +
            "load and the count shall change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_004")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOffAndAutocodingSinglePathMedDRADirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallBeAvailableToDownloadAndTheCountShallChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\" and autocoding Single path MedDRA Direct Di" +
                    "ctionary Matches; upon creation of the synonyms, they shall be available to down" +
                    "load and the count shall change", new string[] {
                        "VAL",
                        "PBMCC_197253_004",
                        "Release2015.3.0"});
#line 83
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table8.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 85
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table8, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table9.AddRow(new string[] {
                        "HEADACHE",
                        "LLT"});
#line 88
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table9, "When ");
#line 91
 testRunner.Then("the number of synonyms for list \"MedDRA ENG 16.0 MedDRA_DDM\" is \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 92
 testRunner.And("the synonym list \"MedDRA ENG 16.0 MedDRA_DDM\" can be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\" and autocoding Single path WhoDrug Direct D" +
            "ictionary Matches; upon creation of the synonyms, they shall be available to dow" +
            "nload and the count shall change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_005")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOffAndAutocodingSinglePathWhoDrugDirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallBeAvailableToDownloadAndTheCountShallChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\" and autocoding Single path WhoDrug Direct D" +
                    "ictionary Matches; upon creation of the synonyms, they shall be available to dow" +
                    "nload and the count shall change", new string[] {
                        "VAL",
                        "PBMCC_197253_005",
                        "Release2015.3.0"});
#line 97
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table10.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201306",
                        "ENG"});
#line 99
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table10, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table11.AddRow(new string[] {
                        "PAIN FREE",
                        "PRODUCT"});
            table11.AddRow(new string[] {
                        "METHANOL",
                        "PRODUCT"});
#line 102
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table11, "When ");
#line 106
 testRunner.Then("the number of synonyms for list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" is \"2\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 107
 testRunner.And("the synonym list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" can be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\" and autocoding Single path JDrug Direct Dic" +
            "tionary Matches; upon creation of the synonyms, they shall be available to downl" +
            "oad and the count shall change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_006")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOffAndAutocodingSinglePathJDrugDirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallBeAvailableToDownloadAndTheCountShallChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\" and autocoding Single path JDrug Direct Dic" +
                    "tionary Matches; upon creation of the synonyms, they shall be available to downl" +
                    "oad and the count shall change", new string[] {
                        "VAL",
                        "PBMCC_197253_006",
                        "Release2015.3.0"});
#line 112
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table12.AddRow(new string[] {
                        "JDrug_DDM",
                        "JDrug",
                        "2013H1",
                        "JPN"});
#line 114
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table12, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table13.AddRow(new string[] {
                        "イマジニール３００",
                        "DrugName"});
#line 117
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table13, "When ");
#line 120
 testRunner.Then("the number of synonyms for list \"J-Drug JPN 2013H1 JDrug_DDM\" is \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 121
 testRunner.And("the synonym list \"J-Drug JPN 2013H1 JDrug_DDM\" can be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\" and autocoding Multiple path MedDRA Direct D" +
            "ictionary Matches; upon creation of the synonyms, they shall not be available to" +
            " download and the count shall not change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_007")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOnAndAutocodingMultiplePathMedDRADirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallNotBeAvailableToDownloadAndTheCountShallNotChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\" and autocoding Multiple path MedDRA Direct D" +
                    "ictionary Matches; upon creation of the synonyms, they shall not be available to" +
                    " download and the count shall not change", new string[] {
                        "VAL",
                        "PBMCC_197253_007",
                        "Release2015.3.0"});
#line 126
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table14.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 128
   testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table14, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table15.AddRow(new string[] {
                        "BROKEN LEG",
                        "LLT"});
            table15.AddRow(new string[] {
                        "SWELLING ARM",
                        "LLT"});
            table15.AddRow(new string[] {
                        "PROFOUND VISION IMPAIRMENT, BOTH EYES",
                        "LLT"});
#line 131
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table15, "When ");
#line 136
 testRunner.Then("the number of synonyms for list \"MedDRA ENG 16.0 MedDRA_DDM\" is \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 137
 testRunner.And("the synonym list \"MedDRA ENG 16.0 MedDRA_DDM\" cannot be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table16.AddRow(new string[] {
                        "BROKEN LEG",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table16.AddRow(new string[] {
                        "SWELLING ARM",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table16.AddRow(new string[] {
                        "PROFOUND VISION IMPAIRMENT, BOTH EYES",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
#line 138
    testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table16, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\" and manual coding Multiple path WhoDrug Dire" +
            "ct Dictionary Matches; upon creation of the synonyms, they shall be available to" +
            " download and the count shall change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_008")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOnAndManualCodingMultiplePathWhoDrugDirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallBeAvailableToDownloadAndTheCountShallChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\" and manual coding Multiple path WhoDrug Dire" +
                    "ct Dictionary Matches; upon creation of the synonyms, they shall be available to" +
                    " download and the count shall change", new string[] {
                        "VAL",
                        "PBMCC_197253_008",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 148
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table17.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201306",
                        "ENG"});
#line 150
  testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table17, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table18.AddRow(new string[] {
                        "PAIN",
                        "PRODUCT"});
            table18.AddRow(new string[] {
                        "ADVIL COLD AND SINUS PLUS",
                        "PRODUCT"});
            table18.AddRow(new string[] {
                        "KANA",
                        "PRODUCT"});
            table18.AddRow(new string[] {
                        "STRONG PAIN",
                        "PRODUCT"});
#line 153
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table18, "When ");
#line 159
    testRunner.When("task \"PAIN\" is coded to term \"PAIN\" at search level \"Trade Name\" with code \"00027" +
                    "7 04 191\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
    testRunner.And("task \"ADVIL COLD AND SINUS PLUS\" is coded to term \"ADVIL COLD AND SINUS PLUS\" at " +
                    "search level \"Trade Name\" with code \"017171 01 003\" at level \"TN\" and a synonym " +
                    "is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
    testRunner.And("task \"KANA\" is coded to term \"KANA\" at search level \"Trade Name\" with code \"00391" +
                    "0 02 227\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
    testRunner.And("task \"STRONG PAIN\" is coded to term \"STRONG PAIN\" at search level \"Trade Name\" wi" +
                    "th code \"001164 01 143\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.Then("the number of synonyms for list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" is \"4\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 164
 testRunner.And("the synonym list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" can be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\" and autocoding Multiple path MedDRA Direct " +
            "Dictionary Matches; upon creation of the synonyms, they shall be available to do" +
            "wnload and the count shall change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_009")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOffAndAutocodingMultiplePathMedDRADirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallBeAvailableToDownloadAndTheCountShallChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\" and autocoding Multiple path MedDRA Direct " +
                    "Dictionary Matches; upon creation of the synonyms, they shall be available to do" +
                    "wnload and the count shall change", new string[] {
                        "VAL",
                        "PBMCC_197253_009",
                        "Release2015.3.0"});
#line 169
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table19.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 171
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table19, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table20.AddRow(new string[] {
                        "BROKEN LEG",
                        "LLT"});
            table20.AddRow(new string[] {
                        "SWELLING ARM",
                        "LLT"});
            table20.AddRow(new string[] {
                        "PROFOUND VISION IMPAIRMENT, BOTH EYES",
                        "LLT"});
#line 174
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table20, "When ");
#line 179
 testRunner.Then("the number of synonyms for list \"MedDRA ENG 16.0 MedDRA_DDM\" is \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 180
 testRunner.And("the synonym list \"MedDRA ENG 16.0 MedDRA_DDM\" can be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\" and manual coding Multiple path WhoDrug Dir" +
            "ect Dictionary Matches; upon creation of the synonyms, they shall be available t" +
            "o download and the count shall change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_010")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOffAndManualCodingMultiplePathWhoDrugDirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallBeAvailableToDownloadAndTheCountShallChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\" and manual coding Multiple path WhoDrug Dir" +
                    "ect Dictionary Matches; upon creation of the synonyms, they shall be available t" +
                    "o download and the count shall change", new string[] {
                        "VAL",
                        "PBMCC_197253_010",
                        "Release2015.3.0"});
#line 185
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table21.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201306",
                        "ENG"});
#line 187
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table21, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table22.AddRow(new string[] {
                        "PAIN",
                        "PRODUCT"});
            table22.AddRow(new string[] {
                        "ADVIL COLD AND SINUS PLUS",
                        "PRODUCT"});
            table22.AddRow(new string[] {
                        "KANA",
                        "PRODUCT"});
            table22.AddRow(new string[] {
                        "STRONG PAIN",
                        "PRODUCT"});
#line 190
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table22, "When ");
#line 196
    testRunner.When("task \"PAIN\" is coded to term \"PAIN\" at search level \"Trade Name\" with code \"00027" +
                    "7 04 191\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 197
    testRunner.And("task \"ADVIL COLD AND SINUS PLUS\" is coded to term \"ADVIL COLD AND SINUS PLUS\" at " +
                    "search level \"Trade Name\" with code \"017171 01 003\" at level \"TN\" and a synonym " +
                    "is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
    testRunner.And("task \"KANA\" is coded to term \"KANA\" at search level \"Trade Name\" with code \"00391" +
                    "0 02 227\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
    testRunner.And("task \"STRONG PAIN\" is coded to term \"STRONG PAIN\" at search level \"Trade Name\" wi" +
                    "th code \"001164 01 143\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
 testRunner.Then("the number of synonyms for list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" is \"4\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 201
 testRunner.And("the synonym list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" can be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\" and autocoding Single path MedDRA Direct Dic" +
            "tionary Matches; upon creation of the synonyms, they shall not be be displayed i" +
            "n the Synonym Details page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_011")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void WhenTheAutoApproveOptionIsOnAndAutocodingSinglePathMedDRADirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallNotBeBeDisplayedInTheSynonymDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\" and autocoding Single path MedDRA Direct Dic" +
                    "tionary Matches; upon creation of the synonyms, they shall not be be displayed i" +
                    "n the Synonym Details page", new string[] {
                        "VAL",
                        "PBMCC_197253_011",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000"});
#line 209
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table23.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 210
  testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table23, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table24.AddRow(new string[] {
                        "HEADACHE",
                        "LLT"});
            table24.AddRow(new string[] {
                        "FAKE TERM",
                        "LLT"});
#line 213
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table24, "When ");
#line 217
    testRunner.When("task \"FAKE TERM\" is coded to term \"Short-term memory loss\" at search level \"Low L" +
                    "evel Term\" with code \"10040602\" at level \"LLT\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 218
 testRunner.Then("The task count is \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table25.AddRow(new string[] {
                        "HEADACHE",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table25.AddRow(new string[] {
                        "FAKE TERM",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "true"});
#line 219
    testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table25, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\" and autocoding Single path WhoDrug Direct Di" +
            "ctionary Matches; upon creation of the synonyms, they shall not be be displayed " +
            "in the Synonym Details page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_012")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void WhenTheAutoApproveOptionIsOnAndAutocodingSinglePathWhoDrugDirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallNotBeBeDisplayedInTheSynonymDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\" and autocoding Single path WhoDrug Direct Di" +
                    "ctionary Matches; upon creation of the synonyms, they shall not be be displayed " +
                    "in the Synonym Details page", new string[] {
                        "VAL",
                        "PBMCC_197253_012",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000"});
#line 228
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table26.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201306",
                        "ENG"});
#line 230
  testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table26, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table27.AddRow(new string[] {
                        "PAIN FREE",
                        "PRODUCT"});
            table27.AddRow(new string[] {
                        "METHANOL",
                        "PRODUCT"});
            table27.AddRow(new string[] {
                        "FAKE TERM",
                        "PRODUCT"});
#line 233
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table27, "When ");
#line 238
    testRunner.When("task \"FAKE TERM\" is coded to term \"PLACEBO\" at search level \"Preferred Name\" with" +
                    " code \"900468 01 001\" at level \"PN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 239
 testRunner.Then("The task count is \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table28.AddRow(new string[] {
                        "PAIN FREE",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "false"});
            table28.AddRow(new string[] {
                        "METHANOL",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "false"});
            table28.AddRow(new string[] {
                        "FAKE TERM",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "true"});
#line 240
    testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table28, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\" and autocoding Single path JDrug Direct Dict" +
            "ionary Matches; upon creation of the synonyms, they shall not be be displayed in" +
            " the Synonym Details page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_013")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOnAndAutocodingSinglePathJDrugDirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallNotBeBeDisplayedInTheSynonymDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\" and autocoding Single path JDrug Direct Dict" +
                    "ionary Matches; upon creation of the synonyms, they shall not be be displayed in" +
                    " the Synonym Details page", new string[] {
                        "VAL",
                        "PBMCC_197253_013",
                        "Release2015.3.0"});
#line 249
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table29.AddRow(new string[] {
                        "JDrug_DDM",
                        "JDrug",
                        "2013H1",
                        "JPN"});
#line 251
  testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table29, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table30.AddRow(new string[] {
                        "イマジニール３００",
                        "DrugName"});
            table30.AddRow(new string[] {
                        "FAKE TERM",
                        "DrugName"});
#line 254
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table30, "When ");
#line 258
    testRunner.When("task \"FAKE TERM\" is coded to term \"イマジニール３５０\" at search level \"DrugName\" with cod" +
                    "e \"721941902\" at level \"薬\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 259
 testRunner.Then("The task count is \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table31.AddRow(new string[] {
                        "イマジニール３００",
                        "J-Drug JPN 2013H1 JDrug_DDM",
                        "false"});
            table31.AddRow(new string[] {
                        "FAKE TERM",
                        "J-Drug JPN 2013H1 JDrug_DDM",
                        "true"});
#line 260
    testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table31, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\" and autocoding Single path MedDRA Direct Di" +
            "ctionary Matches; upon creation of the synonyms, they shall be be displayed in t" +
            "he Synonym Details page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_014")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOffAndAutocodingSinglePathMedDRADirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallBeBeDisplayedInTheSynonymDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\" and autocoding Single path MedDRA Direct Di" +
                    "ctionary Matches; upon creation of the synonyms, they shall be be displayed in t" +
                    "he Synonym Details page", new string[] {
                        "VAL",
                        "PBMCC_197253_014",
                        "Release2015.3.0"});
#line 268
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table32.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 270
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table32, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table33.AddRow(new string[] {
                        "HEADACHE",
                        "LLT"});
#line 273
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table33, "When ");
#line 276
    testRunner.Then("a synonym for verbatim term \"HEADACHE\" should be created and exist in list \"MedDR" +
                    "A ENG 16.0 MedDRA_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\" and autocoding Single path WhoDrug Direct D" +
            "ictionary Matches; upon creation of the synonyms, they shall be be displayed in " +
            "the Synonym Details page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_015")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOffAndAutocodingSinglePathWhoDrugDirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallBeBeDisplayedInTheSynonymDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\" and autocoding Single path WhoDrug Direct D" +
                    "ictionary Matches; upon creation of the synonyms, they shall be be displayed in " +
                    "the Synonym Details page", new string[] {
                        "VAL",
                        "PBMCC_197253_015",
                        "Release2015.3.0"});
#line 281
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table34.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201306",
                        "ENG"});
#line 283
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table34, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table35.AddRow(new string[] {
                        "PAIN FREE",
                        "PRODUCT"});
            table35.AddRow(new string[] {
                        "METHANOL",
                        "PRODUCT"});
#line 286
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table35, "When ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table36.AddRow(new string[] {
                        "PAIN FREE",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "true"});
            table36.AddRow(new string[] {
                        "METHANOL",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "true"});
#line 290
    testRunner.Then("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table36, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\" and autocoding Single path JDrug Direct Dic" +
            "tionary Matches; upon creation of the synonyms, they shall be be displayed in th" +
            "e Synonym Details page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_016")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOffAndAutocodingSinglePathJDrugDirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallBeBeDisplayedInTheSynonymDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\" and autocoding Single path JDrug Direct Dic" +
                    "tionary Matches; upon creation of the synonyms, they shall be be displayed in th" +
                    "e Synonym Details page", new string[] {
                        "VAL",
                        "PBMCC_197253_016",
                        "Release2015.3.0"});
#line 298
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table37.AddRow(new string[] {
                        "JDrug_DDM",
                        "JDrug",
                        "2013H1",
                        "JPN"});
#line 300
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table37, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table38.AddRow(new string[] {
                        "イマジニール３００",
                        "DrugName"});
#line 303
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table38, "When ");
#line 306
    testRunner.Then("a synonym for verbatim term \"イマジニール３００\" should be created and exist in list \"J-Dr" +
                    "ug JPN 2013H1 JDrug_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\" and autocoding Multiple path MedDRA Direct D" +
            "ictionary Matches; upon creation of the synonyms, they shall not be be displayed" +
            " in the Synonym Details page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_017")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void WhenTheAutoApproveOptionIsOnAndAutocodingMultiplePathMedDRADirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallNotBeBeDisplayedInTheSynonymDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\" and autocoding Multiple path MedDRA Direct D" +
                    "ictionary Matches; upon creation of the synonyms, they shall not be be displayed" +
                    " in the Synonym Details page", new string[] {
                        "VAL",
                        "PBMCC_197253_017",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000"});
#line 312
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table39.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 314
   testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table39, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table40.AddRow(new string[] {
                        "BROKEN LEG",
                        "LLT"});
            table40.AddRow(new string[] {
                        "SWELLING ARM",
                        "LLT"});
            table40.AddRow(new string[] {
                        "PROFOUND VISION IMPAIRMENT, BOTH EYES",
                        "LLT"});
            table40.AddRow(new string[] {
                        "FAKE TERM",
                        "LLT"});
#line 317
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table40, "When ");
#line 323
    testRunner.When("task \"FAKE TERM\" is coded to term \"Short-term memory loss\" at search level \"Low L" +
                    "evel Term\" with code \"10040602\" at level \"LLT\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 324
 testRunner.Then("The task count is \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table41.AddRow(new string[] {
                        "BROKEN LEG",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table41.AddRow(new string[] {
                        "SWELLING ARM",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table41.AddRow(new string[] {
                        "PROFOUND VISION IMPAIRMENT, BOTH EYES",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table41.AddRow(new string[] {
                        "FAKE TERM",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "true"});
#line 325
    testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table41, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\" and manual coding Multiple path WhoDrug Dire" +
            "ct Dictionary Matches; upon creation of the synonyms, they shall be be displayed" +
            " in the Synonym Details page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_018")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void WhenTheAutoApproveOptionIsOnAndManualCodingMultiplePathWhoDrugDirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallBeBeDisplayedInTheSynonymDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\" and manual coding Multiple path WhoDrug Dire" +
                    "ct Dictionary Matches; upon creation of the synonyms, they shall be be displayed" +
                    " in the Synonym Details page", new string[] {
                        "VAL",
                        "PBMCC_197253_018",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000"});
#line 336
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table42.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201306",
                        "ENG"});
#line 338
  testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table42, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table43.AddRow(new string[] {
                        "PAIN",
                        "PRODUCT"});
            table43.AddRow(new string[] {
                        "ADVIL COLD AND SINUS PLUS",
                        "PRODUCT"});
            table43.AddRow(new string[] {
                        "KANA",
                        "PRODUCT"});
            table43.AddRow(new string[] {
                        "STRONG PAIN",
                        "PRODUCT"});
#line 341
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table43, "When ");
#line 347
    testRunner.When("task \"PAIN\" is coded to term \"PAIN\" at search level \"Trade Name\" with code \"00027" +
                    "7 04 191\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 348
    testRunner.And("task \"ADVIL COLD AND SINUS PLUS\" is coded to term \"ADVIL COLD AND SINUS PLUS\" at " +
                    "search level \"Trade Name\" with code \"017171 01 003\" at level \"TN\" and a synonym " +
                    "is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
    testRunner.And("task \"KANA\" is coded to term \"KANA\" at search level \"Trade Name\" with code \"00391" +
                    "0 02 227\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
    testRunner.And("task \"STRONG PAIN\" is coded to term \"STRONG PAIN\" at search level \"Trade Name\" wi" +
                    "th code \"001164 01 143\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table44.AddRow(new string[] {
                        "PAIN",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "true"});
            table44.AddRow(new string[] {
                        "ADVIL COLD AND SINUS PLUS",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "true"});
            table44.AddRow(new string[] {
                        "KANA",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "true"});
            table44.AddRow(new string[] {
                        "STRONG PAIN",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "true"});
#line 351
    testRunner.Then("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table44, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\" and autocoding Multiple path MedDRA Direct " +
            "Dictionary Matches; upon creation of the synonyms, they shall be be displayed in" +
            " the Synonym Details page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_019")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOffAndAutocodingMultiplePathMedDRADirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallBeBeDisplayedInTheSynonymDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\" and autocoding Multiple path MedDRA Direct " +
                    "Dictionary Matches; upon creation of the synonyms, they shall be be displayed in" +
                    " the Synonym Details page", new string[] {
                        "VAL",
                        "PBMCC_197253_019",
                        "Release2015.3.0"});
#line 361
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table45.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 363
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table45, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table46.AddRow(new string[] {
                        "BROKEN LEG",
                        "LLT"});
            table46.AddRow(new string[] {
                        "SWELLING ARM",
                        "LLT"});
            table46.AddRow(new string[] {
                        "PROFOUND VISION IMPAIRMENT, BOTH EYES",
                        "LLT"});
#line 366
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table46, "When ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table47.AddRow(new string[] {
                        "BROKEN LEG",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "true"});
            table47.AddRow(new string[] {
                        "SWELLING ARM",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "true"});
            table47.AddRow(new string[] {
                        "PROFOUND VISION IMPAIRMENT, BOTH EYES",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "true"});
#line 371
    testRunner.Then("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table47, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\" and manual coding Multiple path WhoDrug Dir" +
            "ect Dictionary Matches; upon creation of the synonyms, they shall be be displaye" +
            "d in the Synonym Details page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197253_020")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void WhenTheAutoApproveOptionIsOffAndManualCodingMultiplePathWhoDrugDirectDictionaryMatchesUponCreationOfTheSynonymsTheyShallBeBeDisplayedInTheSynonymDetailsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\" and manual coding Multiple path WhoDrug Dir" +
                    "ect Dictionary Matches; upon creation of the synonyms, they shall be be displaye" +
                    "d in the Synonym Details page", new string[] {
                        "VAL",
                        "PBMCC_197253_020",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000"});
#line 381
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table48.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201306",
                        "ENG"});
#line 383
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table48, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary Level"});
            table49.AddRow(new string[] {
                        "PAIN",
                        "PRODUCT"});
            table49.AddRow(new string[] {
                        "ADVIL COLD AND SINUS PLUS",
                        "PRODUCT"});
            table49.AddRow(new string[] {
                        "KANA",
                        "PRODUCT"});
            table49.AddRow(new string[] {
                        "STRONG PAIN",
                        "PRODUCT"});
#line 386
    testRunner.When("the following externally managed verbatim requests are made", ((string)(null)), table49, "When ");
#line 392
    testRunner.When("task \"PAIN\" is coded to term \"PAIN\" at search level \"Trade Name\" with code \"00027" +
                    "7 04 191\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 393
    testRunner.And("task \"ADVIL COLD AND SINUS PLUS\" is coded to term \"ADVIL COLD AND SINUS PLUS\" at " +
                    "search level \"Trade Name\" with code \"017171 01 003\" at level \"TN\" and a synonym " +
                    "is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 394
    testRunner.And("task \"KANA\" is coded to term \"KANA\" at search level \"Trade Name\" with code \"00391" +
                    "0 02 227\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 395
    testRunner.And("task \"STRONG PAIN\" is coded to term \"STRONG PAIN\" at search level \"Trade Name\" wi" +
                    "th code \"001164 01 143\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table50.AddRow(new string[] {
                        "PAIN",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "true"});
            table50.AddRow(new string[] {
                        "ADVIL COLD AND SINUS PLUS",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "true"});
            table50.AddRow(new string[] {
                        "KANA",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "true"});
            table50.AddRow(new string[] {
                        "STRONG PAIN",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "true"});
#line 396
    testRunner.Then("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table50, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
