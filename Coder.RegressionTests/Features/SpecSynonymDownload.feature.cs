// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.RegressionTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("This feature will demonstrate Coder\'s functionality on downloading a synonym list" +
        ".")]
    [NUnit.Framework.CategoryAttribute("specSynonymDownload.feature")]
    [NUnit.Framework.CategoryAttribute("CoderCore")]
    public partial class ThisFeatureWillDemonstrateCoderSFunctionalityOnDownloadingASynonymList_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SpecSynonymDownload.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "This feature will demonstrate Coder\'s functionality on downloading a synonym list" +
                    ".", @"This feature file contains cases for different sized environments. 
One set, for the lower environments, includes a smaller set of synonyms, approximately 3500. 
A 50K version has been created for production sized environments.

Objective evidence of the runs is kept as the uploaded and downloaded txt files. Their stored location is set in AdminSynonymSteps.cs.

_ The following environment configuration settings were enabled:

 Empty Synonym Lists Registered:
 Synonym List 1: MedDRA              (ENG) 12.0     Primary_List
 Synonym List 2: MedDRA              (ENG) 16.0     Primary_List

 Common Configurations:
 Configuration Name       | Declarative Browser Class | 
 Basic                    | BasicSetup                |", ProgrammingLanguage.CSharp, new string[] {
                        "specSynonymDownload.feature",
                        "CoderCore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Coder will allow a user to be able to download a synonym list file from the Synon" +
            "ym page.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_196257_001")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(600000)]
        public virtual void CoderWillAllowAUserToBeAbleToDownloadASynonymListFileFromTheSynonymPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Coder will allow a user to be able to download a synonym list file from the Synon" +
                    "ym page.", new string[] {
                        "VAL",
                        "PBMCC_196257_001",
                        "Release2015.3.0",
                        "IncreaseTimeout_600000"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table1.AddRow(new string[] {
                        "Primary_List",
                        "MedDRA",
                        "12.0",
                        "ENG"});
#line 26
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table1, "Given ");
#line 29
 testRunner.When("uploading synonym list file \"SynonymUpload_PrimaryList.txt\" to \"MedDRA ENG 12.0 P" +
                    "rimary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.Then("the loading of synonym list file \"SynonymUpload_PrimaryList.txt\" is completed wit" +
                    "hout errors", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
 testRunner.When("downloading a synonym list file from \"MedDRA ENG 12.0 Primary_List\" on the Synony" +
                    "m page to \"DownloadedSynonymListFile.txt\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.Then("the contents of the uploaded \"SynonymUpload_PrimaryList.txt\" and the downloaded \"" +
                    "DownloadedSynonymListFile.txt\" synonym list files match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Coder will allow a user to be able to download a synonym list file from the Synon" +
            "ym List page.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_196257_002")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(600000)]
        public virtual void CoderWillAllowAUserToBeAbleToDownloadASynonymListFileFromTheSynonymListPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Coder will allow a user to be able to download a synonym list file from the Synon" +
                    "ym List page.", new string[] {
                        "VAL",
                        "PBMCC_196257_002",
                        "Release2015.3.0",
                        "IncreaseTimeout_600000"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table2.AddRow(new string[] {
                        "Primary_List",
                        "MedDRA",
                        "12.0",
                        "ENG"});
#line 40
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table2, "Given ");
#line 43
 testRunner.When("uploading synonym list file \"SynonymUpload_PrimaryList.txt\" to \"MedDRA ENG 12.0 P" +
                    "rimary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.Then("the loading of synonym list file \"SynonymUpload_PrimaryList.txt\" is completed wit" +
                    "hout errors", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
 testRunner.When("downloading a synonym list file from \"MedDRA ENG 12.0 Primary_List\" on the Synony" +
                    "m List page to \"DownloadedSynonymListFile.txt\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.Then("the contents of the uploaded \"SynonymUpload_PrimaryList.txt\" and the downloaded \"" +
                    "DownloadedSynonymListFile.txt\" synonym list files match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Coder will allow a user to be able to download a large synonym list file from the" +
            " Synonym page.")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_196257_003")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(1200000)]
        public virtual void CoderWillAllowAUserToBeAbleToDownloadALargeSynonymListFileFromTheSynonymPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Coder will allow a user to be able to download a large synonym list file from the" +
                    " Synonym page.", new string[] {
                        "DFT",
                        "PBMCC_196257_003",
                        "Release2015.3.0",
                        "IncreaseTimeout_1200000",
                        "ignore"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table3.AddRow(new string[] {
                        "Primary_List",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 56
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table3, "Given ");
#line 59
 testRunner.When("uploading synonym list file \"SynonymUpload_PrimaryList_50K_MedDRA-Eng-160.txt\" to" +
                    " \"MedDRA ENG 16.0 Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
 testRunner.Then("the loading of synonym list file \"SynonymUpload_PrimaryList_50K_MedDRA-Eng-160.tx" +
                    "t\" is completed without errors", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 61
 testRunner.When("downloading a synonym list file from \"MedDRA ENG 16.0 Primary_List\" on the Synony" +
                    "m page to \"DownloadedSynonymListFile.txt\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.Then("the contents of the uploaded \"SynonymUpload_PrimaryList_50K_MedDRA-Eng-160.txt\" a" +
                    "nd the downloaded \"DownloadedSynonymListFile.txt\" synonym list files match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Coder will allow a user to be able to download a large synonym list file from the" +
            " Synonym List page.")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_196257_004")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(1200000)]
        public virtual void CoderWillAllowAUserToBeAbleToDownloadALargeSynonymListFileFromTheSynonymListPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Coder will allow a user to be able to download a large synonym list file from the" +
                    " Synonym List page.", new string[] {
                        "DFT",
                        "PBMCC_196257_004",
                        "Release2015.3.0",
                        "IncreaseTimeout_1200000",
                        "ignore"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table4.AddRow(new string[] {
                        "Primary_List",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 72
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table4, "Given ");
#line 75
 testRunner.When("uploading synonym list file \"SynonymUpload_PrimaryList_50K_MedDRA-Eng-160.txt\" to" +
                    " \"MedDRA ENG 16.0 Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
 testRunner.Then("the loading of synonym list file \"SynonymUpload_PrimaryList_50K_MedDRA-Eng-160.tx" +
                    "t\" is completed without errors", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 77
 testRunner.When("downloading a synonym list file from \"MedDRA ENG 16.0 Primary_List\" on the Synony" +
                    "m List page to \"DownloadedSynonymListFile.txt\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.Then("the contents of the uploaded \"SynonymUpload_PrimaryList_50K_MedDRA-Eng-160.txt\" a" +
                    "nd the downloaded \"DownloadedSynonymListFile.txt\" synonym list files match", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
