// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.RegressionTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Verifies Coder Task Query processing and display of information after a Study Mig" +
        "ration.")]
    [NUnit.Framework.CategoryAttribute("specTaskQueriesAfterStudyMigration.feature")]
    [NUnit.Framework.CategoryAttribute("CoderCore")]
    public partial class VerifiesCoderTaskQueryProcessingAndDisplayOfInformationAfterAStudyMigration_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specTaskQueriesAfterStudyMigration.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Verifies Coder Task Query processing and display of information after a Study Mig" +
                    "ration.", @"
When a task with a query reaches the completed state after a Study Migration, the queries shall be ""canceled by Coder"" (put in the ""Queued"" query status)
if their query status prior to the Study Migration was ""Open"" or ""Answered"".
When a task with a query reaches the completed state after a Study Migration, the queries shall not be changed
if their query status prior to the Study Migration was ""Cancelled"" or ""Closed"".

_ The following environment configuration settings were enabled:

 Synonym Lists Registered:
 Synonym List 1: MedDRA              (ENG) 16.0      Empty_List 
 Synonym List 2: MedDRA              (ENG) 16.0      Initial_List 
 Synonym List 3: MedDRA              (ENG) 16.1      New_Primary_List

 Common Configurations:   
 Basic                    
 Waiting Approval", ProgrammingLanguage.CSharp, new string[] {
                        "specTaskQueriesAfterStudyMigration.feature",
                        "CoderCore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall cancel queries with \"Open\" status if the a" +
            "ssociated terms with \"Waiting Manual Code\" status are placed in a complete state" +
            " due to path changes in new synonyms")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_001")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void STUDYMIGRATIONStudyMigrationsShallCancelQueriesWithOpenStatusIfTheAssociatedTermsWithWaitingManualCodeStatusArePlacedInACompleteStateDueToPathChangesInNewSynonyms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall cancel queries with \"Open\" status if the a" +
                    "ssociated terms with \"Waiting Manual Code\" status are placed in a complete state" +
                    " due to path changes in new synonyms", new string[] {
                        "DFT",
                        "PBMCC_205137_001",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000",
                        "ignore"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 29
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
   testRunner.And("a populated activated synonym list \"MedDRA ENG 16.1 New_Primary_List\" containing " +
                    "entry \"HEADACHES|10000396|LLT|LLT:10000396;PT:10073767;HLT:10028381;HLGT:1002839" +
                    "6;SOC:10010331|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
   testRunner.When("the query for new task \"HEADACHES\" with comment \"Severity?\" is \"Open\" with respon" +
                    "se \"Acute\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
   testRunner.And("reclassifying task \"HEADACHES\" with comment \"Reconfirm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Verbatim Term",
                        "Query Status",
                        "Query Text",
                        "Query Response",
                        "Open To",
                        "Query Notes",
                        "Time Stamp"});
            table1.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "",
                        "",
                        "",
                        "",
                        "<TimeStamp>"});
            table1.AddRow(new string[] {
                        "<SystemUser>",
                        "HEADACHES",
                        "Open",
                        "Severity?",
                        "Acute",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
            table1.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "Severity?",
                        "",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
#line 34
   testRunner.Then("the query history contains the following information", ((string)(null)), table1, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Action",
                        "Status",
                        "Verbatim Term",
                        "Comment",
                        "Time Stamp"});
            table2.AddRow(new string[] {
                        "<User>",
                        "Reclassify",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "Reconfirm",
                        "<TimeStamp>"});
            table2.AddRow(new string[] {
                        "<User>",
                        "",
                        "Completed",
                        "HEADACHES",
                        "Version Change - From MedDRA-16_0-English To MedDRA-16_1-English. Recoded due to " +
                            "synonym change across versions",
                        "<TimeStamp>"});
            table2.AddRow(new string[] {
                        "<User>",
                        "Open Query",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
#line 39
   testRunner.And("the Coding History contains following information", ((string)(null)), table2, "And ");
#line 44
   testRunner.And("the query status for task \"HEADACHES\" is \"Queued\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall cancel queries with \"Answered\" status if t" +
            "he associated terms with \"Waiting Manual Code\" status are placed in a complete s" +
            "tate due to path changes in new synonyms")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_002")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void STUDYMIGRATIONStudyMigrationsShallCancelQueriesWithAnsweredStatusIfTheAssociatedTermsWithWaitingManualCodeStatusArePlacedInACompleteStateDueToPathChangesInNewSynonyms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall cancel queries with \"Answered\" status if t" +
                    "he associated terms with \"Waiting Manual Code\" status are placed in a complete s" +
                    "tate due to path changes in new synonyms", new string[] {
                        "DFT",
                        "PBMCC_205137_002",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000",
                        "ignore"});
#line 52
this.ScenarioSetup(scenarioInfo);
#line 54
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
   testRunner.And("a populated activated synonym list \"MedDRA ENG 16.1 New_Primary_List\" containing " +
                    "entry \"HEADACHES|10000396|LLT|LLT:10000396;PT:10073767;HLT:10028381;HLGT:1002839" +
                    "6;SOC:10010331|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
   testRunner.When("the query for new task \"HEADACHES\" with comment \"Severity?\" is \"Answered\" with re" +
                    "sponse \"Acute\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
   testRunner.And("reclassifying task \"HEADACHES\" with comment \"Reconfirm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Verbatim Term",
                        "Query Status",
                        "Query Text",
                        "Query Response",
                        "Open To",
                        "Query Notes",
                        "Time Stamp"});
            table3.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "",
                        "",
                        "",
                        "",
                        "<TimeStamp>"});
            table3.AddRow(new string[] {
                        "<SystemUser>",
                        "HEADACHES",
                        "Answered",
                        "Severity?",
                        "Acute",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
            table3.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "Severity?",
                        "",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
#line 59
   testRunner.Then("the query history contains the following information", ((string)(null)), table3, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Action",
                        "Status",
                        "Verbatim Term",
                        "Comment",
                        "Time Stamp"});
            table4.AddRow(new string[] {
                        "<User>",
                        "Reclassify",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "Reconfirm",
                        "<TimeStamp>"});
            table4.AddRow(new string[] {
                        "<User>",
                        "",
                        "Completed",
                        "HEADACHES",
                        "Version Change - From MedDRA-16_0-English To MedDRA-16_1-English. Recoded due to " +
                            "synonym change across versions",
                        "<TimeStamp>"});
            table4.AddRow(new string[] {
                        "<User>",
                        "Open Query",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
#line 64
   testRunner.And("the Coding History contains following information", ((string)(null)), table4, "And ");
#line 69
   testRunner.And("the query status for task \"HEADACHES\" is \"Queued\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall not change the status of queries with \"Can" +
            "celled\" status if the associated terms with \"Waiting Manual Code\" status are pla" +
            "ced in a complete state due to path changes in new synonyms")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_003")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void STUDYMIGRATIONStudyMigrationsShallNotChangeTheStatusOfQueriesWithCancelledStatusIfTheAssociatedTermsWithWaitingManualCodeStatusArePlacedInACompleteStateDueToPathChangesInNewSynonyms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall not change the status of queries with \"Can" +
                    "celled\" status if the associated terms with \"Waiting Manual Code\" status are pla" +
                    "ced in a complete state due to path changes in new synonyms", new string[] {
                        "DFT",
                        "PBMCC_205137_003",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000",
                        "ignore"});
#line 77
this.ScenarioSetup(scenarioInfo);
#line 79
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 80
   testRunner.And("a populated activated synonym list \"MedDRA ENG 16.1 New_Primary_List\" containing " +
                    "entry \"HEADACHES|10000396|LLT|LLT:10000396;PT:10073767;HLT:10028381;HLGT:1002839" +
                    "6;SOC:10010331|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
   testRunner.When("the query for new task \"HEADACHES\" with comment \"Severity?\" is \"Cancelled\" with r" +
                    "esponse \"Acute\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
   testRunner.And("reclassifying task \"HEADACHES\" with comment \"Reconfirm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Verbatim Term",
                        "Query Status",
                        "Query Text",
                        "Query Response",
                        "Open To",
                        "Query Notes",
                        "Time Stamp"});
            table5.AddRow(new string[] {
                        "<SystemUser>",
                        "HEADACHES",
                        "Cancelled",
                        "Severity?",
                        "Acute",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
            table5.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "Severity?",
                        "",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
#line 84
   testRunner.Then("the query history contains the following information", ((string)(null)), table5, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Action",
                        "Status",
                        "Verbatim Term",
                        "Comment",
                        "Time Stamp"});
            table6.AddRow(new string[] {
                        "<User>",
                        "Reclassify",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "Reconfirm",
                        "<TimeStamp>"});
            table6.AddRow(new string[] {
                        "<User>",
                        "",
                        "Completed",
                        "HEADACHES",
                        "Version Change - From MedDRA-16_0-English To MedDRA-16_1-English. Recoded due to " +
                            "synonym change across versions",
                        "<TimeStamp>"});
            table6.AddRow(new string[] {
                        "<User>",
                        "Open Query",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
#line 88
   testRunner.And("the Coding History contains following information", ((string)(null)), table6, "And ");
#line 93
   testRunner.And("the query status for task \"HEADACHES\" is \"Cancelled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall not change the status of queries with \"Clo" +
            "sed\" status if the associated terms with \"Waiting Manual Code\" status are placed" +
            " in a complete state due to path changes in new synonyms")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_004")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void STUDYMIGRATIONStudyMigrationsShallNotChangeTheStatusOfQueriesWithClosedStatusIfTheAssociatedTermsWithWaitingManualCodeStatusArePlacedInACompleteStateDueToPathChangesInNewSynonyms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall not change the status of queries with \"Clo" +
                    "sed\" status if the associated terms with \"Waiting Manual Code\" status are placed" +
                    " in a complete state due to path changes in new synonyms", new string[] {
                        "DFT",
                        "PBMCC_205137_004",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000",
                        "ignore"});
#line 101
this.ScenarioSetup(scenarioInfo);
#line 103
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 104
   testRunner.And("a populated activated synonym list \"MedDRA ENG 16.1 New_Primary_List\" containing " +
                    "entry \"HEADACHES|10000396|LLT|LLT:10000396;PT:10073767;HLT:10028381;HLGT:1002839" +
                    "6;SOC:10010331|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
   testRunner.When("the query for new task \"HEADACHES\" with comment \"Severity?\" is \"Closed\" with resp" +
                    "onse \"Acute\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 106
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
   testRunner.And("reclassifying task \"HEADACHES\" with comment \"Reconfirm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Verbatim Term",
                        "Query Status",
                        "Query Text",
                        "Query Response",
                        "Open To",
                        "Query Notes",
                        "Time Stamp"});
            table7.AddRow(new string[] {
                        "<SystemUser>",
                        "HEADACHES",
                        "Closed",
                        "Severity?",
                        "Acute",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
            table7.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "Severity?",
                        "",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
#line 108
   testRunner.Then("the query history contains the following information", ((string)(null)), table7, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Action",
                        "Status",
                        "Verbatim Term",
                        "Comment",
                        "Time Stamp"});
            table8.AddRow(new string[] {
                        "<User>",
                        "Reclassify",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "Reconfirm",
                        "<TimeStamp>"});
            table8.AddRow(new string[] {
                        "<User>",
                        "",
                        "Completed",
                        "HEADACHES",
                        "Version Change - From MedDRA-16_0-English To MedDRA-16_1-English. Recoded due to " +
                            "synonym change across versions",
                        "<TimeStamp>"});
            table8.AddRow(new string[] {
                        "<User>",
                        "Open Query",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
#line 112
   testRunner.And("the Coding History contains following information", ((string)(null)), table8, "And ");
#line 117
   testRunner.And("the query status for task \"HEADACHES\" is \"Closed\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall cancel queries with \"Open\" status if the a" +
            "ssociated manually coded terms with \"Waiting Approval\" status are placed in a co" +
            "mplete state due to path changes in new synonyms")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_005")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void STUDYMIGRATIONStudyMigrationsShallCancelQueriesWithOpenStatusIfTheAssociatedManuallyCodedTermsWithWaitingApprovalStatusArePlacedInACompleteStateDueToPathChangesInNewSynonyms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall cancel queries with \"Open\" status if the a" +
                    "ssociated manually coded terms with \"Waiting Approval\" status are placed in a co" +
                    "mplete state due to path changes in new synonyms", new string[] {
                        "DFT",
                        "PBMCC_205137_005",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000",
                        "ignore"});
#line 125
this.ScenarioSetup(scenarioInfo);
#line 127
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 128
   testRunner.And("a populated activated synonym list \"MedDRA ENG 16.1 New_Primary_List\" containing " +
                    "entry \"HEADACHES|10000396|LLT|LLT:10000396;PT:10073767;HLT:10028381;HLGT:1002839" +
                    "6;SOC:10010331|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
   testRunner.When("the query for new task \"HEADACHES\" with comment \"Severity?\" is \"Open\" with respon" +
                    "se \"Acute\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
   testRunner.And("task \"HEADACHES\" is coded to term \"Acetabular dysplasia\" at search level \"Low Lev" +
                    "el Term\" with code \"10000396\" at level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
   testRunner.And("reclassifying task \"HEADACHES\" with comment \"Reconfirm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Verbatim Term",
                        "Query Status",
                        "Query Text",
                        "Query Response",
                        "Open To",
                        "Query Notes",
                        "Time Stamp"});
            table9.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "",
                        "",
                        "",
                        "",
                        "<TimeStamp>"});
            table9.AddRow(new string[] {
                        "<SystemUser>",
                        "HEADACHES",
                        "Open",
                        "Severity?",
                        "Acute",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
            table9.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "Severity?",
                        "",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
#line 133
   testRunner.Then("the query history contains the following information", ((string)(null)), table9, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Action",
                        "Status",
                        "Verbatim Term",
                        "Comment",
                        "Time Stamp"});
            table10.AddRow(new string[] {
                        "<User>",
                        "Reclassify",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "Reconfirm",
                        "<TimeStamp>"});
            table10.AddRow(new string[] {
                        "<User>",
                        "",
                        "Completed",
                        "HEADACHES",
                        "Version Change - From MedDRA-16_0-English To MedDRA-16_1-English. Recoded due to " +
                            "synonym change across versions",
                        "<TimeStamp>"});
            table10.AddRow(new string[] {
                        "<User>",
                        "Browse And Code",
                        "Waiting Approval",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
            table10.AddRow(new string[] {
                        "<User>",
                        "Open Query",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
#line 138
   testRunner.And("the Coding History contains following information", ((string)(null)), table10, "And ");
#line 144
   testRunner.And("the query status for task \"HEADACHES\" is \"Queued\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall cancel queries with \"Answered\" status if t" +
            "he associated manually coded terms with \"Waiting Approval\" status are placed in " +
            "a complete state due to path changes in new synonyms")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_006")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void STUDYMIGRATIONStudyMigrationsShallCancelQueriesWithAnsweredStatusIfTheAssociatedManuallyCodedTermsWithWaitingApprovalStatusArePlacedInACompleteStateDueToPathChangesInNewSynonyms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall cancel queries with \"Answered\" status if t" +
                    "he associated manually coded terms with \"Waiting Approval\" status are placed in " +
                    "a complete state due to path changes in new synonyms", new string[] {
                        "DFT",
                        "PBMCC_205137_006",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000",
                        "ignore"});
#line 152
this.ScenarioSetup(scenarioInfo);
#line 154
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 155
   testRunner.And("a populated activated synonym list \"MedDRA ENG 16.1 New_Primary_List\" containing " +
                    "entry \"HEADACHES|10000396|LLT|LLT:10000396;PT:10073767;HLT:10028381;HLGT:1002839" +
                    "6;SOC:10010331|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
   testRunner.When("the query for new task \"HEADACHES\" with comment \"Severity?\" is \"Answered\" with re" +
                    "sponse \"Acute\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 157
   testRunner.And("task \"HEADACHES\" is coded to term \"Acetabular dysplasia\" at search level \"Low Lev" +
                    "el Term\" with code \"10000396\" at level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
   testRunner.And("reclassifying task \"HEADACHES\" with comment \"Reconfirm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Verbatim Term",
                        "Query Status",
                        "Query Text",
                        "Query Response",
                        "Open To",
                        "Query Notes",
                        "Time Stamp"});
            table11.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "",
                        "",
                        "",
                        "",
                        "<TimeStamp>"});
            table11.AddRow(new string[] {
                        "<SystemUser>",
                        "HEADACHES",
                        "Answered",
                        "Severity?",
                        "Acute",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
            table11.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "Severity?",
                        "",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
#line 160
   testRunner.Then("the query history contains the following information", ((string)(null)), table11, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Action",
                        "Status",
                        "Verbatim Term",
                        "Comment",
                        "Time Stamp"});
            table12.AddRow(new string[] {
                        "<User>",
                        "Reclassify",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "Reconfirm",
                        "<TimeStamp>"});
            table12.AddRow(new string[] {
                        "<User>",
                        "",
                        "Completed",
                        "HEADACHES",
                        "Version Change - From MedDRA-16_0-English To MedDRA-16_1-English. Recoded due to " +
                            "synonym change across versions",
                        "<TimeStamp>"});
            table12.AddRow(new string[] {
                        "<User>",
                        "Browse And Code",
                        "Waiting Approval",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
            table12.AddRow(new string[] {
                        "<User>",
                        "Open Query",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
#line 165
   testRunner.And("the Coding History contains following information", ((string)(null)), table12, "And ");
#line 171
   testRunner.And("the query status for task \"HEADACHES\" is \"Queued\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall not change the status of queries with \"Can" +
            "celled\" status if the associated manually coded terms with \"Waiting Approval\" st" +
            "atus are placed in a complete state due to path changes in new synonyms")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_007")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void STUDYMIGRATIONStudyMigrationsShallNotChangeTheStatusOfQueriesWithCancelledStatusIfTheAssociatedManuallyCodedTermsWithWaitingApprovalStatusArePlacedInACompleteStateDueToPathChangesInNewSynonyms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall not change the status of queries with \"Can" +
                    "celled\" status if the associated manually coded terms with \"Waiting Approval\" st" +
                    "atus are placed in a complete state due to path changes in new synonyms", new string[] {
                        "DFT",
                        "PBMCC_205137_007",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000",
                        "ignore"});
#line 179
this.ScenarioSetup(scenarioInfo);
#line 181
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 182
   testRunner.And("a populated activated synonym list \"MedDRA ENG 16.1 New_Primary_List\" containing " +
                    "entry \"HEADACHES|10000396|LLT|LLT:10000396;PT:10073767;HLT:10028381;HLGT:1002839" +
                    "6;SOC:10010331|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
   testRunner.When("the query for new task \"HEADACHES\" with comment \"Severity?\" is \"Cancelled\" with r" +
                    "esponse \"Acute\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 184
   testRunner.And("task \"HEADACHES\" is coded to term \"Acetabular dysplasia\" at search level \"Low Lev" +
                    "el Term\" with code \"10000396\" at level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 186
   testRunner.And("reclassifying task \"HEADACHES\" with comment \"Reconfirm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Verbatim Term",
                        "Query Status",
                        "Query Text",
                        "Query Response",
                        "Open To",
                        "Query Notes",
                        "Time Stamp"});
            table13.AddRow(new string[] {
                        "<SystemUser>",
                        "HEADACHES",
                        "Cancelled",
                        "Severity?",
                        "Acute",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
            table13.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "Severity?",
                        "",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
#line 187
   testRunner.Then("the query history contains the following information", ((string)(null)), table13, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Action",
                        "Status",
                        "Verbatim Term",
                        "Comment",
                        "Time Stamp"});
            table14.AddRow(new string[] {
                        "<User>",
                        "Reclassify",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "Reconfirm",
                        "<TimeStamp>"});
            table14.AddRow(new string[] {
                        "<User>",
                        "",
                        "Completed",
                        "HEADACHES",
                        "Version Change - From MedDRA-16_0-English To MedDRA-16_1-English. Recoded due to " +
                            "synonym change across versions",
                        "<TimeStamp>"});
            table14.AddRow(new string[] {
                        "<User>",
                        "Browse And Code",
                        "Waiting Approval",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
            table14.AddRow(new string[] {
                        "<User>",
                        "Open Query",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
#line 191
   testRunner.And("the Coding History contains following information", ((string)(null)), table14, "And ");
#line 197
   testRunner.And("the query status for task \"HEADACHES\" is \"Cancelled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall not change the status of queries with \"Clo" +
            "sed\" status if the associated manually coded terms with \"Waiting Approval\" statu" +
            "s are placed in a complete state due to path changes in new synonyms")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_008")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void STUDYMIGRATIONStudyMigrationsShallNotChangeTheStatusOfQueriesWithClosedStatusIfTheAssociatedManuallyCodedTermsWithWaitingApprovalStatusArePlacedInACompleteStateDueToPathChangesInNewSynonyms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall not change the status of queries with \"Clo" +
                    "sed\" status if the associated manually coded terms with \"Waiting Approval\" statu" +
                    "s are placed in a complete state due to path changes in new synonyms", new string[] {
                        "DFT",
                        "PBMCC_205137_008",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000",
                        "ignore"});
#line 205
this.ScenarioSetup(scenarioInfo);
#line 207
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 208
   testRunner.And("a populated activated synonym list \"MedDRA ENG 16.1 New_Primary_List\" containing " +
                    "entry \"HEADACHES|10000396|LLT|LLT:10000396;PT:10073767;HLT:10028381;HLGT:1002839" +
                    "6;SOC:10010331|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
   testRunner.When("the query for new task \"HEADACHES\" with comment \"Severity?\" is \"Closed\" with resp" +
                    "onse \"Acute\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 210
   testRunner.And("task \"HEADACHES\" is coded to term \"Acetabular dysplasia\" at search level \"Low Lev" +
                    "el Term\" with code \"10000396\" at level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
   testRunner.And("reclassifying task \"HEADACHES\" with comment \"Reconfirm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Verbatim Term",
                        "Query Status",
                        "Query Text",
                        "Query Response",
                        "Open To",
                        "Query Notes",
                        "Time Stamp"});
            table15.AddRow(new string[] {
                        "<SystemUser>",
                        "HEADACHES",
                        "Closed",
                        "Severity?",
                        "Acute",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
            table15.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "Severity?",
                        "",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
#line 213
   testRunner.Then("the query history contains the following information", ((string)(null)), table15, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Action",
                        "Status",
                        "Verbatim Term",
                        "Comment",
                        "Time Stamp"});
            table16.AddRow(new string[] {
                        "<User>",
                        "Reclassify",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "Reconfirm",
                        "<TimeStamp>"});
            table16.AddRow(new string[] {
                        "<User>",
                        "",
                        "Completed",
                        "HEADACHES",
                        "Version Change - From MedDRA-16_0-English To MedDRA-16_1-English. Recoded due to " +
                            "synonym change across versions",
                        "<TimeStamp>"});
            table16.AddRow(new string[] {
                        "<User>",
                        "Browse And Code",
                        "Waiting Approval",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
            table16.AddRow(new string[] {
                        "<User>",
                        "Open Query",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
#line 217
   testRunner.And("the Coding History contains following information", ((string)(null)), table16, "And ");
#line 223
   testRunner.And("the query status for task \"HEADACHES\" is \"Closed\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall cancel queries with \"Open\" status if the a" +
            "ssociated manually coded terms with \"Waiting Approval\" status are placed in a co" +
            "mplete state due to synonyms to new terms")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_009")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void STUDYMIGRATIONStudyMigrationsShallCancelQueriesWithOpenStatusIfTheAssociatedManuallyCodedTermsWithWaitingApprovalStatusArePlacedInACompleteStateDueToSynonymsToNewTerms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall cancel queries with \"Open\" status if the a" +
                    "ssociated manually coded terms with \"Waiting Approval\" status are placed in a co" +
                    "mplete state due to synonyms to new terms", new string[] {
                        "DFT",
                        "PBMCC_205137_009",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000",
                        "ignore"});
#line 232
this.ScenarioSetup(scenarioInfo);
#line 234
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 235
   testRunner.And("a populated activated synonym list \"MedDRA ENG 16.1 New_Primary_List\" containing " +
                    "entry \"HEADACHES|10000396|LLT|LLT:10000396;PT:10073767;HLT:10028381;HLGT:1002839" +
                    "6;SOC:10010331|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 236
   testRunner.When("the query for new task \"HEADACHES\" with comment \"Severity?\" is \"Open\" with respon" +
                    "se \"Acute\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 237
   testRunner.And("task \"HEADACHES\" is coded to term \"Haemoglobinuria\" at search level \"Low Level Te" +
                    "rm\" with code \"10018906\" at level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 238
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
   testRunner.And("reclassifying task \"HEADACHES\" with comment \"Reconfirm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Verbatim Term",
                        "Query Status",
                        "Query Text",
                        "Query Response",
                        "Open To",
                        "Query Notes",
                        "Time Stamp"});
            table17.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "",
                        "",
                        "",
                        "",
                        "<TimeStamp>"});
            table17.AddRow(new string[] {
                        "<SystemUser>",
                        "HEADACHES",
                        "Open",
                        "Severity?",
                        "Acute",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
            table17.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "Severity?",
                        "",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
#line 240
   testRunner.Then("the query history contains the following information", ((string)(null)), table17, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Action",
                        "Status",
                        "Verbatim Term",
                        "Comment",
                        "Time Stamp"});
            table18.AddRow(new string[] {
                        "<User>",
                        "Reclassify",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "Reconfirm",
                        "<TimeStamp>"});
            table18.AddRow(new string[] {
                        "<User>",
                        "",
                        "Completed",
                        "HEADACHES",
                        "Version Change - From MedDRA-16_0-English To MedDRA-16_1-English. Recoded due to " +
                            "synonym change across versions",
                        "<TimeStamp>"});
            table18.AddRow(new string[] {
                        "<User>",
                        "Browse And Code",
                        "Waiting Approval",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
            table18.AddRow(new string[] {
                        "<User>",
                        "Open Query",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
#line 245
   testRunner.And("the Coding History contains following information", ((string)(null)), table18, "And ");
#line 251
   testRunner.And("the query status for task \"HEADACHES\" is \"Queued\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall cancel queries with \"Answered\" status if t" +
            "he associated manually coded terms with \"Waiting Approval\" status are placed in " +
            "a complete state due to synonyms to new terms")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_010")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void STUDYMIGRATIONStudyMigrationsShallCancelQueriesWithAnsweredStatusIfTheAssociatedManuallyCodedTermsWithWaitingApprovalStatusArePlacedInACompleteStateDueToSynonymsToNewTerms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall cancel queries with \"Answered\" status if t" +
                    "he associated manually coded terms with \"Waiting Approval\" status are placed in " +
                    "a complete state due to synonyms to new terms", new string[] {
                        "DFT",
                        "PBMCC_205137_010",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000",
                        "ignore"});
#line 260
this.ScenarioSetup(scenarioInfo);
#line 262
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 263
   testRunner.And("a populated activated synonym list \"MedDRA ENG 16.1 New_Primary_List\" containing " +
                    "entry \"HEADACHES|10000396|LLT|LLT:10000396;PT:10073767;HLT:10028381;HLGT:1002839" +
                    "6;SOC:10010331|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
   testRunner.When("the query for new task \"HEADACHES\" with comment \"Severity?\" is \"Answered\" with re" +
                    "sponse \"Acute\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 265
   testRunner.And("task \"HEADACHES\" is coded to term \"Haemoglobinuria\" at search level \"Low Level Te" +
                    "rm\" with code \"10018906\" at level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
   testRunner.And("reclassifying task \"HEADACHES\" with comment \"Reconfirm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Verbatim Term",
                        "Query Status",
                        "Query Text",
                        "Query Response",
                        "Open To",
                        "Query Notes",
                        "Time Stamp"});
            table19.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "",
                        "",
                        "",
                        "",
                        "<TimeStamp>"});
            table19.AddRow(new string[] {
                        "<SystemUser>",
                        "HEADACHES",
                        "Answered",
                        "Severity?",
                        "Acute",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
            table19.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "Severity?",
                        "",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
#line 268
   testRunner.Then("the query history contains the following information", ((string)(null)), table19, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Action",
                        "Status",
                        "Verbatim Term",
                        "Comment",
                        "Time Stamp"});
            table20.AddRow(new string[] {
                        "<User>",
                        "Reclassify",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "Reconfirm",
                        "<TimeStamp>"});
            table20.AddRow(new string[] {
                        "<User>",
                        "",
                        "Completed",
                        "HEADACHES",
                        "Version Change - From MedDRA-16_0-English To MedDRA-16_1-English. Recoded due to " +
                            "synonym change across versions",
                        "<TimeStamp>"});
            table20.AddRow(new string[] {
                        "<User>",
                        "Browse And Code",
                        "Waiting Approval",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
            table20.AddRow(new string[] {
                        "<User>",
                        "Open Query",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
#line 273
   testRunner.And("the Coding History contains following information", ((string)(null)), table20, "And ");
#line 279
   testRunner.And("the query status for task \"HEADACHES\" is \"Queued\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall not change the status of queries with \"Can" +
            "celled\" status if the associated manually coded terms with \"Waiting Approval\" st" +
            "atus are placed in a complete state due to synonyms to new terms")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_011")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void STUDYMIGRATIONStudyMigrationsShallNotChangeTheStatusOfQueriesWithCancelledStatusIfTheAssociatedManuallyCodedTermsWithWaitingApprovalStatusArePlacedInACompleteStateDueToSynonymsToNewTerms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall not change the status of queries with \"Can" +
                    "celled\" status if the associated manually coded terms with \"Waiting Approval\" st" +
                    "atus are placed in a complete state due to synonyms to new terms", new string[] {
                        "DFT",
                        "PBMCC_205137_011",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000",
                        "ignore"});
#line 288
this.ScenarioSetup(scenarioInfo);
#line 290
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 291
   testRunner.And("a populated activated synonym list \"MedDRA ENG 16.1 New_Primary_List\" containing " +
                    "entry \"HEADACHES|10000396|LLT|LLT:10000396;PT:10073767;HLT:10028381;HLGT:1002839" +
                    "6;SOC:10010331|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
   testRunner.When("the query for new task \"HEADACHES\" with comment \"Severity?\" is \"Cancelled\" with r" +
                    "esponse \"Acute\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 293
   testRunner.And("task \"HEADACHES\" is coded to term \"Haemoglobinuria\" at search level \"Low Level Te" +
                    "rm\" with code \"10018906\" at level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
   testRunner.And("reclassifying task \"HEADACHES\" with comment \"Reconfirm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Verbatim Term",
                        "Query Status",
                        "Query Text",
                        "Query Response",
                        "Open To",
                        "Query Notes",
                        "Time Stamp"});
            table21.AddRow(new string[] {
                        "<SystemUser>",
                        "HEADACHES",
                        "Cancelled",
                        "Severity?",
                        "Acute",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
            table21.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "Severity?",
                        "",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
#line 296
   testRunner.Then("the query history contains the following information", ((string)(null)), table21, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Action",
                        "Status",
                        "Verbatim Term",
                        "Comment",
                        "Time Stamp"});
            table22.AddRow(new string[] {
                        "<User>",
                        "Reclassify",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "Reconfirm",
                        "<TimeStamp>"});
            table22.AddRow(new string[] {
                        "<User>",
                        "",
                        "Completed",
                        "HEADACHES",
                        "Version Change - From MedDRA-16_0-English To MedDRA-16_1-English. Recoded due to " +
                            "synonym change across versions",
                        "<TimeStamp>"});
            table22.AddRow(new string[] {
                        "<User>",
                        "Browse And Code",
                        "Waiting Approval",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
            table22.AddRow(new string[] {
                        "<User>",
                        "Open Query",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
#line 300
   testRunner.And("the Coding History contains following information", ((string)(null)), table22, "And ");
#line 306
   testRunner.And("the query status for task \"HEADACHES\" is \"Cancelled\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall not change the status of queries with \"Clo" +
            "sed\" status if the associated manually coded terms with \"Waiting Approval\" statu" +
            "s are placed in a complete state due to synonyms to new terms")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_012")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void STUDYMIGRATIONStudyMigrationsShallNotChangeTheStatusOfQueriesWithClosedStatusIfTheAssociatedManuallyCodedTermsWithWaitingApprovalStatusArePlacedInACompleteStateDueToSynonymsToNewTerms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall not change the status of queries with \"Clo" +
                    "sed\" status if the associated manually coded terms with \"Waiting Approval\" statu" +
                    "s are placed in a complete state due to synonyms to new terms", new string[] {
                        "DFT",
                        "PBMCC_205137_012",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000",
                        "ignore"});
#line 315
this.ScenarioSetup(scenarioInfo);
#line 317
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 318
   testRunner.And("a populated activated synonym list \"MedDRA ENG 16.1 New_Primary_List\" containing " +
                    "entry \"HEADACHES|10000396|LLT|LLT:10000396;PT:10073767;HLT:10028381;HLGT:1002839" +
                    "6;SOC:10010331|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
   testRunner.When("the query for new task \"HEADACHES\" with comment \"Severity?\" is \"Closed\" with resp" +
                    "onse \"Acute\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 320
   testRunner.And("task \"HEADACHES\" is coded to term \"Haemoglobinuria\" at search level \"Low Level Te" +
                    "rm\" with code \"10018906\" at level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 321
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 322
   testRunner.And("reclassifying task \"HEADACHES\" with comment \"Reconfirm\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Verbatim Term",
                        "Query Status",
                        "Query Text",
                        "Query Response",
                        "Open To",
                        "Query Notes",
                        "Time Stamp"});
            table23.AddRow(new string[] {
                        "<SystemUser>",
                        "HEADACHES",
                        "Closed",
                        "Severity?",
                        "Acute",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
            table23.AddRow(new string[] {
                        "<User>",
                        "HEADACHES",
                        "Queued",
                        "Severity?",
                        "",
                        "SystemMarkingGroup",
                        "",
                        "<TimeStamp>"});
#line 323
   testRunner.Then("the query history contains the following information", ((string)(null)), table23, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Action",
                        "Status",
                        "Verbatim Term",
                        "Comment",
                        "Time Stamp"});
            table24.AddRow(new string[] {
                        "<User>",
                        "Reclassify",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "Reconfirm",
                        "<TimeStamp>"});
            table24.AddRow(new string[] {
                        "<User>",
                        "",
                        "Completed",
                        "HEADACHES",
                        "Version Change - From MedDRA-16_0-English To MedDRA-16_1-English. Recoded due to " +
                            "synonym change across versions",
                        "<TimeStamp>"});
            table24.AddRow(new string[] {
                        "<User>",
                        "Browse And Code",
                        "Waiting Approval",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
            table24.AddRow(new string[] {
                        "<User>",
                        "Open Query",
                        "Waiting Manual Code",
                        "HEADACHES",
                        "",
                        "<TimeStamp>"});
#line 327
   testRunner.And("the Coding History contains following information", ((string)(null)), table24, "And ");
#line 333
   testRunner.And("the query status for task \"HEADACHES\" is \"Closed\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall not change the status of queries with \"Que" +
            "ued\" status for associated terms with \"Not Affected\" migration impact status")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_013")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void STUDYMIGRATIONStudyMigrationsShallNotChangeTheStatusOfQueriesWithQueuedStatusForAssociatedTermsWithNotAffectedMigrationImpactStatus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall not change the status of queries with \"Que" +
                    "ued\" status for associated terms with \"Not Affected\" migration impact status", new string[] {
                        "VAL",
                        "PBMCC_205137_013",
                        "Release2015.3.0"});
#line 338
this.ScenarioSetup(scenarioInfo);
#line 340
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 341
   testRunner.And("an activated synonym list \"MedDRA ENG 16.1 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 342
   testRunner.When("I open a query for new task \"HEADACHES\" with comment \"Severity?\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 343
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 344
   testRunner.Then("the query status for task \"HEADACHES\" is \"Queued\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("STUDY MIGRATION Study migrations shall not change the status of queries for assoc" +
            "iated terms with \"Not Affected\" migration impact status")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_205137_014")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.TestCaseAttribute("Open", null)]
        [NUnit.Framework.TestCaseAttribute("Answered", null)]
        [NUnit.Framework.TestCaseAttribute("Closed", null)]
        [NUnit.Framework.TestCaseAttribute("Cancelled", null)]
        public virtual void STUDYMIGRATIONStudyMigrationsShallNotChangeTheStatusOfQueriesForAssociatedTermsWithNotAffectedMigrationImpactStatus(string queryStatus, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "VAL",
                    "PBMCC_205137_014",
                    "Release2015.3.0"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("STUDY MIGRATION Study migrations shall not change the status of queries for assoc" +
                    "iated terms with \"Not Affected\" migration impact status", @__tags);
#line 349
this.ScenarioSetup(scenarioInfo);
#line 351
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 16.0 Empty_List\" c" +
                    "ontaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 352
   testRunner.And("an activated synonym list \"MedDRA ENG 16.1 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
   testRunner.When(string.Format("the query for new task \"HEADACHES\" with comment \"Severity?\" is \"{0}\" with respons" +
                        "e \"Acute\"", queryStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 354
   testRunner.And("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
   testRunner.Then(string.Format("the query status for task \"HEADACHES\" is \"{0}\"", queryStatus), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
