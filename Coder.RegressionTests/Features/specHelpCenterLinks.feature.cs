// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.RegressionTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Verify user is able to view Help Center content from all Coder pages")]
    [NUnit.Framework.CategoryAttribute("specHelpCenterLinks.feature")]
    [NUnit.Framework.CategoryAttribute("CoderCore")]
    public partial class VerifyUserIsAbleToViewHelpCenterContentFromAllCoderPagesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specHelpCenterLinks.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Verify user is able to view Help Center content from all Coder pages", "", ProgrammingLanguage.CSharp, new string[] {
                        "specHelpCenterLinks.feature",
                        "CoderCore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 15" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Help Center Content is viewable from Coder Tasks Page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC177584_01")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void VerifyHelpCenterContentIsViewableFromCoderTasksPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Help Center Content is viewable from Coder Tasks Page", new string[] {
                        "VAL",
                        "PBMCC177584_01",
                        "Release2015.3.0"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 13
    testRunner.When("accessing help center content \"Help Center\" for Tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
    testRunner.Then("the help center header should be \"Submit A Request\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Help Center Content is viewable from Coder Administration Pages")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC177584_02")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.TestCaseAttribute("Reclassification", null)]
        [NUnit.Framework.TestCaseAttribute("Synonym", null)]
        [NUnit.Framework.TestCaseAttribute("Synonym List", null)]
        [NUnit.Framework.TestCaseAttribute("Synonym Approval", null)]
        [NUnit.Framework.TestCaseAttribute("Study Impact Analysis", null)]
        [NUnit.Framework.TestCaseAttribute("Configuration", null)]
        [NUnit.Framework.TestCaseAttribute("Create Workflow Role", null)]
        [NUnit.Framework.TestCaseAttribute("Assign Workflow Role", null)]
        [NUnit.Framework.TestCaseAttribute("Create General Role", null)]
        [NUnit.Framework.TestCaseAttribute("Assign General Role", null)]
        [NUnit.Framework.TestCaseAttribute("Project Registration", null)]
        public virtual void VerifyHelpCenterContentIsViewableFromCoderAdministrationPages(string adminPage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "VAL",
                    "PBMCC177584_02",
                    "Release2015.3.0"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Help Center Content is viewable from Coder Administration Pages", @__tags);
#line 19
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 20
    testRunner.When(string.Format("accessing help center content \"Help Center\" for \"{0}\"", adminPage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
    testRunner.Then("the help center header should be \"Submit A Request\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Help Center Content is viewable from Coder Report Pages")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC177584_03")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.TestCaseAttribute("Coding Decisions Report", null)]
        [NUnit.Framework.TestCaseAttribute("Study Report", null)]
        [NUnit.Framework.TestCaseAttribute("Coding History Report", null)]
        [NUnit.Framework.TestCaseAttribute("Ingredient Report", null)]
        public virtual void VerifyHelpCenterContentIsViewableFromCoderReportPages(string reportPage, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "VAL",
                    "PBMCC177584_03",
                    "Release2015.3.0"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Help Center Content is viewable from Coder Report Pages", @__tags);
#line 41
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 42
    testRunner.When(string.Format("accessing help center content \"Help Center\" for \"{0}\" report", reportPage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
    testRunner.Then("the help center header should be \"Submit A Request\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
