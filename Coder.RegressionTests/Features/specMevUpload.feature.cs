// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.RegressionTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("This feature file verifies the functionality for Manage External Verbatim\'s CSV u" +
        "pload capabilities through the Manage External Verbatims page.")]
    [NUnit.Framework.CategoryAttribute("specMevUpload.feature")]
    [NUnit.Framework.CategoryAttribute("CoderCore")]
    public partial class ThisFeatureFileVerifiesTheFunctionalityForManageExternalVerbatimSCSVUploadCapabilitiesThroughTheManageExternalVerbatimsPage_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specMevUpload.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "This feature file verifies the functionality for Manage External Verbatim\'s CSV u" +
                    "pload capabilities through the Manage External Verbatims page.", "", ProgrammingLanguage.CSharp, new string[] {
                        "specMevUpload.feature",
                        "CoderCore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verbatim Term information will be uploaded successfully in the system with a CSV " +
            "file format and the corresponding task upload history will be displayed")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_168481_001")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void VerbatimTermInformationWillBeUploadedSuccessfullyInTheSystemWithACSVFileFormatAndTheCorrespondingTaskUploadHistoryWillBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verbatim Term information will be uploaded successfully in the system with a CSV " +
                    "file format and the corresponding task upload history will be displayed", new string[] {
                        "VAL",
                        "PBMCC_168481_001",
                        "Release2015.3.0"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 11" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Supplemental Field 1",
                        "Supplemental Value 1",
                        "Dictionary",
                        "Dictionary Level",
                        "Is Approval Required",
                        "Is Auto Approval"});
            table1.AddRow(new string[] {
                        "Major Big Painful Headache",
                        "SupFieldA",
                        "Sup1",
                        "MedDRA",
                        "LLT",
                        "FALSE",
                        "TRUE"});
#line 11
 testRunner.When("uploading MEV content", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term"});
            table2.AddRow(new string[] {
                        "MAJOR BIG PAINFUL HEADACHE"});
#line 14
 testRunner.Then("the coding task has the following information", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify success message with file name is displayed on the Coder Success Alert")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_168481_002")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void VerifySuccessMessageWithFileNameIsDisplayedOnTheCoderSuccessAlert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify success message with file name is displayed on the Coder Success Alert", new string[] {
                        "VAL",
                        "PBMCC_168481_002",
                        "Release2015.3.0"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 11" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Supplemental Field 1",
                        "Supplemental Value 1",
                        "Dictionary",
                        "Dictionary Level",
                        "Is Approval Required",
                        "Is Auto Approval"});
            table3.AddRow(new string[] {
                        "Major Big Painful Headache",
                        "SupFieldA",
                        "Sup1",
                        "MedDRA",
                        "LLT",
                        "FALSE",
                        "TRUE"});
#line 24
 testRunner.When("uploading MEV content", ((string)(null)), table3, "When ");
#line 27
 testRunner.Then("the user should be notified with the following message \"Csv file <MevFileName> fo" +
                    "rmat validated. Starting task import.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify multiple csv files can be uploaded")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_168481_003")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void VerifyMultipleCsvFilesCanBeUploaded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify multiple csv files can be uploaded", new string[] {
                        "VAL",
                        "PBMCC_168481_003",
                        "Release2015.3.0"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table4.AddRow(new string[] {
                        "Primary",
                        "MedDRA",
                        "11.0",
                        "ENG"});
            table4.AddRow(new string[] {
                        "Primary",
                        "WhoDrugDDEB2",
                        "201506",
                        "ENG"});
#line 34
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table4, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary",
                        "Dictionary Level",
                        "Is Approval Required",
                        "Is Auto Approval"});
            table5.AddRow(new string[] {
                        "Major Big Painful Headache",
                        "MedDRA",
                        "LLT",
                        "FALSE",
                        "TRUE"});
#line 38
 testRunner.When("uploading MEV content", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary",
                        "Dictionary Level",
                        "Is Approval Required",
                        "Is Auto Approval"});
            table6.AddRow(new string[] {
                        "Headache",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table6.AddRow(new string[] {
                        "Allergy to Venom",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table6.AddRow(new string[] {
                        "\"Acute gastrojejunal ulcer w/o mention of hem or perf, w/o ment of obstruction\"",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table6.AddRow(new string[] {
                        "\"Large Headache &#xD &#xA;\"",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table6.AddRow(new string[] {
                        "\"HEAD !@#$%^&#38;*()_+={}[]&lt;&gt;?;~\\/*-&#96; PAIN\"",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table6.AddRow(new string[] {
                        "\"He\'a\'d \"Pain\"\"",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table6.AddRow(new string[] {
                        "Russell\'s viper venom time normal",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table6.AddRow(new string[] {
                        "Blood Builder",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table6.AddRow(new string[] {
                        "SPIDER VENOM ANTISERUM",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table6.AddRow(new string[] {
                        "ABSENOR                            /00228501/",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table6.AddRow(new string[] {
                        "\"ACIDO !@#$%^&#38;*()_+={}[]&lt;&gt;?;~\\/*-&#96; Vital\"",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table6.AddRow(new string[] {
                        "APO IBUPROFEN",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table6.AddRow(new string[] {
                        "3-BENZHYDRYLOXY-8-ISOPROPYL-NORTROPAN MESILA.",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table6.AddRow(new string[] {
                        "FERRANIN COMPLEX",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
#line 41
 testRunner.And("uploading MEV content", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "File Name",
                        "Uploaded",
                        "User",
                        "Status",
                        "Succeeded",
                        "Failed"});
            table7.AddRow(new string[] {
                        "2",
                        "<TimeStamp>",
                        "<UserDisplayName>",
                        "Upload Completed",
                        "14",
                        "0"});
            table7.AddRow(new string[] {
                        "1",
                        "<TimeStamp>",
                        "<UserDisplayName>",
                        "Upload Completed",
                        "1",
                        "0"});
#line 57
 testRunner.Then("the uploaded coding tasks has the following information", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verbatim Term supplemental information will be captured from the uploaded file")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_168481_004")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void VerbatimTermSupplementalInformationWillBeCapturedFromTheUploadedFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verbatim Term supplemental information will be captured from the uploaded file", new string[] {
                        "VAL",
                        "PBMCC_168481_004",
                        "Release2015.3.0"});
#line 67
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table8.AddRow(new string[] {
                        "Primary",
                        "MedDRA",
                        "11.0",
                        "ENG"});
            table8.AddRow(new string[] {
                        "Primary",
                        "WhoDrugDDEB2",
                        "201506",
                        "ENG"});
#line 69
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table8, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Supplemental Field 1",
                        "Supplemental Value 1",
                        "Supplemental Field 2",
                        "Supplemental Value 2",
                        "Supplemental Field 3",
                        "Supplemental Value 3",
                        "Supplemental Field 4",
                        "Supplemental Value 4",
                        "Supplemental Field 5",
                        "Supplemental Value 5",
                        "Dictionary",
                        "Dictionary Level",
                        "Is Approval Required",
                        "Is Auto Approval"});
            table9.AddRow(new string[] {
                        "Headache",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table9.AddRow(new string[] {
                        "Allergy to Venom",
                        "SupTermFieldA",
                        "Sup Term Value 1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table9.AddRow(new string[] {
                        "\"Acute gastrojejunal ulcer w/o mention of hem or perf, w/o ment of obstruction\"",
                        "SupTermFieldA",
                        "\"Sup w/o obstruction\"",
                        "SupTermFieldB",
                        "Sup Term Value 2",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table9.AddRow(new string[] {
                        "\"Large Headache &#xD &#xA;\"",
                        "SupTermFieldA",
                        "Sup &#xD &#xA; Value",
                        "SupTermFieldB",
                        "\" =lue2 \"",
                        "SupTermFieldC",
                        "\" Sup &#xDxA;\"",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table9.AddRow(new string[] {
                        "\"HEAD !@#$%^&#38;*()_+={}[]&lt;&gt;?;~\\/*-&#96; PAIN\"",
                        "SupTermFieldA",
                        "\"Sup/*-&#96; PAIN\"",
                        "SupTermFieldB",
                        "Sup Term Value 2",
                        "SupTermFieldC",
                        "Sup Term Value 3",
                        "SupTermFieldD",
                        "\"Su*-&#96; PAIN\"",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table9.AddRow(new string[] {
                        "\"He\'a\'d \"Pain\"\"",
                        "SupTermFieldA",
                        "\"Sup He\'a\'d \"Pain\"\"",
                        "SupTermFieldB",
                        "Sup Term Value 2",
                        "SupTermFieldC",
                        "Sup Term Value 3",
                        "SupTermFieldD",
                        "Sup Term Value 4",
                        "SupTermFieldE",
                        "Sup Term Value 5",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table9.AddRow(new string[] {
                        "Russell\'s viper venom time normal",
                        "",
                        "MedDRA",
                        "",
                        "",
                        "SupTermFieldC",
                        "Sup Term Value 3",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table9.AddRow(new string[] {
                        "Blood Builder",
                        "",
                        "MedDRA",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table9.AddRow(new string[] {
                        "SPIDER VENOM ANTISERUM",
                        "SupTermFieldA",
                        "Sup Term Value 1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table9.AddRow(new string[] {
                        "ABSENOR                            /00228501/",
                        "SupTermFieldA",
                        "Sup Term Value 1",
                        "SupTermFieldB",
                        "Sup Term Value 2",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table9.AddRow(new string[] {
                        "\"ACIDO !@#$%^&#38;*()_+={}[]&lt;&gt;?;~\\/*-&#96; Vital\"",
                        "SupTermFieldA",
                        "Sup Term Value 1",
                        "SupTermFieldB",
                        "Sup Term Value 2",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table9.AddRow(new string[] {
                        "APO IBUPROFEN",
                        "SupTermFieldA",
                        "Sup Term Value 1",
                        "SupTermFieldB",
                        "Sup Term Value 2",
                        "SupTermFieldC",
                        "Sup Term Value 3",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table9.AddRow(new string[] {
                        "3-BENZHYDRYLOXY-8-ISOPROPYL-NORTROPAN MESILA.",
                        "SupTermFieldA",
                        "Sup Term Value 1",
                        "SupTermFieldB",
                        "Sup Term Value 2",
                        "SupTermFieldC",
                        "Sup Term Value 3",
                        "SupTermFieldD",
                        "Sup Term Value 4",
                        "SupTermFieldE",
                        "Sup Term Value 5",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
            table9.AddRow(new string[] {
                        "FERRANIN COMPLEX",
                        "",
                        "",
                        "",
                        "",
                        "SupTermFieldC",
                        "Sup Term Value 3",
                        "SupTermFieldD",
                        "Sup Term Value 4",
                        "SupTermFieldE",
                        "Sup Term Value 5",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE"});
#line 73
 testRunner.When("uploading MEV content", ((string)(null)), table9, "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term",
                        "Value"});
            table10.AddRow(new string[] {
                        "SupTermFieldA",
                        "Sup Term Value 1"});
            table10.AddRow(new string[] {
                        "SupTermFieldB",
                        "Sup Term Value 2"});
            table10.AddRow(new string[] {
                        "SupTermFieldC",
                        "Sup Term Value 3"});
            table10.AddRow(new string[] {
                        "SupTermFieldD",
                        "Sup Term Value 4"});
            table10.AddRow(new string[] {
                        "SupTermFieldE",
                        "Sup Term Value 5"});
#line 89
 testRunner.Then("the \"3-BENZHYDRYLOXY-8-ISOPROPYL-NORTROPAN MESILA.\" task has the following supple" +
                    "mental information", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Japanese Verbatim Terms are able to be uploaded into the system in different stat" +
            "uses")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_168481_005")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void JapaneseVerbatimTermsAreAbleToBeUploadedIntoTheSystemInDifferentStatuses()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Japanese Verbatim Terms are able to be uploaded into the system in different stat" +
                    "uses", new string[] {
                        "DFT",
                        "PBMCC_168481_005",
                        "Release2015.3.0"});
#line 101
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table11.AddRow(new string[] {
                        "Primary",
                        "MedDRA",
                        "16.0",
                        "JPN"});
            table11.AddRow(new string[] {
                        "Primary",
                        "JDrug",
                        "2013H1",
                        "JPN"});
#line 103
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table11, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Dictionary",
                        "Dictionary Level",
                        "Is Approval Required",
                        "Is Auto Approval",
                        "Locale"});
            table12.AddRow(new string[] {
                        "適応障害ＮＯＳ",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "TRUE",
                        "jpn"});
            table12.AddRow(new string[] {
                        "ボレリア・ブルグドルフェリ免疫グロブリンＧ",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE",
                        "jpn"});
            table12.AddRow(new string[] {
                        "体外回路内血液凝固",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE",
                        "jpn"});
            table12.AddRow(new string[] {
                        "\"\"\"わたし &#xD &#xA;\"\"\"",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE",
                        "jpn"});
            table12.AddRow(new string[] {
                        "\"\"\"エンテロバクター・アグロメランス感染 !@#$%^&#38;*()_+={}[]&lt;&gt;?;~\\/*-&#96; 日本語\"\"\"",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "TRUE",
                        "jpn"});
            table12.AddRow(new string[] {
                        "\"\"\"あなた\'アメリカ\'簡単 \"\"ＦＢＳＳ\"\"\"\"\"",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE",
                        "jpn"});
            table12.AddRow(new string[] {
                        "小児期崩壊性障害",
                        "MedDRA",
                        "PT",
                        "TRUE",
                        "FALSE",
                        "jpn"});
            table12.AddRow(new string[] {
                        "アセチルコリン塩化物漢字ひらがなカタカナ万葉仮名変体仮名オㇹ oh",
                        "JDrug",
                        "DrugName",
                        "TRUE",
                        "TRUE",
                        "jpn"});
            table12.AddRow(new string[] {
                        "治療を主目的としない医薬品",
                        "JDrug",
                        "HighLevelClass",
                        "TRUE",
                        "TRUE",
                        "jpn"});
            table12.AddRow(new string[] {
                        "公衆衛生用薬",
                        "JDrug",
                        "MidLevelClass",
                        "TRUE",
                        "FALSE",
                        "jpn"});
            table12.AddRow(new string[] {
                        "\"\"\"コカアルカロイド系製剤\"\"\"",
                        "JDrug",
                        "LowLevelClass",
                        "TRUE",
                        "TRUE",
                        "jpn"});
            table12.AddRow(new string[] {
                        "アヘンチンキ",
                        "JDrug",
                        "DetailedClass",
                        "TRUE",
                        "FALSE",
                        "jpn"});
            table12.AddRow(new string[] {
                        "内",
                        "JDrug",
                        "DrugName",
                        "TRUE",
                        "FALSE",
                        "jpn"});
            table12.AddRow(new string[] {
                        "\"ｱﾍﾝﾁﾝｷ\"",
                        "JDrug",
                        "DrugName",
                        "TRUE",
                        "FALSE",
                        "jpn"});
#line 107
 testRunner.When("uploading MEV content and AutoCoding is complete", ((string)(null)), table12, "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term"});
            table13.AddRow(new string[] {
                        "アセチルコリン塩化物漢字ひらがなカタカナ万葉仮名変体仮名オㇹ OH"});
            table13.AddRow(new string[] {
                        "ボレリア・ブルグドルフェリ免疫グロブリンＧ"});
            table13.AddRow(new string[] {
                        "体外回路内血液凝固"});
#line 123
 testRunner.Then("the coding task has the following information", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Japanese Supplemental information is able to be uploaded fine into the system")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_168481_005a")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void JapaneseSupplementalInformationIsAbleToBeUploadedFineIntoTheSystem()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Japanese Supplemental information is able to be uploaded fine into the system", new string[] {
                        "VAL",
                        "PBMCC_168481_005a",
                        "Release2015.3.0"});
#line 133
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table14.AddRow(new string[] {
                        "Primary",
                        "MedDRA",
                        "16.0",
                        "JPN"});
            table14.AddRow(new string[] {
                        "Primary",
                        "JDrug",
                        "2013H1",
                        "JPN"});
#line 135
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table14, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Supplemental Field 1",
                        "Supplemental Value 1",
                        "Supplemental Field 2",
                        "Supplemental Value 2",
                        "Supplemental Field 3",
                        "Supplemental Value 3",
                        "Supplemental Field 4",
                        "Supplemental Value 4",
                        "Supplemental Field 5",
                        "Supplemental Value 5",
                        "Dictionary",
                        "Dictionary Level",
                        "Is Approval Required",
                        "Is Auto Approval",
                        "Locale"});
            table15.AddRow(new string[] {
                        "適応障害ＮＯＳ",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "TRUE",
                        "jpn"});
            table15.AddRow(new string[] {
                        "ボレリア・ブルグドルフェリ免疫グロブリンＧ",
                        "SupTermFieldA",
                        "ブルグドルフェリ免疫グ",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE",
                        "jpn"});
            table15.AddRow(new string[] {
                        "\"\"\"体外回路内血液凝固ㇰ ㇱ ㇲ ㇳ ㇴ ㇵ ㇶ ㇷ ㇸ ㇹ ㇺ ㇻ ㇼ ㇽ ㇾ ㇿ\"\"\"",
                        "SupTermFieldA",
                        "\"Sブリ免疫グction\"",
                        "SupTermFieldB",
                        "アメリカ",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "FALSE",
                        "TRUE",
                        "jpn"});
            table15.AddRow(new string[] {
                        "\"\"\"わたし &#xD &#xA;\"\"\"",
                        "SupTermFieldA",
                        "ブtestグA; Value",
                        "SupTermFieldB",
                        "\"\"  &#xD &#x",
                        "SupTermFieldC",
                        "\" Sup &#xDxA;\"",
                        "",
                        "",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "FALSE",
                        "FALSE",
                        "jpn"});
            table15.AddRow(new string[] {
                        "\"\"\"エンテロバクター・アグロメランス感染 !@#$%^&#38;*()_+={}[]&lt;&gt;?;~\\/*-&#96; 日本語\"\"\"",
                        "SupTermFieldA",
                        "\"8;*()_+={}[]&lt;\"",
                        "SupTermFieldB",
                        "Sup Term Value 2",
                        "SupTermFieldC",
                        "Sup Term Value 3",
                        "SupTermFieldD",
                        "\"Su*-&#96; PAIN\"",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "TRUE",
                        "jpn"});
            table15.AddRow(new string[] {
                        "\"\"\"あなた\'アメリカ\'簡単 \"\"ＦＢＳＳ\"\"\"\"\"",
                        "SupTermFieldA",
                        "8;*()_+={}[]&lt;",
                        "SupTermFieldB",
                        "Sup Term Value 2",
                        "SupTermFieldC",
                        "Sup Term Value 3",
                        "SupTermFieldD",
                        "Sup Term Value 4",
                        "SupTermFieldE",
                        "Sup Term Value 5",
                        "MedDRA",
                        "LLT",
                        "TRUE",
                        "FALSE",
                        "jpn"});
            table15.AddRow(new string[] {
                        "小児期崩壊性障害",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "SupTermFieldC",
                        "Sup Term Value 3",
                        "",
                        "",
                        "MedDRA",
                        "PT",
                        "TRUE",
                        "FALSE",
                        "jpn"});
            table15.AddRow(new string[] {
                        "アセチルコリン塩化物漢字ひらがなカタカナ万葉仮名変体仮名オㇹ oh",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "JDrug",
                        "DrugName",
                        "TRUE",
                        "TRUE",
                        "jpn"});
            table15.AddRow(new string[] {
                        "治療を主目的としない医薬品",
                        "SupTermFieldA",
                        "Sup Term Value 1",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "JDrug",
                        "HighLevelClass",
                        "FALSE",
                        "TRUE",
                        "jpn"});
            table15.AddRow(new string[] {
                        "公衆衛生用薬",
                        "SupTermFieldA",
                        "Sup Term Value 1",
                        "SupTermFieldB",
                        "Sup Term Value 2",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "JDrug",
                        "MidLevelClass",
                        "FALSE",
                        "FALSE",
                        "jpn"});
            table15.AddRow(new string[] {
                        "\"\"\"コカアルカロイド系製剤\"\"\"",
                        "SupTermFieldA",
                        "Sup Term Value 1",
                        "SupTermFieldB",
                        "Sup Term Value 2",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "JDrug",
                        "LowLevelClass",
                        "TRUE",
                        "TRUE",
                        "jpn"});
            table15.AddRow(new string[] {
                        "アヘンチンキ",
                        "SupTermFieldA",
                        "Sup Term Value 1",
                        "SupTermFieldB",
                        "Sup Term Value 2",
                        "SupTermFieldC",
                        "Sup Term Value 3",
                        "",
                        "",
                        "",
                        "",
                        "JDrug",
                        "DetailedClass",
                        "TRUE",
                        "FALSE",
                        "jpn"});
            table15.AddRow(new string[] {
                        "内",
                        "SupTermFieldA",
                        "アセチルコリン塩化物漢字ひらがなカタカナ万葉仮名変体仮名オㇹ oh",
                        "SupTermFieldB",
                        "ボレリア・ブルグドルフェリ免疫グロブリンＧ",
                        "SupTermFieldC",
                        "体外回路内血液凝固ㇰ ㇱ ㇲ ㇳ ㇴ ㇵ ㇶ ㇷ ㇸ ㇹ ㇺ ㇻ ㇼ ㇽ ㇾ ㇿ",
                        "SupTermFieldD",
                        "Sup Term Value 4",
                        "SupTermFieldE",
                        "Sup Term Value 5",
                        "JDrug",
                        "DrugName",
                        "TRUE",
                        "FALSE",
                        "jpn"});
            table15.AddRow(new string[] {
                        "\"ｱﾍﾝﾁﾝｷ\"",
                        "",
                        "",
                        "",
                        "",
                        "SupTermFieldC",
                        "Sup Term Value 3",
                        "SupTermFieldD",
                        "Sup Term Value 4",
                        "SupTermFieldE",
                        "Sup Term Value 5",
                        "JDrug",
                        "DrugName",
                        "TRUE",
                        "FALSE",
                        "jpn"});
#line 139
 testRunner.When("uploading MEV content", ((string)(null)), table15, "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term",
                        "Value"});
            table16.AddRow(new string[] {
                        "SupTermFieldA",
                        "アセチルコリン塩化物漢字ひらがなカタカナ万葉仮名変体仮名オㇹ oh"});
            table16.AddRow(new string[] {
                        "SupTermFieldB",
                        "ボレリア・ブルグドルフェリ免疫グロブリンＧ"});
            table16.AddRow(new string[] {
                        "SupTermFieldC",
                        "体外回路内血液凝固ㇰ ㇱ ㇲ ㇳ ㇴ ㇵ ㇶ ㇷ ㇸ ㇹ ㇺ ㇻ ㇼ ㇽ ㇾ ㇿ"});
#line 155
 testRunner.Then("the \"内\" task has the following supplemental information", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An uploaded csv file can not surpass 5001 rows")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_168481_006")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void AnUploadedCsvFileCanNotSurpass5001Rows()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An uploaded csv file can not surpass 5001 rows", new string[] {
                        "VAL",
                        "PBMCC_168481_006",
                        "Release2015.3.0"});
#line 164
this.ScenarioSetup(scenarioInfo);
#line 166
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"WhoDrugDDEB2 " +
                    "ENG 201506\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 167
 testRunner.When("uploading \"5002\" WhoDrug tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 168
 testRunner.Then("the user should be notified with the following message \"CSV file <MevFileName> is" +
                    " too large to upload. The accepted file limit is 5001 rows.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An uploaded csv file can not be larger than a file size of 40mb")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_168481_006a")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void AnUploadedCsvFileCanNotBeLargerThanAFileSizeOf40Mb()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An uploaded csv file can not be larger than a file size of 40mb", new string[] {
                        "VAL",
                        "PBMCC_168481_006a",
                        "Release2015.3.0"});
#line 173
this.ScenarioSetup(scenarioInfo);
#line 175
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 11" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 176
 testRunner.When("uploading MEV content \"CrammedFile_41mb.csv\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 177
 testRunner.Then("the user should be notified with the following message \"CSV file CrammedFile_41mb" +
                    ".csv is too large to upload. The accepted file limit is 40MB.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An uploaded 5000 task csv file is able to be uploaded and have uploaded coding ta" +
            "sks displayed")]
        [NUnit.Framework.CategoryAttribute("VALLongRunningTask")]
        [NUnit.Framework.CategoryAttribute("PBMCC_168481_006b")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(2100000)]
        public virtual void AnUploaded5000TaskCsvFileIsAbleToBeUploadedAndHaveUploadedCodingTasksDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An uploaded 5000 task csv file is able to be uploaded and have uploaded coding ta" +
                    "sks displayed", new string[] {
                        "VALLongRunningTask",
                        "PBMCC_168481_006b",
                        "Release2015.3.0",
                        "IncreaseTimeout_2100000"});
#line 183
this.ScenarioSetup(scenarioInfo);
#line 185
 testRunner.Given("a \"Approval\" Coder setup with no tasks and no synonyms and dictionary \"WhoDrugDDE" +
                    "B2 ENG 201506\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 186
 testRunner.When("uploading \"5000\" WhoDrug tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "File Name",
                        "Uploaded",
                        "User",
                        "Status",
                        "Succeeded",
                        "Failed"});
            table17.AddRow(new string[] {
                        "1",
                        "<TimeStamp>",
                        "<UserDisplayName>",
                        "Upload Completed",
                        "5000",
                        "0"});
#line 187
 testRunner.Then("the uploaded coding tasks has the following information", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An uploaded 5000 task csv file is able to be uploaded and have been processed by " +
            "the workflow")]
        [NUnit.Framework.CategoryAttribute("VALLongRunningTask")]
        [NUnit.Framework.CategoryAttribute("PBMCC_168481_006c")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(2100000)]
        public virtual void AnUploaded5000TaskCsvFileIsAbleToBeUploadedAndHaveBeenProcessedByTheWorkflow()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An uploaded 5000 task csv file is able to be uploaded and have been processed by " +
                    "the workflow", new string[] {
                        "VALLongRunningTask",
                        "PBMCC_168481_006c",
                        "Release2015.3.0",
                        "IncreaseTimeout_2100000"});
#line 196
this.ScenarioSetup(scenarioInfo);
#line 198
 testRunner.Given("a \"Approval\" Coder setup with no tasks and no synonyms and dictionary \"WhoDrugDDE" +
                    "B2 ENG 201506\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 199
 testRunner.When("uploading \"5000\" WhoDrug tasks", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 200
 testRunner.Then("\"5000\" tasks are processed by the workflow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Upload history contains a downloadable csv file with error information for the fa" +
            "iled tasks")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_168481_007")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(900000)]
        public virtual void UploadHistoryContainsADownloadableCsvFileWithErrorInformationForTheFailedTasks()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Upload history contains a downloadable csv file with error information for the fa" +
                    "iled tasks", new string[] {
                        "VAL",
                        "PBMCC_168481_007",
                        "Release2015.3.0",
                        "IncreaseTimeout_900000"});
#line 207
this.ScenarioSetup(scenarioInfo);
#line 209
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 11" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 210
 testRunner.When("uploading incorrect MEV content", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "File Name",
                        "Uploaded",
                        "User",
                        "Status",
                        "Succeeded",
                        "Failed"});
            table18.AddRow(new string[] {
                        "1",
                        "<TimeStamp>",
                        "<UserDisplayName>",
                        "Upload Completed",
                        "1",
                        "40"});
#line 211
 testRunner.Then("the uploaded coding tasks has the following information", ((string)(null)), table18, "Then ");
#line 214
 testRunner.When("downloading MEV failure content", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Study ID",
                        "Supplemental Field 1",
                        "Supplemental Field 5",
                        "Dictionary",
                        "Dictionary Level",
                        "Error"});
            table19.AddRow(new string[] {
                        "<DevUuid>",
                        "",
                        "",
                        "MedDRA",
                        "SOC",
                        "Medical Dictionary Level is not codable"});
            table19.AddRow(new string[] {
                        "00000000-1111-2222-3333-44444444444",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "Study does Not Exist"});
            table19.AddRow(new string[] {
                        "<DevUuid>",
                        "",
                        "",
                        "MedDRA",
                        "Level Does Not Exist",
                        "Unknown error occurred"});
            table19.AddRow(new string[] {
                        "Study Does Not Exist",
                        "",
                        "",
                        "MedDRA",
                        "LLT",
                        "Study Does Not Exist"});
            table19.AddRow(new string[] {
                        "<DevUuid>",
                        "",
                        "",
                        "Dictionary Does Not Exist",
                        "LLT",
                        "Study must be registered"});
            table19.AddRow(new string[] {
                        "<DevUuid>",
                        "",
                        "",
                        "MedDRA",
                        "\"LLT \"",
                        "Dictionary Level contains invalid leading or trailing spaces"});
            table19.AddRow(new string[] {
                        "<DevUuid>",
                        "",
                        "",
                        "MedDRA",
                        "\"LLT \"",
                        "Dictionary Level contains invalid leading or trailing spaces"});
            table19.AddRow(new string[] {
                        "<DevUuid>",
                        "",
                        "",
                        "\"MedDRA \"",
                        "LLT",
                        "Dictionary contains invalid leading or trailing spaces"});
            table19.AddRow(new string[] {
                        "<DevUuid>",
                        "SupplementalFieldA",
                        "",
                        "WhoDrugDDEB2",
                        "PRODUCTSYNONYM",
                        "Supplement Field OID must be unique"});
            table19.AddRow(new string[] {
                        "<Uuid>",
                        "",
                        "Supplemental Field 5",
                        "MedDRA",
                        "LLT",
                        "Supplemental Field 5 is required to be alphanumeric with zero or one period"});
#line 215
 testRunner.Then("the downloaded Mev error file should contain following", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Upload history will not process external verbatims for studies that are in the pr" +
            "ocess of being migrated to new dictionary version")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_168481_008")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void UploadHistoryWillNotProcessExternalVerbatimsForStudiesThatAreInTheProcessOfBeingMigratedToNewDictionaryVersion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Upload history will not process external verbatims for studies that are in the pr" +
                    "ocess of being migrated to new dictionary version", new string[] {
                        "VAL",
                        "PBMCC_168481_008",
                        "Release2015.3.0"});
#line 232
this.ScenarioSetup(scenarioInfo);
#line 234
 testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 15.0 From_List\" co" +
                    "ntaining entry \"\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 235
    testRunner.And("an activated synonym list \"MedDRA ENG 18.0 To_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 236
 testRunner.When("performing limited study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Supplemental Field 1",
                        "Supplemental Value 1",
                        "Dictionary",
                        "Dictionary Level",
                        "Is Approval Required",
                        "Is Auto Approval"});
            table20.AddRow(new string[] {
                        "Major Big Painful Headache",
                        "SupFieldA",
                        "Sup1",
                        "MedDRA",
                        "LLT",
                        "FALSE",
                        "TRUE"});
#line 237
 testRunner.And("uploading MEV content", ((string)(null)), table20, "And ");
#line 240
 testRunner.And("downloading MEV failure content", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Error"});
            table21.AddRow(new string[] {
                        "Study is in migration"});
#line 241
 testRunner.Then("the downloaded Mev error file should contain following", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
