// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.RegressionTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("This feature will verify that the dictionary search functionality appropriately d" +
        "isplays search templates")]
    [NUnit.Framework.CategoryAttribute("specDictionarySearchTemplate.feature")]
    [NUnit.Framework.CategoryAttribute("CoderCore")]
    public partial class ThisFeatureWillVerifyThatTheDictionarySearchFunctionalityAppropriatelyDisplaysSearchTemplatesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specDictionarySearchTemplate.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "This feature will verify that the dictionary search functionality appropriately d" +
                    "isplays search templates", "", ProgrammingLanguage.CSharp, new string[] {
                        "specDictionarySearchTemplate.feature",
                        "CoderCore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When searching for preferred names low to high the search should only display pre" +
            "ferred names in AZDD_15.1")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.CategoryAttribute("PBMCC_185577_001")]
        public virtual void WhenSearchingForPreferredNamesLowToHighTheSearchShouldOnlyDisplayPreferredNamesInAZDD_15_1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When searching for preferred names low to high the search should only display pre" +
                    "ferred names in AZDD_15.1", new string[] {
                        "VAL",
                        "Release2015.3.0",
                        "PBMCC_185577_001"});
#line 8
this.ScenarioSetup(scenarioInfo);
#line 10
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"AZDD ENG 15.1" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
  testRunner.And("I begin a search in dictionary \"AZDD-15.1-English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
  testRunner.And("I select Synonym List \"Without Synonyms\" and Template \"Low to High\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
  testRunner.And("I enter \"blood\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table1.AddRow(new string[] {
                        "Preferred Name"});
#line 14
  testRunner.And("I select the following levels for the search", ((string)(null)), table1, "And ");
#line 17
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level"});
            table2.AddRow(new string[] {
                        "BLOOD, WHOLE",
                        "003003 01 001",
                        "PN"});
            table2.AddRow(new string[] {
                        "HUMAN RED BLOOD CELLS",
                        "005041 01 001",
                        "PN"});
#line 18
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table2, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table3.AddRow(new string[] {
                        "Trade Name"});
            table3.AddRow(new string[] {
                        "ATC"});
            table3.AddRow(new string[] {
                        "Ingredient"});
#line 22
  testRunner.And("I verify the search results do not contain any terms at the following levels", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When searching for preferred names high to low the search should display higher l" +
            "evel terms in AZDD_15.1")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.CategoryAttribute("PBMCC_185577_002")]
        public virtual void WhenSearchingForPreferredNamesHighToLowTheSearchShouldDisplayHigherLevelTermsInAZDD_15_1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When searching for preferred names high to low the search should display higher l" +
                    "evel terms in AZDD_15.1", new string[] {
                        "VAL",
                        "Release2015.3.0",
                        "PBMCC_185577_002"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 34
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"AZDD ENG 15.1" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
  testRunner.And("I begin a search in dictionary \"AZDD-15.1-English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
  testRunner.And("I select Synonym List \"Without Synonyms\" and Template \"High to low\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
  testRunner.And("I enter \"blood\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table4.AddRow(new string[] {
                        "Preferred Name"});
#line 38
  testRunner.And("I select the following levels for the search", ((string)(null)), table4, "And ");
#line 41
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level"});
            table5.AddRow(new string[] {
                        "BLOOD AND BLOOD FORMING ORGANS",
                        "B",
                        "ATC"});
            table5.AddRow(new string[] {
                        "BLOOD SUBSTITUTES AND PERFUSION SOLUTIONS",
                        "B05",
                        "ATC"});
            table5.AddRow(new string[] {
                        "BLOOD AND RELATED PRODUCTS",
                        "B05A",
                        "ATC"});
            table5.AddRow(new string[] {
                        "Other blood products",
                        "B05AX",
                        "ATC"});
            table5.AddRow(new string[] {
                        "BLOOD, WHOLE",
                        "003003 01 001",
                        "PN"});
            table5.AddRow(new string[] {
                        "HUMAN RED BLOOD CELLS",
                        "005041 01 001",
                        "PN"});
#line 42
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table5, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table6.AddRow(new string[] {
                        "Trade Name"});
            table6.AddRow(new string[] {
                        "Ingredient"});
#line 50
  testRunner.And("I verify the search results do not contain any terms at the following levels", ((string)(null)), table6, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When searching for ingredients low to high the search should only display preferr" +
            "ed names in AZDD_15.1")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.CategoryAttribute("PBMCC_185577_003")]
        public virtual void WhenSearchingForIngredientsLowToHighTheSearchShouldOnlyDisplayPreferredNamesInAZDD_15_1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When searching for ingredients low to high the search should only display preferr" +
                    "ed names in AZDD_15.1", new string[] {
                        "VAL",
                        "Release2015.3.0",
                        "PBMCC_185577_003"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line 61
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"AZDD ENG 15.1" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
  testRunner.And("I begin a search in dictionary \"AZDD-15.1-English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
  testRunner.And("I select Synonym List \"Without Synonyms\" and Template \"Low to High\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
  testRunner.And("I enter \"blood\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table7.AddRow(new string[] {
                        "Ingredient"});
#line 65
  testRunner.And("I select the following levels for the search", ((string)(null)), table7, "And ");
#line 68
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level"});
            table8.AddRow(new string[] {
                        "BLOOD, WHOLE",
                        "014668 01 001 0000007645",
                        "ING"});
            table8.AddRow(new string[] {
                        "BLOOD, WHOLE",
                        "003003 01 001 0000007645",
                        "ING"});
#line 69
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table8, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table9.AddRow(new string[] {
                        "Trade Name"});
            table9.AddRow(new string[] {
                        "ATC"});
            table9.AddRow(new string[] {
                        "Preferred Name"});
#line 73
  testRunner.And("I verify the search results do not contain any terms at the following levels", ((string)(null)), table9, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When searching for ingredients high to low the search should display higher level" +
            " terms in AZDD_15.1")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.CategoryAttribute("PBMCC_185577_004")]
        public virtual void WhenSearchingForIngredientsHighToLowTheSearchShouldDisplayHigherLevelTermsInAZDD_15_1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When searching for ingredients high to low the search should display higher level" +
                    " terms in AZDD_15.1", new string[] {
                        "VAL",
                        "Release2015.3.0",
                        "PBMCC_185577_004"});
#line 82
this.ScenarioSetup(scenarioInfo);
#line 84
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"AZDD ENG 15.1" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 85
  testRunner.And("I begin a search in dictionary \"AZDD-15.1-English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
  testRunner.And("I select Synonym List \"Without Synonyms\" and Template \"High to low\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
  testRunner.And("I enter \"blood\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table10.AddRow(new string[] {
                        "Ingredient"});
#line 88
  testRunner.And("I select the following levels for the search", ((string)(null)), table10, "And ");
#line 91
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level"});
            table11.AddRow(new string[] {
                        "BLOOD, WHOLE",
                        "003003 01 001",
                        "PN"});
            table11.AddRow(new string[] {
                        "BLOOD AND BLOOD FORMING ORGANS",
                        "B",
                        "ATC"});
            table11.AddRow(new string[] {
                        "BLOOD SUBSTITUTES AND PERFUSION SOLUTIONS",
                        "B05",
                        "ATC"});
            table11.AddRow(new string[] {
                        "BLOOD AND RELATED PRODUCTS",
                        "B05A",
                        "ATC"});
            table11.AddRow(new string[] {
                        "Other blood products",
                        "B05AX",
                        "ATC"});
            table11.AddRow(new string[] {
                        "BLOOD, WHOLE",
                        "003003 01 001 0000007645",
                        "ING"});
#line 92
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When searching for low level terms low to high the search should only display pre" +
            "ferred names in MedDRA 15.0")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.CategoryAttribute("PBMCC_185577_005")]
        public virtual void WhenSearchingForLowLevelTermsLowToHighTheSearchShouldOnlyDisplayPreferredNamesInMedDRA15_0()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When searching for low level terms low to high the search should only display pre" +
                    "ferred names in MedDRA 15.0", new string[] {
                        "VAL",
                        "Release2015.3.0",
                        "PBMCC_185577_005"});
#line 105
this.ScenarioSetup(scenarioInfo);
#line 107
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 15" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 108
  testRunner.And("I begin a search in dictionary \"MedDRA-15.0-English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
  testRunner.And("I select Synonym List \"Without Synonyms\" and Template \"Low to High\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
  testRunner.And("I enter \"burn\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table12.AddRow(new string[] {
                        "Low Level Term"});
#line 111
  testRunner.And("I select the following levels for the search", ((string)(null)), table12, "And ");
#line 114
  testRunner.And("I want only primary path results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
  testRunner.And("I want only exact match results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level"});
            table13.AddRow(new string[] {
                        "Burn",
                        "10006634",
                        "LLT"});
#line 117
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table13, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table14.AddRow(new string[] {
                        "SOC"});
            table14.AddRow(new string[] {
                        "HLGT"});
            table14.AddRow(new string[] {
                        "HLT"});
            table14.AddRow(new string[] {
                        "PT"});
#line 120
  testRunner.And("I verify the search results do not contain any terms at the following levels", ((string)(null)), table14, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When searching for low level terms high to low the search should only display pre" +
            "ferred names in MedDRA 15.0")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.CategoryAttribute("PBMCC_185577_006")]
        public virtual void WhenSearchingForLowLevelTermsHighToLowTheSearchShouldOnlyDisplayPreferredNamesInMedDRA15_0()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When searching for low level terms high to low the search should only display pre" +
                    "ferred names in MedDRA 15.0", new string[] {
                        "VAL",
                        "Release2015.3.0",
                        "PBMCC_185577_006"});
#line 130
this.ScenarioSetup(scenarioInfo);
#line 132
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 15" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 133
  testRunner.And("I begin a search in dictionary \"MedDRA-15.0-English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
  testRunner.And("I select Synonym List \"Without Synonyms\" and Template \"High to Low\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
  testRunner.And("I enter \"burn\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table15.AddRow(new string[] {
                        "Low Level Term"});
#line 136
  testRunner.And("I select the following levels for the search", ((string)(null)), table15, "And ");
#line 139
  testRunner.And("I want only primary path results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
  testRunner.And("I want only exact match results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level"});
            table16.AddRow(new string[] {
                        "Burn",
                        "10006634",
                        "LLT"});
            table16.AddRow(new string[] {
                        "Thermal burn",
                        "10053615",
                        "PT"});
            table16.AddRow(new string[] {
                        "Thermal burns",
                        "10043418",
                        "HLT"});
            table16.AddRow(new string[] {
                        "Injuries by physical agents",
                        "10022119",
                        "HLGT"});
            table16.AddRow(new string[] {
                        "Injury, poisoning and procedural complications",
                        "10022117",
                        "SOC"});
#line 142
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When searching for low level terms SOC to PT to LLT the search should only displa" +
            "y preferred names in MedDRA 15.0")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.CategoryAttribute("PBMCC_185577_007")]
        public virtual void WhenSearchingForLowLevelTermsSOCToPTToLLTTheSearchShouldOnlyDisplayPreferredNamesInMedDRA15_0()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When searching for low level terms SOC to PT to LLT the search should only displa" +
                    "y preferred names in MedDRA 15.0", new string[] {
                        "VAL",
                        "Release2015.3.0",
                        "PBMCC_185577_007"});
#line 155
this.ScenarioSetup(scenarioInfo);
#line 157
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 15" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 158
  testRunner.And("I begin a search in dictionary \"MedDRA-15.0-English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
  testRunner.And("I select Synonym List \"Without Synonyms\" and Template \"SOC-PT-LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
  testRunner.And("I enter \"burn\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table17.AddRow(new string[] {
                        "Low Level Term"});
#line 161
  testRunner.And("I select the following levels for the search", ((string)(null)), table17, "And ");
#line 164
  testRunner.And("I want only primary path results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
  testRunner.And("I want only exact match results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level"});
            table18.AddRow(new string[] {
                        "Injury, poisoning and procedural complications",
                        "10022117",
                        "SOC"});
            table18.AddRow(new string[] {
                        "Thermal burn",
                        "10053615",
                        "PT"});
            table18.AddRow(new string[] {
                        "Burn",
                        "10006634",
                        "LLT"});
#line 167
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table18, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table19.AddRow(new string[] {
                        "HLGT"});
            table19.AddRow(new string[] {
                        "HLT"});
#line 172
  testRunner.And("I verify the search results do not contain any terms at the following levels", ((string)(null)), table19, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When searching for low level terms LLT to PT to SOC the search should only displa" +
            "y preferred names in MedDRA 15.0")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.CategoryAttribute("PBMCC_185577_008")]
        public virtual void WhenSearchingForLowLevelTermsLLTToPTToSOCTheSearchShouldOnlyDisplayPreferredNamesInMedDRA15_0()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When searching for low level terms LLT to PT to SOC the search should only displa" +
                    "y preferred names in MedDRA 15.0", new string[] {
                        "VAL",
                        "Release2015.3.0",
                        "PBMCC_185577_008"});
#line 181
this.ScenarioSetup(scenarioInfo);
#line 183
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 15" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 184
  testRunner.And("I begin a search in dictionary \"MedDRA-15.0-English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
  testRunner.And("I select Synonym List \"Without Synonyms\" and Template \"LLT-PT-SOC\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 186
  testRunner.And("I enter \"burn\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table20.AddRow(new string[] {
                        "Low Level Term"});
#line 187
  testRunner.And("I select the following levels for the search", ((string)(null)), table20, "And ");
#line 190
  testRunner.And("I want only primary path results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
  testRunner.And("I want only exact match results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level"});
            table21.AddRow(new string[] {
                        "Injury, poisoning and procedural complications",
                        "10022117",
                        "SOC"});
            table21.AddRow(new string[] {
                        "Thermal burn",
                        "10053615",
                        "PT"});
            table21.AddRow(new string[] {
                        "Burn",
                        "10006634",
                        "LLT"});
#line 193
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table21, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table22.AddRow(new string[] {
                        "HLGT"});
            table22.AddRow(new string[] {
                        "HLT"});
#line 198
  testRunner.And("I verify the search results do not contain any terms at the following levels", ((string)(null)), table22, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
