// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.RegressionTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("In general, uploaded direct dictionary matches will not be available after they h" +
        "ave been uploaded into the system when Auto Approve is configured.")]
    [NUnit.Framework.CategoryAttribute("specAutoApproveSynonymUpload.feature")]
    [NUnit.Framework.CategoryAttribute("CoderCore")]
    public partial class InGeneralUploadedDirectDictionaryMatchesWillNotBeAvailableAfterTheyHaveBeenUploadedIntoTheSystemWhenAutoApproveIsConfigured_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SpecAutoApproveSynonymUpload.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "In general, uploaded direct dictionary matches will not be available after they h" +
                    "ave been uploaded into the system when Auto Approve is configured.", "Uploaded direct dictionary matches will be available after they have been uploade" +
                    "d into the system when Auto Approve is not configured. This logic has some \r\nexc" +
                    "eptions based on the type of dictionary and single vs. multiple path synonyms. T" +
                    "he following truth table was used to help map the requirements to the cases.\r\n\r\n" +
                    "Test Case\t        | AutoApprove\t| Single/Multi\t| MedDRA | Synonyms\r\nPBMCC_196870" +
                    "_001\t| On\t        |     Single\t| Yes\t | Hidden\r\nPBMCC_196870_001\t| On\t        | " +
                    "    Single\t| No\t | Hidden\r\nPBMCC_196870_002\t| Off\t        |     Single\t| Yes\t | " +
                    "Shown\r\nPBMCC_196870_002\t| Off\t        |     Single\t| No\t | Shown\r\nPBMCC_196870_0" +
                    "03\t| On\t        |     Multi\t    | Yes\t | Hidden\r\nPBMCC_196870_004\t| On\t        |" +
                    "     Multi\t    | No\t | Shown\r\nPBMCC_196870_005\t| Off\t        |     Multi\t    | Y" +
                    "es\t | Shown\r\nPBMCC_196870_005\t| Off\t        |     Multi\t    | No\t | Shown\r\n\r\n\r\nT" +
                    "hese tests can give false positives without confirming that tasks are correctly " +
                    "loaded and synonyms created. MCC-191152 includes a verification that the ODM loa" +
                    "ds passed successfully.\r\nMay want to consider turning the auto coded on and off " +
                    "to ensure synonym exists.\r\n\r\n_ The following environment configuration settings " +
                    "were enabled:\r\n\r\n Empty Synonym Lists Registered:\r\n Synonym List 1: MedDRA      " +
                    "       (ENG) 16.0     MedDRA_DDM\r\n Synonym List 2: WhoDrugDDEB2       (ENG) 2013" +
                    "06   WhoDrugDDEB2_DDM\r\n Synonym List 3: JDrug              (JPN) 2013H1   JDrug_" +
                    "DDM\r\n\r\n Common Configurations:\r\n Configuration Name       | Declarative Browser " +
                    "Class | \r\n Completed Reconsider     | CompletedReconsiderSetup  | \r\n Basic      " +
                    "              | BasicSetup                |", ProgrammingLanguage.CSharp, new string[] {
                        "specAutoApproveSynonymUpload.feature",
                        "CoderCore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\" and uploading Single path Direct Dictionary " +
            "Matches; upon completing the upload, the synonyms shall not be available to down" +
            "load and the count shall not change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_196870_001")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void WhenTheAutoApproveOptionIsOnAndUploadingSinglePathDirectDictionaryMatchesUponCompletingTheUploadTheSynonymsShallNotBeAvailableToDownloadAndTheCountShallNotChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\" and uploading Single path Direct Dictionary " +
                    "Matches; upon completing the upload, the synonyms shall not be available to down" +
                    "load and the count shall not change", new string[] {
                        "VAL",
                        "PBMCC_196870_001",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table1.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
            table1.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201306",
                        "ENG"});
            table1.AddRow(new string[] {
                        "JDrug_DDM",
                        "JDrug",
                        "2013H1",
                        "JPN"});
#line 39
  testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table1, "Given ");
#line 44
 testRunner.When("uploading synonym list file \"SynonymUpload_SinglePath_DDM_MedDRA-Eng-160.txt\" to " +
                    "\"MedDRA ENG 16.0 MedDRA_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.And("uploading synonym list file \"SynonymUpload_SinlgePath_DDM_WhoDrugDDEB2-ENG-201306" +
                    ".txt\" to \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.And("uploading synonym list file \"SynonymUpload_SinlgePath_DDM_JDrug-Jpn-2013H1.txt\" t" +
                    "o \"J-Drug JPN 2013H1 JDrug_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.Then("the number of synonyms for list \"MedDRA ENG 16.0 MedDRA_DDM\" is \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 48
 testRunner.And("the number of synonyms for list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" is \"0\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("the number of synonyms for list \"J-Drug JPN 2013H1 JDrug_DDM\" is \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("the synonym list \"MedDRA ENG 16.0 MedDRA_DDM\" cannot be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("the synonym list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" cannot be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.And("the synonym list \"J-Drug JPN 2013H1 JDrug_DDM\" cannot be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table2.AddRow(new string[] {
                        "HEADACHE",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table2.AddRow(new string[] {
                        "PAIN FREE",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "false"});
            table2.AddRow(new string[] {
                        "METHANOL",
                        "WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM",
                        "false"});
            table2.AddRow(new string[] {
                        "イマジニール３００",
                        "J-Drug JPN 2013H1 JDrug_DDM",
                        "false"});
#line 53
    testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table2, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\" and uploading Single path Direct Dictionary" +
            " Matches; upon completing the upload, the synonyms shall be available to downloa" +
            "d and the count shall change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_196870_002")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void WhenTheAutoApproveOptionIsOffAndUploadingSinglePathDirectDictionaryMatchesUponCompletingTheUploadTheSynonymsShallBeAvailableToDownloadAndTheCountShallChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\" and uploading Single path Direct Dictionary" +
                    " Matches; upon completing the upload, the synonyms shall be available to downloa" +
                    "d and the count shall change", new string[] {
                        "VAL",
                        "PBMCC_196870_002",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000"});
#line 64
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table3.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
            table3.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201306",
                        "ENG"});
            table3.AddRow(new string[] {
                        "JDrug_DDM",
                        "JDrug",
                        "2013H1",
                        "JPN"});
#line 66
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table3, "Given ");
#line 71
 testRunner.When("uploading synonym list file \"SynonymUpload_SinglePath_DDM_MedDRA-Eng-160.txt\" to " +
                    "\"MedDRA ENG 16.0 MedDRA_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
 testRunner.And("uploading synonym list file \"SynonymUpload_SinlgePath_DDM_WhoDrugDDEB2-ENG-201306" +
                    ".txt\" to \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("uploading synonym list file \"SynonymUpload_SinlgePath_DDM_JDrug-Jpn-2013H1.txt\" t" +
                    "o \"J-Drug JPN 2013H1 JDrug_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.Then("the number of synonyms for list \"MedDRA ENG 16.0 MedDRA_DDM\" is \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 75
 testRunner.And("the number of synonyms for list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" is \"2\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.And("the number of synonyms for list \"J-Drug JPN 2013H1 JDrug_DDM\" is \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.And("the synonym list \"MedDRA ENG 16.0 MedDRA_DDM\" can be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.And("the synonym list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" can be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("the synonym list \"J-Drug JPN 2013H1 JDrug_DDM\" can be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\" and uploading Multiple path MedDRA Direct Di" +
            "ctionary Matches; upon completing the upload, the synonyms shall not be availabl" +
            "e to download and the count shall not change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_196870_003")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOnAndUploadingMultiplePathMedDRADirectDictionaryMatchesUponCompletingTheUploadTheSynonymsShallNotBeAvailableToDownloadAndTheCountShallNotChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\" and uploading Multiple path MedDRA Direct Di" +
                    "ctionary Matches; upon completing the upload, the synonyms shall not be availabl" +
                    "e to download and the count shall not change", new string[] {
                        "VAL",
                        "PBMCC_196870_003",
                        "Release2015.3.0"});
#line 84
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table4.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 86
  testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table4, "Given ");
#line 89
 testRunner.When("uploading synonym list file \"SynonymUpload_MultiPath_DDM_MedDRA-Eng-160.txt\" to \"" +
                    "MedDRA ENG 16.0 MedDRA_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
 testRunner.Then("the number of synonyms for list \"MedDRA ENG 16.0 MedDRA_DDM\" is \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 91
 testRunner.And("the synonym list \"MedDRA ENG 16.0 MedDRA_DDM\" cannot be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table5.AddRow(new string[] {
                        "BROKEN LEG",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table5.AddRow(new string[] {
                        "SWELLING ARM",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table5.AddRow(new string[] {
                        "PROFOUND VISION IMPAIRMENT, BOTH EYES",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
#line 92
    testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\" and uploading Multiple path nonMedDRA Direct" +
            " Dictionary Matches; upon completing the upload, the synonyms shall be available" +
            " to download and the count shall change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_196870_004")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOnAndUploadingMultiplePathNonMedDRADirectDictionaryMatchesUponCompletingTheUploadTheSynonymsShallBeAvailableToDownloadAndTheCountShallChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\" and uploading Multiple path nonMedDRA Direct" +
                    " Dictionary Matches; upon completing the upload, the synonyms shall be available" +
                    " to download and the count shall change", new string[] {
                        "VAL",
                        "PBMCC_196870_004",
                        "Release2015.3.0"});
#line 101
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table6.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201306",
                        "ENG"});
#line 103
  testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table6, "Given ");
#line 106
 testRunner.When("uploading synonym list file \"SynonymUpload_MultiPath_DDM_WhoDrugDDEB2-ENG-201306." +
                    "txt\" to \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
 testRunner.Then("the number of synonyms for list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" is \"4\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 108
 testRunner.And("the synonym list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" can be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\" and uploading Multiple path Direct Dictiona" +
            "ry Matches; upon completing the upload, the synonyms shall be available to downl" +
            "oad and the count shall change")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_196870_005")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenTheAutoApproveOptionIsOffAndUploadingMultiplePathDirectDictionaryMatchesUponCompletingTheUploadTheSynonymsShallBeAvailableToDownloadAndTheCountShallChange()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\" and uploading Multiple path Direct Dictiona" +
                    "ry Matches; upon completing the upload, the synonyms shall be available to downl" +
                    "oad and the count shall change", new string[] {
                        "VAL",
                        "PBMCC_196870_005",
                        "Release2015.3.0"});
#line 113
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table7.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
            table7.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201306",
                        "ENG"});
#line 115
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table7, "Given ");
#line 119
 testRunner.When("uploading synonym list file \"SynonymUpload_MultiPath_DDM_MedDRA-Eng-160.txt\" to \"" +
                    "MedDRA ENG 16.0 MedDRA_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 120
 testRunner.And("uploading synonym list file \"SynonymUpload_MultiPath_DDM_WhoDrugDDEB2-ENG-201306." +
                    "txt\" to \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
 testRunner.Then("the number of synonyms for list \"MedDRA ENG 16.0 MedDRA_DDM\" is \"3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 122
 testRunner.And("the number of synonyms for list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" is \"4\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.And("the synonym list \"MedDRA ENG 16.0 MedDRA_DDM\" can be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
 testRunner.And("the synonym list \"WhoDrugDDEB2 ENG 201306 WhoDrugDDEB2_DDM\" can be downloaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
