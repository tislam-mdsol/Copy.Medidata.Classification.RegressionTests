// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.RegressionTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("This feature verifies synonym reconciliation during synonym list upgrades based o" +
        "n the user configurable options of the system.")]
    [NUnit.Framework.CategoryAttribute("specAutoApproveSynonymMigration.feature")]
    [NUnit.Framework.CategoryAttribute("CoderCore")]
    public partial class ThisFeatureVerifiesSynonymReconciliationDuringSynonymListUpgradesBasedOnTheUserConfigurableOptionsOfTheSystem_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specAutoApproveSynonymMigration.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "This feature verifies synonym reconciliation during synonym list upgrades based o" +
                    "n the user configurable options of the system.", "The following truth table was used to help map the requirements to the cases.\r\n\r\n" +
                    "| Test Case        | \tAuto Approve | \tWith Change | \tDDM Path    | \tDictionary  " +
                    "|| \tIncluded in Upversioning | \r\n| PBMCC_197238_001 | \tOn           | \tNo       " +
                    "   | \tSingle path | \tMedDRA      || \tNo                       | \r\n| PBMCC_197238" +
                    "_002 | \tOn           | \tSOC         | \tSingle path | \tMedDRA      || \tYes       " +
                    "               | \r\n| PBMCC_197238_003 | \tOn           | \tNo          | \tSingle p" +
                    "ath | \tNot MedDRA  || \tNo                       | \r\n| PBMCC_197238_004 | \tOn    " +
                    "       | \tATC         | \tSingle path | \tNot MedDRA  || \tYes                     " +
                    " | \r\n| PBMCC_197238_005 | \tOff          | \tNo          | \tSingle path | \tMedDRA " +
                    "     || \tNo                       | \r\n| PBMCC_197238_006 | \tOff          | \tSOC " +
                    "        | \tSingle path | \tMedDRA      || \tYes                      | \r\n| PBMCC_1" +
                    "97238_007 | \tOff          | \tNo          | \tSingle path | \tNot MedDRA  || \tNo   " +
                    "                    | \r\n| PBMCC_197238_008 | \tOff          | \tATC         | \tSin" +
                    "gle path | \tNot MedDRA  || \tYes                      | \r\n| PBMCC_197238_009 | \tO" +
                    "n           | \tNo          | \tMulti-path  | \tMedDRA      || \tNo                 " +
                    "      | \r\n| PBMCC_197238_010 | \tOn           | \tSOC         | \tMulti-path  | \tMe" +
                    "dDRA      || \tYes                      | \r\n| PBMCC_197238_011 | \tOn           | " +
                    "\tNo          | \tMulti-path  | \tNot MedDRA  || \tNo                       | \r\n| PB" +
                    "MCC_197238_012 | \tOn           | \tATC         | \tMulti-path  | \tNot MedDRA  || \t" +
                    "Yes                      | \r\n| PBMCC_197238_013 | \tOff          | \tNo          |" +
                    " \tMulti-path  | \tMedDRA      || \tNo                       | \r\n| PBMCC_197238_014" +
                    " | \tOff          | \tSOC         | \tMulti-path  | \tMedDRA      || \tYes           " +
                    "           | \r\n| PBMCC_197238_015 | \tOff          | \tNo          | \tMulti-path  " +
                    "| \tNot MedDRA  || \tNo                       | \r\n| PBMCC_197238_016 | \tOff       " +
                    "   | \tATC         | \tMulti-path  | \tNot MedDRA  || \tYes                      | \r" +
                    "\n                  \r\n\r\n_ The following environment configuration settings were e" +
                    "nabled:\r\n\r\n Empty Synonym Lists Registered:\r\n Synonym List 1: MedDRA            " +
                    " (ENG) 11.0     Initial_List\r\n Synonym List 2: MedDRA             (ENG) 12.0    " +
                    " Initial_List\r\n Synonym List 3: MedDRA             (ENG) 12.0     New_Primary_Li" +
                    "st\r\n Synonym List 4: MedDRA             (ENG) 13.0     New_Primary_List\r\n Synony" +
                    "m List 5: WhoDrugDDEB2       (ENG) 201009   Initial_List\r\n Synonym List 6: WhoDr" +
                    "ugDDEB2       (ENG) 201212   Initial_List\r\n Synonym List 7: WhoDrugDDEB2       (" +
                    "ENG) 201012   New_Primary_List\r\n Synonym List 8: WhoDrugDDEB2       (ENG) 201303" +
                    "   New_Primary_List\r\n\r\n Common Configurations:\r\n Configuration Name       | Decl" +
                    "arative Browser Class | \r\n Basic                    | BasicSetup                " +
                    "|", ProgrammingLanguage.CSharp, new string[] {
                        "specAutoApproveSynonymMigration.feature",
                        "CoderCore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\", Single path MedDRA Direct Dictionary Match " +
            "with no change shall not be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_001")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOnSinglePathMedDRADirectDictionaryMatchWithNoChangeShallNotBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\", Single path MedDRA Direct Dictionary Match " +
                    "with no change shall not be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_001",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 47
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 11.0 Initial_List\"" +
                    " containing entry \"HEADACHE|10019211|LLT|LLT:10019211;PT:10019211;HLT:10019233;H" +
                    "LGT:10019231;SOC:10029205|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
   testRunner.And("an unactivated synonym list \"MedDRA ENG 12.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
   testRunner.When("I configure dictionary \"MedDRA\" with \"Auto Approve\" set to \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
   testRunner.And("starting synonym list migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
   testRunner.Then("synonym list migration is completed with \"0\" synonym and no reconciliation is nee" +
                    "ded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
   testRunner.And("a synonym for verbatim term \"HEADACHE\" should be created and not exist in list \"M" +
                    "edDRA ENG 12.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\", Single path MedDRA Direct Dictionary Match " +
            "with a change shall be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_002")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOnSinglePathMedDRADirectDictionaryMatchWithAChangeShallBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\", Single path MedDRA Direct Dictionary Match " +
                    "with a change shall be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_002",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 58
this.ScenarioSetup(scenarioInfo);
#line 60
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 12.0 Initial_List\"" +
                    " containing entry \"Haemoglobinuria|10018906|LLT|LLT:10018906;PT:10018906;HLT:100" +
                    "00196;HLGT:10046590;SOC:10038359|TRUE|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
   testRunner.And("an unactivated synonym list \"MedDRA ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
   testRunner.When("I configure dictionary \"MedDRA\" with \"Auto Approve\" set to \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
   testRunner.And("I perform a synonym migration accepting the reconciliation suggestion for the syn" +
                    "onym \"Haemoglobinuria\" under the category \"Multi Axiality Change\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
   testRunner.Then("a synonym for verbatim term \"Haemoglobinuria\" should be created and not exist in " +
                    "list \"MedDRA ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\", Single path Direct Dictionary Match with no" +
            " change shall not be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_003")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOnSinglePathDirectDictionaryMatchWithNoChangeShallNotBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\", Single path Direct Dictionary Match with no" +
                    " change shall not be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_003",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line 72
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"WhoDrugDDEB2 ENG 201212 Initi" +
                    "al_List\" containing entry \"TERRA PLANT SALVIA|068064 01 001|PRODUCT|PRODUCT:0680" +
                    "64 01 001;ATC:A01A;ATC:A01;ATC:A|False|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 73
   testRunner.And("an unactivated synonym list \"WhoDrugDDEB2 ENG 201303 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
   testRunner.When("I configure dictionary \"WhoDrugDDEB2\" with \"Auto Approve\" set to \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
   testRunner.And("starting synonym list migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
   testRunner.Then("synonym list migration is completed with \"0\" synonym and no reconciliation is nee" +
                    "ded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 77
   testRunner.And("a synonym for verbatim term \"TERRA PLANT SALVIA\" should be created and not exist " +
                    "in list \"WhoDrugDDEB2 ENG 201303 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\", Single path Direct Dictionary Match with a " +
            "change shall be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_004")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOnSinglePathDirectDictionaryMatchWithAChangeShallBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\", Single path Direct Dictionary Match with a " +
                    "change shall be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_004",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 83
this.ScenarioSetup(scenarioInfo);
#line 85
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"WhoDrugDDEB2 ENG 201009 Initi" +
                    "al_List\" containing entry \"CODEINE PHOSPHATE|000126 02 001|PRODUCT|PRODUCT:00012" +
                    "6 02 001;ATC:R05DA;ATC:R05D;ATC:R05;ATC:R|False|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
   testRunner.And("an unactivated synonym list \"WhoDrugDDEB2 ENG 201303 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
   testRunner.When("I configure dictionary \"WhoDrugDDEB2\" with \"Auto Approve\" set to \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
   testRunner.And("I perform a synonym migration accepting the reconciliation suggestion for the syn" +
                    "onym \"CODEINE PHOSPHATE\" under the category \"No Clear Match\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
   testRunner.Then("a synonym for verbatim term \"CODEINE PHOSPHATE\" should be created and not exist i" +
                    "n list \"WhoDrugDDEB2 ENG 201303 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\", Single path MedDRA Direct Dictionary Match" +
            " with no change shall not be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_005")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOffSinglePathMedDRADirectDictionaryMatchWithNoChangeShallNotBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\", Single path MedDRA Direct Dictionary Match" +
                    " with no change shall not be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_005",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 95
this.ScenarioSetup(scenarioInfo);
#line 97
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 12.0 Initial_List\"" +
                    " containing entry \"HEADACHE|10019211|LLT|LLT:10019211;PT:10019211;HLT:10019233;H" +
                    "LGT:10019231;SOC:10029205|True|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 98
   testRunner.And("an unactivated synonym list \"MedDRA ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
   testRunner.When("I configure dictionary \"MedDRA\" with \"Auto Approve\" set to \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 100
   testRunner.And("starting synonym list migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
   testRunner.Then("synonym list migration is completed with \"1\" synonym and no reconciliation is nee" +
                    "ded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 102
   testRunner.And("a synonym for verbatim term \"HEADACHE\" should be created and exist in list \"MedDR" +
                    "A ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\", Single path MedDRA Direct Dictionary Match" +
            " with a change shall be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_006")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOffSinglePathMedDRADirectDictionaryMatchWithAChangeShallBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\", Single path MedDRA Direct Dictionary Match" +
                    " with a change shall be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_006",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 108
this.ScenarioSetup(scenarioInfo);
#line 110
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 12.0 Initial_List\"" +
                    " containing entry \"Haemoglobinuria|10018906|LLT|LLT:10018906;PT:10018906;HLT:100" +
                    "00196;HLGT:10046590;SOC:10038359|TRUE|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 111
   testRunner.And("an unactivated synonym list \"MedDRA ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
   testRunner.When("I configure dictionary \"MedDRA\" with \"Auto Approve\" set to \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 113
   testRunner.And("I perform a synonym migration accepting the reconciliation suggestion for the syn" +
                    "onym \"Haemoglobinuria\" under the category \"Multi Axiality Change\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
   testRunner.Then("a synonym for verbatim term \"Haemoglobinuria\" should be created and exist in list" +
                    " \"MedDRA ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\", Single path Direct Dictionary Match with n" +
            "o change shall not be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_007")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOffSinglePathDirectDictionaryMatchWithNoChangeShallNotBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\", Single path Direct Dictionary Match with n" +
                    "o change shall not be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_007",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 120
this.ScenarioSetup(scenarioInfo);
#line 122
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"WhoDrugDDEB2 ENG 201212 Initi" +
                    "al_List\" containing entry \"TERRA PLANT SALVIA|068064 01 001|PRODUCT|PRODUCT:0680" +
                    "64 01 001;ATC:A01A;ATC:A01;ATC:A|False|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 123
   testRunner.And("an unactivated synonym list \"WhoDrugDDEB2 ENG 201303 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
   testRunner.When("I configure dictionary \"WhoDrugDDEB2\" with \"Auto Approve\" set to \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
   testRunner.And("starting synonym list migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
   testRunner.Then("synonym list migration is completed with \"1\" synonym and no reconciliation is nee" +
                    "ded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 127
   testRunner.And("a synonym for verbatim term \"TERRA PLANT SALVIA\" should be created and exist in l" +
                    "ist \"WhoDrugDDEB2 ENG 201303 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\", Single path Direct Dictionary Match with a" +
            " change shall be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_008")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOffSinglePathDirectDictionaryMatchWithAChangeShallBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\", Single path Direct Dictionary Match with a" +
                    " change shall be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_008",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 133
this.ScenarioSetup(scenarioInfo);
#line 135
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"WhoDrugDDEB2 ENG 201009 Initi" +
                    "al_List\" containing entry \"CODEINE PHOSPHATE|000126 02 001|PRODUCT|PRODUCT:00012" +
                    "6 02 001;ATC:R05DA;ATC:R05D;ATC:R05;ATC:R|False|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 136
   testRunner.And("an unactivated synonym list \"WhoDrugDDEB2 ENG 201303 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
   testRunner.When("I configure dictionary \"WhoDrugDDEB2\" with \"Auto Approve\" set to \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
   testRunner.And("I perform a synonym migration accepting the reconciliation suggestion for the syn" +
                    "onym \"CODEINE PHOSPHATE\" under the category \"No Clear Match\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
   testRunner.Then("a synonym for verbatim term \"CODEINE PHOSPHATE\" should be created and exist in li" +
                    "st \"WhoDrugDDEB2 ENG 201303 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\", Multi-path MedDRA Direct Dictionary Match w" +
            "ith no change shall not be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_009")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOnMulti_PathMedDRADirectDictionaryMatchWithNoChangeShallNotBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\", Multi-path MedDRA Direct Dictionary Match w" +
                    "ith no change shall not be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_009",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 145
this.ScenarioSetup(scenarioInfo);
#line 147
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 12.0 Initial_List\"" +
                    " containing entry \"Cockayne\'s syndrome|10009835|LLT|LLT:10009835;PT:10009835;HLT" +
                    ":10029300;HLGT:10029299;SOC:10010331|TRUE|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 148
   testRunner.And("an unactivated synonym list \"MedDRA ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
   testRunner.When("I configure dictionary \"MedDRA\" with \"Auto Approve\" set to \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 150
   testRunner.And("starting synonym list migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
   testRunner.Then("synonym list migration is completed with \"0\" synonym and no reconciliation is nee" +
                    "ded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 152
   testRunner.And("a synonym for verbatim term \"Cockayne\'s syndrome\" should be created and not exist" +
                    " in list \"MedDRA ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\", Multi-path MedDRA Direct Dictionary Match w" +
            "ith a change shall be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_010")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOnMulti_PathMedDRADirectDictionaryMatchWithAChangeShallBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\", Multi-path MedDRA Direct Dictionary Match w" +
                    "ith a change shall be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_010",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 158
this.ScenarioSetup(scenarioInfo);
#line 160
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 12.0 Initial_List\"" +
                    " containing entry \"Kawasaki\'s disease|10023320|LLT|LLT:10023320;PT:10023320;HLT:" +
                    "10021982;HLGT:10002252;SOC:10021881|TRUE|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 161
   testRunner.And("an unactivated synonym list \"MedDRA ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
   testRunner.When("I configure dictionary \"MedDRA\" with \"Auto Approve\" set to \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 163
   testRunner.And("I perform a synonym migration accepting the reconciliation suggestion for the syn" +
                    "onym \"Kawasaki\'s disease\" under the category \"Primary SOC Change\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
   testRunner.Then("a synonym for verbatim term \"Kawasaki\'s disease\" should be created and not exist " +
                    "in list \"MedDRA ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\", Multi-path Direct Dictionary Match with no " +
            "change shall not be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_011")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOnMulti_PathDirectDictionaryMatchWithNoChangeShallNotBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\", Multi-path Direct Dictionary Match with no " +
                    "change shall not be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_011",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 170
this.ScenarioSetup(scenarioInfo);
#line 172
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"WhoDrugDDEB2 ENG 201009 Initi" +
                    "al_List\" containing entry \"PAIN|000277 04 191|PRODUCTSYNONYM|PRODUCTSYNONYM:0002" +
                    "77 04 191;PRODUCT:000277 04 001;ATC:S01XA;ATC:S01X;ATC:S01;ATC:S|False|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 173
   testRunner.And("an unactivated synonym list \"WhoDrugDDEB2 ENG 201012 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
   testRunner.When("I configure dictionary \"WhoDrugDDEB2\" with \"Auto Approve\" set to \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 175
   testRunner.And("starting synonym list migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
   testRunner.Then("synonym list migration is completed with \"1\" synonym and no reconciliation is nee" +
                    "ded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 177
   testRunner.And("a synonym for verbatim term \"PAIN\" should be created and exist in list \"WhoDrugDD" +
                    "EB2 ENG 201012 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"On\", Multi-path Direct Dictionary Match with a c" +
            "hange shall be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_012")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOnMulti_PathDirectDictionaryMatchWithAChangeShallBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"On\", Multi-path Direct Dictionary Match with a c" +
                    "hange shall be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_012",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 183
this.ScenarioSetup(scenarioInfo);
#line 185
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"WhoDrugDDEB2 ENG 201009 Initi" +
                    "al_List\" containing entry \"KANA|003910 02 227|PRODUCTSYNONYM|PRODUCTSYNONYM:0039" +
                    "10 02 227;PRODUCT:003910 02 001;ATC:D06AX;ATC:D06A;ATC:D06;ATC:D|False|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 186
   testRunner.And("an unactivated synonym list \"WhoDrugDDEB2 ENG 201303 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
   testRunner.When("I configure dictionary \"WhoDrugDDEB2\" with \"Auto Approve\" set to \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 188
   testRunner.And("I perform a synonym migration accepting the reconciliation suggestion for the syn" +
                    "onym \"KANA\" under the category \"No Clear Match\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
   testRunner.Then("a synonym for verbatim term \"KANA\" should be created and exist in list \"WhoDrugDD" +
                    "EB2 ENG 201303 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\", Multi-path MedDRA Direct Dictionary Match " +
            "with no change shall not be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_013")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOffMulti_PathMedDRADirectDictionaryMatchWithNoChangeShallNotBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\", Multi-path MedDRA Direct Dictionary Match " +
                    "with no change shall not be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_013",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 195
this.ScenarioSetup(scenarioInfo);
#line 197
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 12.0 Initial_List\"" +
                    " containing entry \"Cockayne\'s syndrome|10009835|LLT|LLT:10009835;PT:10009835;HLT" +
                    ":10029300;HLGT:10029299;SOC:10010331|TRUE|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 198
   testRunner.And("an unactivated synonym list \"MedDRA ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
   testRunner.When("I configure dictionary \"MedDRA\" with \"Auto Approve\" set to \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 200
   testRunner.And("starting synonym list migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
   testRunner.Then("synonym list migration is completed with \"1\" synonym and no reconciliation is nee" +
                    "ded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 202
   testRunner.And("a synonym for verbatim term \"Cockayne\'s syndrome\" should be created and exist in " +
                    "list \"MedDRA ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\", Multi-path MedDRA Direct Dictionary Match " +
            "with a change shall be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_014")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOffMulti_PathMedDRADirectDictionaryMatchWithAChangeShallBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\", Multi-path MedDRA Direct Dictionary Match " +
                    "with a change shall be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_014",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 208
this.ScenarioSetup(scenarioInfo);
#line 210
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"MedDRA ENG 12.0 Initial_List\"" +
                    " containing entry \"Kawasaki\'s disease|10023320|LLT|LLT:10023320;PT:10023320;HLT:" +
                    "10021982;HLGT:10002252;SOC:10021881|TRUE|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 211
   testRunner.And("an unactivated synonym list \"MedDRA ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
   testRunner.When("I configure dictionary \"MedDRA\" with \"Auto Approve\" set to \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 213
   testRunner.And("I perform a synonym migration accepting the reconciliation suggestion for the syn" +
                    "onym \"Kawasaki\'s disease\" under the category \"Primary SOC Change\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
   testRunner.Then("a synonym for verbatim term \"Kawasaki\'s disease\" should be created and exist in l" +
                    "ist \"MedDRA ENG 13.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\", Multi-path Direct Dictionary Match with no" +
            " change shall not be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_015")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOffMulti_PathDirectDictionaryMatchWithNoChangeShallNotBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\", Multi-path Direct Dictionary Match with no" +
                    " change shall not be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_015",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 220
this.ScenarioSetup(scenarioInfo);
#line 222
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"WhoDrugDDEB2 ENG 201009 Initi" +
                    "al_List\" containing entry \"PAIN|000277 04 191|PRODUCTSYNONYM|PRODUCTSYNONYM:0002" +
                    "77 04 191;PRODUCT:000277 04 001;ATC:S01XA;ATC:S01X;ATC:S01;ATC:S|False|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 223
   testRunner.And("an unactivated synonym list \"WhoDrugDDEB2 ENG 201012 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
   testRunner.When("I configure dictionary \"WhoDrugDDEB2\" with \"Auto Approve\" set to \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 225
   testRunner.And("starting synonym list migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
   testRunner.Then("synonym list migration is completed with \"1\" synonym and no reconciliation is nee" +
                    "ded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 227
   testRunner.And("a synonym for verbatim term \"PAIN\" should be created and exist in list \"WhoDrugDD" +
                    "EB2 ENG 201012 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When the Auto Approve option is \"Off\", Multi-path Direct Dictionary Match with a " +
            "change shall be taken into account during Synonym up-versioning.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197238_016")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void WhenTheAutoApproveOptionIsOffMulti_PathDirectDictionaryMatchWithAChangeShallBeTakenIntoAccountDuringSynonymUp_Versioning_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When the Auto Approve option is \"Off\", Multi-path Direct Dictionary Match with a " +
                    "change shall be taken into account during Synonym up-versioning.", new string[] {
                        "VAL",
                        "PBMCC_197238_016",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 233
this.ScenarioSetup(scenarioInfo);
#line 235
   testRunner.Given("a \"Basic\" Coder setup with registered synonym list \"WhoDrugDDEB2 ENG 201009 Initi" +
                    "al_List\" containing entry \"KANA|003910 02 227|PRODUCTSYNONYM|PRODUCTSYNONYM:0039" +
                    "10 02 227;PRODUCT:003910 02 001;ATC:D06AX;ATC:D06A;ATC:D06;ATC:D|False|||\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 236
   testRunner.And("an unactivated synonym list \"WhoDrugDDEB2 ENG 201303 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 237
   testRunner.When("I configure dictionary \"WhoDrugDDEB2\" with \"Auto Approve\" set to \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 238
   testRunner.And("I perform a synonym migration accepting the reconciliation suggestion for the syn" +
                    "onym \"KANA\" under the category \"No Clear Match\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
   testRunner.Then("a synonym for verbatim term \"KANA\" should be created and exist in list \"WhoDrugDD" +
                    "EB2 ENG 201303 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
