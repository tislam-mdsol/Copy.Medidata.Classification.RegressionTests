// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.RegressionTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("This feature verifies synonym creation and approval based on the user configurabl" +
        "e options of the system.")]
    [NUnit.Framework.CategoryAttribute("specAutoApproveSynonymApproval.feature")]
    [NUnit.Framework.CategoryAttribute("CoderCore")]
    public partial class ThisFeatureVerifiesSynonymCreationAndApprovalBasedOnTheUserConfigurableOptionsOfTheSystem_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specAutoApproveSynonymApproval.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "This feature verifies synonym creation and approval based on the user configurabl" +
                    "e options of the system.", "The following truth table was used to help map the requirements to the cases.\r\n\r\n" +
                    "Test Case        | \tSynonym Creation Flag | \tForce Primary Path | \tAuto Approve " +
                    "| \tAuto Add Synonym | \tDDM Path                   | \tDictionary  || \tManual Codi" +
                    "ng | \tSynonym Approval\r\nPBMCC_197255_001 | \tAlways Active         | \tOn         " +
                    "        | \tOn           | \tNA (On)          | \tSingle path and Multi-path | \tMed" +
                    "DRA      || \tNo            | \tHidden\r\nPBMCC_197255_002 | \tAlways Active         " +
                    "| \tOn                 | \tOn           | \tNA (On)          | \tSingle path        " +
                    "        | \tNot MedDRA  || \tNo            | \tHidden\r\nPBMCC_197255_003 | \tAlways A" +
                    "ctive         | \tNA (Off)           | \tOn           | \tNA (On)          | \tMulti" +
                    "-path                 | \tNot MedDRA  || \tYes           | \tHidden\r\nPBMCC_197255_0" +
                    "04 | \tNever Active          | \tOn                 | \tOn           | \tNA (On)    " +
                    "      | \tSingle path and Multi-path | \tMedDRA      || \tNo            | \tHidden\r\n" +
                    "PBMCC_197255_005 | \tNever Active          | \tNA (Off)           | \tOn           " +
                    "| \tNA (On)          | \tSingle path                | \tNot MedDRA  || \tNo         " +
                    "   | \tHidden\r\nPBMCC_197255_006 | \tNever Active          | \tNA (Off)           | " +
                    "\tOn           | \tNA (On)          | \tMulti-path                 | \tNot MedDRA  |" +
                    "| \tYes           | \tShown\r\nPBMCC_197255_007 | \tNever Active          | \tOff     " +
                    "           | \tOn           | \tNA (On)          | \tMulti-path                 | \t" +
                    "MedDRA      || \tYes           | \tShown\r\nPBMCC_197255_008 | \tNever Active        " +
                    "  | \tOff                | \tOn           | \tNA (On)          | \tSingle path      " +
                    "          | \tMedDRA      || \tNo            | \tHidden\r\nPBMCC_197255_009 | \tNever " +
                    "Active          | \tOn                 | \tOff          | \tNA (On)          | \tSin" +
                    "gle path and Multi-path | \tMedDRA      || \tNo            | \tShown\r\nPBMCC_197255_" +
                    "010 | \tNever Active          | \tOn                 | \tOff          | \tNA (On)   " +
                    "       | \tSingle path and Multi-path | \tNot MedDRA  || \tYes           | \tShown\r\n" +
                    "PBMCC_197255_011 | \tAlways Active         | \tOn                 | \tOff          " +
                    "| \tNA (On)          | \tSingle path and Multi-path | \tMedDRA      || \tNo         " +
                    "   | \tHidden\r\nPBMCC_197255_012 | \tAlways Active         | \tNA (Off)           | " +
                    "\tOff          | \tNA (On)          | \tSingle path and Multi-path | \tNot MedDRA  |" +
                    "| \tYes           | \tHidden\r\nPBMCC_197255_013 | \tAlways Active         | \tOn     " +
                    "            | \tOn           | \tOff              | \tSingle path and Multi-path | " +
                    "\tMedDRA      || \tNo            | \tHidden\r\nPBMCC_197255_014 | \tAlways Active     " +
                    "    | \tOn                 | \tOn           | \tOff              | \tSingle path and" +
                    " Multi-path | \tNot MedDRA  || \tNo            | \tHidden\r\n\r\n_ The following enviro" +
                    "nment configuration settings were enabled:\r\n\r\n Empty Synonym Lists Registered:\r\n" +
                    " Synonym List 1: MedDRA             (ENG) 16.0     MedDRA_DDM\r\n Synonym List 2: " +
                    "MedDRA             (ENG) 18.0     MedDRA_DDM\r\n Synonym List 3: WhoDrugDDEB2     " +
                    "  (ENG) 201503   WhoDrugDDEB2_DDM\r\n\r\n Common Configurations:\r\n Configuration Nam" +
                    "e         | Declarative Browser Class | \r\n Approval                   | Approval" +
                    "Setup             |\r\n Basic                      | BasicSetup                | \r" +
                    "\n Completed Reconsider       | CompletedReconsiderSetup  |\r\n No Enforced Primary" +
                    " Path   | NoEnforcedPrimaryPath     |\r\n Synonyms Need Approval     | SynonymsNee" +
                    "dApproval      |", ProgrammingLanguage.CSharp, new string[] {
                        "specAutoApproveSynonymApproval.feature",
                        "CoderCore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"On\", Synonym Creation Flag is \"Always Active\" and Fo" +
            "rce Primary Path is \"On\", Single path and Multi-path MedDRA Direct Dictionary Ma" +
            "tch shall not be displayed in the Synonym Approval page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_001")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(240000)]
        public virtual void WhenAutoApproveOptionIsOnSynonymCreationFlagIsAlwaysActiveAndForcePrimaryPathIsOnSinglePathAndMulti_PathMedDRADirectDictionaryMatchShallNotBeDisplayedInTheSynonymApprovalPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"On\", Synonym Creation Flag is \"Always Active\" and Fo" +
                    "rce Primary Path is \"On\", Single path and Multi-path MedDRA Direct Dictionary Ma" +
                    "tch shall not be displayed in the Synonym Approval page", new string[] {
                        "VAL",
                        "PBMCC_197255_001",
                        "Release2015.3.0",
                        "IncreaseTimeout_240000"});
#line 41
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table1.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 43
   testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table1, "Given ");
#line 46
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalMedDRA.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table2.AddRow(new string[] {
                        "COUGHING",
                        "Coughing"});
            table2.AddRow(new string[] {
                        "COUGHING BLOOD",
                        "Coughing blood"});
#line 47
   testRunner.Then("the following coding decisions require approval", ((string)(null)), table2, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Term"});
            table3.AddRow(new string[] {
                        "HEADACHE",
                        "Headache"});
            table3.AddRow(new string[] {
                        "BROKEN LEG",
                        "Broken leg"});
            table3.AddRow(new string[] {
                        "COUGH",
                        "Cough"});
            table3.AddRow(new string[] {
                        "MIGRAINE HEADACHE",
                        "Migraine headache"});
            table3.AddRow(new string[] {
                        "BACK PAIN",
                        "Back pain"});
            table3.AddRow(new string[] {
                        "CHEST PAIN",
                        "Chest pain"});
#line 51
   testRunner.And("the following terms were autocoded and approved", ((string)(null)), table3, "And ");
#line 59
   testRunner.And("no synonym terms require approval", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table4.AddRow(new string[] {
                        "HEADACHE",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table4.AddRow(new string[] {
                        "BROKEN LEG",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table4.AddRow(new string[] {
                        "COUGH",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table4.AddRow(new string[] {
                        "MIGRAINE HEADACHE",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table4.AddRow(new string[] {
                        "BACK PAIN",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table4.AddRow(new string[] {
                        "CHEST PAIN",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
#line 60
   testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table4, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"On\" Synonym Creation Flag is \"Always Active\", And Fo" +
            "rce Primary Path is \"On\", Single path Direct Dictionary Match shall not be displ" +
            "ayed in the Synonym Approval page.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_002")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenAutoApproveOptionIsOnSynonymCreationFlagIsAlwaysActiveAndForcePrimaryPathIsOnSinglePathDirectDictionaryMatchShallNotBeDisplayedInTheSynonymApprovalPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"On\" Synonym Creation Flag is \"Always Active\", And Fo" +
                    "rce Primary Path is \"On\", Single path Direct Dictionary Match shall not be displ" +
                    "ayed in the Synonym Approval page.", new string[] {
                        "VAL",
                        "PBMCC_197255_002",
                        "Release2015.3.0"});
#line 72
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table5.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201503",
                        "ENG"});
#line 74
   testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table5, "Given ");
#line 77
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalWhoDrugDDEB2.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table6.AddRow(new string[] {
                        "TYLENOL INFANT",
                        "Tylenol infant"});
#line 78
   testRunner.Then("the following coding decisions require approval", ((string)(null)), table6, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Term"});
            table7.AddRow(new string[] {
                        "TYLENOL COUGH",
                        "Tylenol cough"});
            table7.AddRow(new string[] {
                        "PENICILLIN V BASIC",
                        "Penicillin v basic"});
            table7.AddRow(new string[] {
                        "ADVIL COLD",
                        "Advil cold"});
#line 81
   testRunner.And("the following terms were autocoded and approved", ((string)(null)), table7, "And ");
#line 86
   testRunner.And("no synonym terms require approval", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table8.AddRow(new string[] {
                        "TYLENOL COUGH",
                        "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM",
                        "false"});
            table8.AddRow(new string[] {
                        "PENICILLIN V BASIC",
                        "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM",
                        "false"});
            table8.AddRow(new string[] {
                        "ADVIL COLD",
                        "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM",
                        "false"});
#line 87
   testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table8, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"On\" and Synonym Creation Flag is \"Always Active\", Mu" +
            "lti-path Direct Dictionary Match shall require manual coding, and shall not disp" +
            "lay in the Synonym Approval page when a synonym is created.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_003")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(240000)]
        public virtual void WhenAutoApproveOptionIsOnAndSynonymCreationFlagIsAlwaysActiveMulti_PathDirectDictionaryMatchShallRequireManualCodingAndShallNotDisplayInTheSynonymApprovalPageWhenASynonymIsCreated_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"On\" and Synonym Creation Flag is \"Always Active\", Mu" +
                    "lti-path Direct Dictionary Match shall require manual coding, and shall not disp" +
                    "lay in the Synonym Approval page when a synonym is created.", new string[] {
                        "VAL",
                        "PBMCC_197255_003",
                        "Release2015.3.0",
                        "IncreaseTimeout_240000"});
#line 97
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table9.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201503",
                        "ENG"});
#line 99
   testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table9, "Given ");
#line 102
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalWhoDrugDDEB2.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 103
   testRunner.And("task \"JUNIOR ASPRIN\" is coded to term \"JUNIOR ASPRIN\" at search level \"Trade Name" +
                    "\" with code \"000027 01 583\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
   testRunner.And("task \"PAIN\" is coded to term \"PAIN\" at search level \"Trade Name\" with code \"00027" +
                    "7 04 191\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
   testRunner.And("task \"VITAMIN-A\" is coded to term \"VITAMIN-A\" at search level \"Trade Name\" with c" +
                    "ode \"000560 01 078\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
   testRunner.And("task \"VITAMIN-C\" is coded to term \"VITAMIN-C\" at search level \"Trade Name\" with c" +
                    "ode \"000080 01 517\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table10.AddRow(new string[] {
                        "JUNIOR ASPRIN",
                        "Junior asprin"});
            table10.AddRow(new string[] {
                        "TYLENOL INFANT",
                        "Tylenol infant"});
#line 107
   testRunner.Then("the following coding decisions require approval", ((string)(null)), table10, "Then ");
#line 111
   testRunner.And("no synonym terms require approval", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table11.AddRow(new string[] {
                        "VITAMIN-A",
                        "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM",
                        "true"});
            table11.AddRow(new string[] {
                        "VITAMIN-C",
                        "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM",
                        "true"});
#line 112
   testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table11, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"On\", Synonym Creation Flag is \"Never Active\" and For" +
            "ce Primary Path is \"On\", Single path and Multi-path MedDRA Direct Dictionary Mat" +
            "ch shall not be displayed in the Synonym Approval page.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_004")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void WhenAutoApproveOptionIsOnSynonymCreationFlagIsNeverActiveAndForcePrimaryPathIsOnSinglePathAndMulti_PathMedDRADirectDictionaryMatchShallNotBeDisplayedInTheSynonymApprovalPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"On\", Synonym Creation Flag is \"Never Active\" and For" +
                    "ce Primary Path is \"On\", Single path and Multi-path MedDRA Direct Dictionary Mat" +
                    "ch shall not be displayed in the Synonym Approval page.", new string[] {
                        "VAL",
                        "PBMCC_197255_004",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000"});
#line 121
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table12.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 123
   testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table12, "Given ");
#line 126
   testRunner.When("I configure the Synonym Creation Policy Flag to \"Never Active\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 127
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalMedDRA.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table13.AddRow(new string[] {
                        "COUGHING",
                        "Coughing"});
            table13.AddRow(new string[] {
                        "COUGHING BLOOD",
                        "Coughing blood"});
#line 128
   testRunner.Then("the following coding decisions require approval", ((string)(null)), table13, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Term"});
            table14.AddRow(new string[] {
                        "HEADACHE",
                        "Headache"});
            table14.AddRow(new string[] {
                        "BROKEN LEG",
                        "Broken leg"});
            table14.AddRow(new string[] {
                        "COUGH",
                        "Cough"});
            table14.AddRow(new string[] {
                        "MIGRAINE HEADACHE",
                        "Migraine headache"});
            table14.AddRow(new string[] {
                        "BACK PAIN",
                        "Back pain"});
            table14.AddRow(new string[] {
                        "CHEST PAIN",
                        "Chest pain"});
#line 132
   testRunner.And("the following terms were autocoded and approved", ((string)(null)), table14, "And ");
#line 140
   testRunner.And("no synonym terms require approval", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table15.AddRow(new string[] {
                        "HEADACHE",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table15.AddRow(new string[] {
                        "BROKEN LEG",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table15.AddRow(new string[] {
                        "COUGH",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table15.AddRow(new string[] {
                        "MIGRAINE HEADACHE",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table15.AddRow(new string[] {
                        "BACK PAIN",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table15.AddRow(new string[] {
                        "CHEST PAIN",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
#line 141
   testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table15, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"On\", Synonym Creation Flag is \"Never Active\", Single" +
            " path Direct Dictionary Match shall not be displayed in the Synonym Approval pag" +
            "e.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_005")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenAutoApproveOptionIsOnSynonymCreationFlagIsNeverActiveSinglePathDirectDictionaryMatchShallNotBeDisplayedInTheSynonymApprovalPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"On\", Synonym Creation Flag is \"Never Active\", Single" +
                    " path Direct Dictionary Match shall not be displayed in the Synonym Approval pag" +
                    "e.", new string[] {
                        "VAL",
                        "PBMCC_197255_005",
                        "Release2015.3.0"});
#line 153
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table16.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201503",
                        "ENG"});
#line 155
   testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table16, "Given ");
#line 158
   testRunner.When("I configure the Synonym Creation Policy Flag to \"Never Active\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 159
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalWhoDrugDDEB2.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table17.AddRow(new string[] {
                        "TYLENOL INFANT",
                        "Tylenol infant"});
#line 160
   testRunner.Then("the following coding decisions require approval", ((string)(null)), table17, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Term"});
            table18.AddRow(new string[] {
                        "TYLENOL COUGH",
                        "Tylenol cough"});
            table18.AddRow(new string[] {
                        "PENICILLIN V BASIC",
                        "Penicillin v basic"});
            table18.AddRow(new string[] {
                        "ADVIL COLD",
                        "Advil cold"});
#line 163
   testRunner.And("the following terms were autocoded and approved", ((string)(null)), table18, "And ");
#line 168
   testRunner.And("no synonym terms require approval", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table19.AddRow(new string[] {
                        "TYLENOL COUGH",
                        "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM",
                        "false"});
            table19.AddRow(new string[] {
                        "PENICILLIN V BASIC",
                        "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM",
                        "false"});
            table19.AddRow(new string[] {
                        "ADVIL COLD",
                        "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM",
                        "false"});
#line 169
   testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table19, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"On\", Synonym Creation Flag is \"Never Active\", Multi-" +
            "path Direct Dictionary Match shall require manual coding, and shall display in t" +
            "he Synonym Approval page when a synonym is created.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_006")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(240000)]
        public virtual void WhenAutoApproveOptionIsOnSynonymCreationFlagIsNeverActiveMulti_PathDirectDictionaryMatchShallRequireManualCodingAndShallDisplayInTheSynonymApprovalPageWhenASynonymIsCreated_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"On\", Synonym Creation Flag is \"Never Active\", Multi-" +
                    "path Direct Dictionary Match shall require manual coding, and shall display in t" +
                    "he Synonym Approval page when a synonym is created.", new string[] {
                        "VAL",
                        "PBMCC_197255_006",
                        "Release2015.3.0",
                        "IncreaseTimeout_240000"});
#line 179
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table20.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201503",
                        "ENG"});
#line 181
   testRunner.Given("a \"Completed Reconsider\" Coder setup with no tasks and no synonyms and dictionari" +
                    "es", ((string)(null)), table20, "Given ");
#line 184
   testRunner.When("I configure the Synonym Creation Policy Flag to \"Never Active\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 185
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalWhoDrugDDEB2.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 186
   testRunner.And("task \"JUNIOR ASPRIN\" is coded to term \"JUNIOR ASPRIN\" at search level \"Trade Name" +
                    "\" with code \"000027 01 583\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
   testRunner.And("task \"PAIN\" is coded to term \"PAIN\" at search level \"Trade Name\" with code \"00027" +
                    "7 04 191\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
   testRunner.And("task \"VITAMIN-A\" is coded to term \"VITAMIN-A\" at search level \"Trade Name\" with c" +
                    "ode \"000560 01 078\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
   testRunner.And("task \"VITAMIN-C\" is coded to term \"VITAMIN-C\" at search level \"Trade Name\" with c" +
                    "ode \"000080 01 517\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table21.AddRow(new string[] {
                        "JUNIOR ASPRIN",
                        "Junior asprin"});
            table21.AddRow(new string[] {
                        "PAIN",
                        "Pain"});
            table21.AddRow(new string[] {
                        "TYLENOL INFANT",
                        "Tylenol infant"});
#line 190
   testRunner.Then("the following coding decisions require approval", ((string)(null)), table21, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim"});
            table22.AddRow(new string[] {
                        "JUNIOR ASPRIN"});
            table22.AddRow(new string[] {
                        "PAIN"});
            table22.AddRow(new string[] {
                        "VITAMIN-A"});
            table22.AddRow(new string[] {
                        "VITAMIN-C"});
#line 195
   testRunner.And("the following synonym terms require approval", ((string)(null)), table22, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"On\", Synonym Creation Flag is \"Never Active\" and For" +
            "ce Primary Path is \"OFF\", Multi-path MedDRA Direct Dictionary Match shall requir" +
            "e manual coding, and shall display in the Synonym Approval page when a synonym i" +
            "s created.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_007")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(240000)]
        public virtual void WhenAutoApproveOptionIsOnSynonymCreationFlagIsNeverActiveAndForcePrimaryPathIsOFFMulti_PathMedDRADirectDictionaryMatchShallRequireManualCodingAndShallDisplayInTheSynonymApprovalPageWhenASynonymIsCreated_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"On\", Synonym Creation Flag is \"Never Active\" and For" +
                    "ce Primary Path is \"OFF\", Multi-path MedDRA Direct Dictionary Match shall requir" +
                    "e manual coding, and shall display in the Synonym Approval page when a synonym i" +
                    "s created.", new string[] {
                        "VAL",
                        "PBMCC_197255_007",
                        "Release2015.3.0",
                        "IncreaseTimeout_240000"});
#line 206
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table23.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 208
   testRunner.Given("a \"No Enforced Primary Path\" Coder setup with no tasks and no synonyms and dictio" +
                    "naries", ((string)(null)), table23, "Given ");
#line 211
   testRunner.When("I configure the Synonym Creation Policy Flag to \"Never Active\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 212
   testRunner.And("I configure dictionary \"MedDRA\" with \"Auto Approve\" set to \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalMedDRA.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 214
   testRunner.And("task \"BROKEN LEG\" is coded to term \"Broken leg\" at search level \"Low Level Term\" " +
                    "with code \"10006391\" at level \"LLT\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
   testRunner.And("task \"CHEST PAIN\" is coded to term \"Chest pain\" at search level \"Low Level Term\" " +
                    "with code \"10008479\" at level \"LLT\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
   testRunner.And("task \"COUGHING BLOOD\" is coded to term \"Coughing blood\" at search level \"Low Leve" +
                    "l Term\" with code \"10011234\" at level \"LLT\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
   testRunner.And("task \"MIGRAINE HEADACHE\" is coded to term \"Migraine headache\" at search level \"Lo" +
                    "w Level Term\" with code \"10027602\" at level \"LLT\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table24.AddRow(new string[] {
                        "BROKEN LEG",
                        "Broken leg"});
            table24.AddRow(new string[] {
                        "COUGHING",
                        "Coughing"});
            table24.AddRow(new string[] {
                        "COUGHING BLOOD",
                        "Coughing blood"});
#line 218
   testRunner.Then("the following coding decisions require approval", ((string)(null)), table24, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim"});
            table25.AddRow(new string[] {
                        "BROKEN LEG"});
            table25.AddRow(new string[] {
                        "CHEST PAIN"});
            table25.AddRow(new string[] {
                        "COUGHING BLOOD"});
            table25.AddRow(new string[] {
                        "MIGRAINE HEADACHE"});
#line 223
   testRunner.And("the following synonym terms require approval", ((string)(null)), table25, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"On\", Synonym Creation Flag is \"Never Active\" and For" +
            "ce Primary Path is \"OFF\", Single-path MedDRA Direct Dictionary Match shall not b" +
            "e displayed in the Synonym Approval page.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_008")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenAutoApproveOptionIsOnSynonymCreationFlagIsNeverActiveAndForcePrimaryPathIsOFFSingle_PathMedDRADirectDictionaryMatchShallNotBeDisplayedInTheSynonymApprovalPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"On\", Synonym Creation Flag is \"Never Active\" and For" +
                    "ce Primary Path is \"OFF\", Single-path MedDRA Direct Dictionary Match shall not b" +
                    "e displayed in the Synonym Approval page.", new string[] {
                        "VAL",
                        "PBMCC_197255_008",
                        "Release2015.3.0"});
#line 233
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table26.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 235
   testRunner.Given("a \"No Enforced Primary Path\" Coder setup with no tasks and no synonyms and dictio" +
                    "naries", ((string)(null)), table26, "Given ");
#line 238
   testRunner.When("I configure the Synonym Creation Policy Flag to \"Never Active\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 239
   testRunner.And("I configure dictionary \"MedDRA\" with \"Auto Approve\" set to \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 240
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalMedDRA.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table27.AddRow(new string[] {
                        "COUGHING",
                        "Coughing"});
#line 241
   testRunner.Then("the following coding decisions require approval", ((string)(null)), table27, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Term"});
            table28.AddRow(new string[] {
                        "HEADACHE",
                        "Headache"});
            table28.AddRow(new string[] {
                        "COUGH",
                        "Cough"});
            table28.AddRow(new string[] {
                        "BACK PAIN",
                        "Back pain"});
#line 244
   testRunner.And("the following terms were autocoded and approved", ((string)(null)), table28, "And ");
#line 249
   testRunner.And("no synonym terms require approval", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table29.AddRow(new string[] {
                        "HEADACHE",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table29.AddRow(new string[] {
                        "COUGH",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
            table29.AddRow(new string[] {
                        "BACK PAIN",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "false"});
#line 250
   testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table29, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"OFF\", Synonym Creation Flag is \"Never Active\" and Fo" +
            "rce Primary Path is \"On\", Single path and Multi-path MedDRA Direct Dictionary Ma" +
            "tch shall display in the Synonym Approval page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_009")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(300000)]
        public virtual void WhenAutoApproveOptionIsOFFSynonymCreationFlagIsNeverActiveAndForcePrimaryPathIsOnSinglePathAndMulti_PathMedDRADirectDictionaryMatchShallDisplayInTheSynonymApprovalPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"OFF\", Synonym Creation Flag is \"Never Active\" and Fo" +
                    "rce Primary Path is \"On\", Single path and Multi-path MedDRA Direct Dictionary Ma" +
                    "tch shall display in the Synonym Approval page", new string[] {
                        "VAL",
                        "PBMCC_197255_009",
                        "Release2015.3.0",
                        "IncreaseTimeout_300000"});
#line 260
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table30.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "18.0",
                        "ENG"});
#line 262
   testRunner.Given("a \"Synonyms Need Approval\" Coder setup with no tasks and no synonyms and dictiona" +
                    "ries", ((string)(null)), table30, "Given ");
#line 265
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalMedDRA.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table31.AddRow(new string[] {
                        "BROKEN LEG",
                        "Broken leg"});
            table31.AddRow(new string[] {
                        "COUGHING",
                        "Coughing"});
            table31.AddRow(new string[] {
                        "COUGHING BLOOD",
                        "Coughing blood"});
            table31.AddRow(new string[] {
                        "HEADACHE",
                        "Headache"});
#line 266
   testRunner.Then("the following coding decisions require approval", ((string)(null)), table31, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Term"});
            table32.AddRow(new string[] {
                        "COUGH",
                        "Cough"});
            table32.AddRow(new string[] {
                        "MIGRAINE HEADACHE",
                        "Migraine headache"});
            table32.AddRow(new string[] {
                        "BACK PAIN",
                        "Back pain"});
            table32.AddRow(new string[] {
                        "CHEST PAIN",
                        "Chest pain"});
#line 272
   testRunner.And("the following terms were autocoded and approved", ((string)(null)), table32, "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim"});
            table33.AddRow(new string[] {
                        "BACK PAIN"});
            table33.AddRow(new string[] {
                        "BROKEN LEG"});
            table33.AddRow(new string[] {
                        "CHEST PAIN"});
            table33.AddRow(new string[] {
                        "COUGH"});
            table33.AddRow(new string[] {
                        "COUGHING"});
            table33.AddRow(new string[] {
                        "COUGHING BLOOD"});
            table33.AddRow(new string[] {
                        "HEADACHE"});
            table33.AddRow(new string[] {
                        "MIGRAINE HEADACHE"});
#line 278
   testRunner.And("the following synonym terms require approval", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table34.AddRow(new string[] {
                        "COUGH",
                        "MedDRA ENG 18.0 MedDRA_DDM",
                        "true"});
            table34.AddRow(new string[] {
                        "MIGRAINE HEADACHE",
                        "MedDRA ENG 18.0 MedDRA_DDM",
                        "true"});
            table34.AddRow(new string[] {
                        "BACK PAIN",
                        "MedDRA ENG 18.0 MedDRA_DDM",
                        "true"});
            table34.AddRow(new string[] {
                        "CHEST PAIN",
                        "MedDRA ENG 18.0 MedDRA_DDM",
                        "true"});
#line 288
   testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table34, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"OFF\", Synonym Creation Flag is \"Never Active\" and Fo" +
            "rce Primary Path is \"On\", Single path Direct Dictionary Match and Multi-path DDM" +
            " shall be displayed in the Synonym Approval page")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_010")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(240000)]
        public virtual void WhenAutoApproveOptionIsOFFSynonymCreationFlagIsNeverActiveAndForcePrimaryPathIsOnSinglePathDirectDictionaryMatchAndMulti_PathDDMShallBeDisplayedInTheSynonymApprovalPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"OFF\", Synonym Creation Flag is \"Never Active\" and Fo" +
                    "rce Primary Path is \"On\", Single path Direct Dictionary Match and Multi-path DDM" +
                    " shall be displayed in the Synonym Approval page", new string[] {
                        "VAL",
                        "PBMCC_197255_010",
                        "Release2015.3.0",
                        "IncreaseTimeout_240000"});
#line 299
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table35.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201503",
                        "ENG"});
#line 301
   testRunner.Given("a \"Synonyms Need Approval\" Coder setup with no tasks and no synonyms and dictiona" +
                    "ries", ((string)(null)), table35, "Given ");
#line 304
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalWhoDrugDDEB2.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term"});
            table36.AddRow(new string[] {
                        "JUNIOR ASPRIN"});
            table36.AddRow(new string[] {
                        "PAIN"});
            table36.AddRow(new string[] {
                        "VITAMIN-A"});
            table36.AddRow(new string[] {
                        "VITAMIN-C"});
#line 305
   testRunner.Then("the following coding decisions require manual coding", ((string)(null)), table36, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table37.AddRow(new string[] {
                        "TYLENOL COUGH",
                        "Tylenol cough"});
            table37.AddRow(new string[] {
                        "TYLENOL INFANT",
                        "Tylenol infant"});
#line 311
   testRunner.And("the following coding decisions require approval", ((string)(null)), table37, "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Term"});
            table38.AddRow(new string[] {
                        "PENICILLIN V BASIC",
                        "Penicillin v basic"});
            table38.AddRow(new string[] {
                        "ADVIL COLD",
                        "Advil cold"});
#line 315
   testRunner.And("the following terms were autocoded and approved", ((string)(null)), table38, "And ");
#line 319
   testRunner.When("all task filters are cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 320
   testRunner.And("task \"JUNIOR ASPRIN\" is coded to term \"JUNIOR ASPRIN\" at search level \"Trade Name" +
                    "\" with code \"000027 01 583\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim"});
            table39.AddRow(new string[] {
                        "ADVIL COLD"});
            table39.AddRow(new string[] {
                        "JUNIOR ASPRIN"});
            table39.AddRow(new string[] {
                        "PENICILLIN V BASIC"});
            table39.AddRow(new string[] {
                        "TYLENOL COUGH"});
            table39.AddRow(new string[] {
                        "TYLENOL INFANT"});
#line 321
   testRunner.Then("the following synonym terms require approval", ((string)(null)), table39, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table40.AddRow(new string[] {
                        "PENICILLIN V BASIC",
                        "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM",
                        "true"});
            table40.AddRow(new string[] {
                        "ADVIL COLD",
                        "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM",
                        "true"});
#line 328
   testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table40, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"OFF\", Synonym Creation Flag is \"Always Active\" and F" +
            "orce Primary Path is \"On\", Single path and Multi-path MedDRA Direct Dictionary M" +
            "atch shall not be displayed in the Synonym Approval page.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_011")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenAutoApproveOptionIsOFFSynonymCreationFlagIsAlwaysActiveAndForcePrimaryPathIsOnSinglePathAndMulti_PathMedDRADirectDictionaryMatchShallNotBeDisplayedInTheSynonymApprovalPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"OFF\", Synonym Creation Flag is \"Always Active\" and F" +
                    "orce Primary Path is \"On\", Single path and Multi-path MedDRA Direct Dictionary M" +
                    "atch shall not be displayed in the Synonym Approval page.", new string[] {
                        "VAL",
                        "PBMCC_197255_011",
                        "Release2015.3.0"});
#line 336
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table41.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 338
   testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table41, "Given ");
#line 341
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalMedDRA.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table42.AddRow(new string[] {
                        "COUGHING",
                        "Coughing"});
            table42.AddRow(new string[] {
                        "COUGHING BLOOD",
                        "Coughing blood"});
#line 342
   testRunner.Then("the following coding decisions require approval", ((string)(null)), table42, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Term"});
            table43.AddRow(new string[] {
                        "HEADACHE",
                        "Headache"});
            table43.AddRow(new string[] {
                        "BROKEN LEG",
                        "Broken leg"});
            table43.AddRow(new string[] {
                        "COUGH",
                        "Cough"});
            table43.AddRow(new string[] {
                        "MIGRAINE HEADACHE",
                        "Migraine headache"});
            table43.AddRow(new string[] {
                        "BACK PAIN",
                        "Back pain"});
            table43.AddRow(new string[] {
                        "CHEST PAIN",
                        "Chest pain"});
#line 346
   testRunner.And("the following terms were autocoded and approved", ((string)(null)), table43, "And ");
#line 354
   testRunner.And("no synonym terms require approval", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table44.AddRow(new string[] {
                        "HEADACHE",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "true"});
            table44.AddRow(new string[] {
                        "BROKEN LEG",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "true"});
            table44.AddRow(new string[] {
                        "COUGH",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "true"});
            table44.AddRow(new string[] {
                        "MIGRAINE HEADACHE",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "true"});
            table44.AddRow(new string[] {
                        "BACK PAIN",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "true"});
            table44.AddRow(new string[] {
                        "CHEST PAIN",
                        "MedDRA ENG 16.0 MedDRA_DDM",
                        "true"});
#line 355
   testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table44, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"OFF\", Synonym Creation Flag is \"Always Active\", Sing" +
            "le path Direct Dictionary Match and Multi-path DDM shall not be displayed in the" +
            " Synonym Approval page.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_012")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(240000)]
        public virtual void WhenAutoApproveOptionIsOFFSynonymCreationFlagIsAlwaysActiveSinglePathDirectDictionaryMatchAndMulti_PathDDMShallNotBeDisplayedInTheSynonymApprovalPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"OFF\", Synonym Creation Flag is \"Always Active\", Sing" +
                    "le path Direct Dictionary Match and Multi-path DDM shall not be displayed in the" +
                    " Synonym Approval page.", new string[] {
                        "VAL",
                        "PBMCC_197255_012",
                        "Release2015.3.0",
                        "IncreaseTimeout_240000"});
#line 368
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table45.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201503",
                        "ENG"});
#line 370
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table45, "Given ");
#line 373
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalWhoDrugDDEB2.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term"});
            table46.AddRow(new string[] {
                        "JUNIOR ASPRIN"});
            table46.AddRow(new string[] {
                        "PAIN"});
            table46.AddRow(new string[] {
                        "VITAMIN-A"});
            table46.AddRow(new string[] {
                        "VITAMIN-C"});
#line 374
   testRunner.Then("the following coding decisions require manual coding", ((string)(null)), table46, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table47.AddRow(new string[] {
                        "TYLENOL INFANT",
                        "Tylenol infant"});
#line 380
   testRunner.And("the following coding decisions require approval", ((string)(null)), table47, "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Term"});
            table48.AddRow(new string[] {
                        "TYLENOL COUGH",
                        "Tylenol cough"});
            table48.AddRow(new string[] {
                        "PENICILLIN V BASIC",
                        "Penicillin v basic"});
            table48.AddRow(new string[] {
                        "ADVIL COLD",
                        "Advil cold"});
#line 383
   testRunner.And("the following terms were autocoded and approved", ((string)(null)), table48, "And ");
#line 388
   testRunner.When("all task filters are cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 389
   testRunner.And("task \"JUNIOR ASPRIN\" is coded to term \"JUNIOR ASPRIN\" at search level \"Trade Name" +
                    "\" with code \"000027 01 583\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
   testRunner.Then("no synonym terms require approval", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "verbatim",
                        "dictionaryLocaleVersionSynonymListName",
                        "exists"});
            table49.AddRow(new string[] {
                        "TYLENOL COUGH",
                        "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM",
                        "true"});
            table49.AddRow(new string[] {
                        "PENICILLIN V BASIC",
                        "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM",
                        "true"});
            table49.AddRow(new string[] {
                        "ADVIL COLD",
                        "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM",
                        "true"});
#line 391
   testRunner.And("synonyms for verbatim terms should be created and exist in lists", ((string)(null)), table49, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"On\", Synonym Creation Flag is \"Always Active\", Auto " +
            "Add Synonym is \"OFF\", and Force Primary Path is \"On\", Single path and Multi-path" +
            " MedDRA Direct Dictionary Match terms shall not be displayed in the Synonym Appr" +
            "oval page.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_013")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void WhenAutoApproveOptionIsOnSynonymCreationFlagIsAlwaysActiveAutoAddSynonymIsOFFAndForcePrimaryPathIsOnSinglePathAndMulti_PathMedDRADirectDictionaryMatchTermsShallNotBeDisplayedInTheSynonymApprovalPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"On\", Synonym Creation Flag is \"Always Active\", Auto " +
                    "Add Synonym is \"OFF\", and Force Primary Path is \"On\", Single path and Multi-path" +
                    " MedDRA Direct Dictionary Match terms shall not be displayed in the Synonym Appr" +
                    "oval page.", new string[] {
                        "VAL",
                        "PBMCC_197255_013",
                        "Release2015.3.0"});
#line 400
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table50.AddRow(new string[] {
                        "MedDRA_DDM",
                        "MedDRA",
                        "16.0",
                        "ENG"});
#line 402
   testRunner.Given("a \"Approval\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table50, "Given ");
#line 405
   testRunner.When("I configure dictionary \"MedDRA\" with \"Auto Approve\" set to \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 406
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalMedDRA.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table51.AddRow(new string[] {
                        "BROKEN LEG",
                        "Broken leg"});
            table51.AddRow(new string[] {
                        "COUGHING",
                        "Coughing"});
            table51.AddRow(new string[] {
                        "COUGHING BLOOD",
                        "Coughing blood"});
            table51.AddRow(new string[] {
                        "HEADACHE",
                        "Headache"});
#line 407
   testRunner.Then("the following coding decisions require approval", ((string)(null)), table51, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Term"});
            table52.AddRow(new string[] {
                        "COUGH",
                        "Cough"});
            table52.AddRow(new string[] {
                        "MIGRAINE HEADACHE",
                        "Migraine headache"});
            table52.AddRow(new string[] {
                        "BACK PAIN",
                        "Back pain"});
            table52.AddRow(new string[] {
                        "CHEST PAIN",
                        "Chest pain"});
#line 413
   testRunner.And("the following terms were autocoded and approved", ((string)(null)), table52, "And ");
#line 419
   testRunner.And("no synonym terms require approval", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 420
   testRunner.And("the number of synonyms created for list \"MedDRA ENG 16.0 MedDRA_DDM\" is \"0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When Auto Approve option is \"On\", Synonym Creation Flag is \"Always Active\", Auto " +
            "Add Synonym is \"OFF\", and Force Primary Path is \"On\", Single path Direct Diction" +
            "ary Match terms and Multi-path DDM will not be displayed in the Synonym Approval" +
            " page.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_197255_014")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(240000)]
        public virtual void WhenAutoApproveOptionIsOnSynonymCreationFlagIsAlwaysActiveAutoAddSynonymIsOFFAndForcePrimaryPathIsOnSinglePathDirectDictionaryMatchTermsAndMulti_PathDDMWillNotBeDisplayedInTheSynonymApprovalPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When Auto Approve option is \"On\", Synonym Creation Flag is \"Always Active\", Auto " +
                    "Add Synonym is \"OFF\", and Force Primary Path is \"On\", Single path Direct Diction" +
                    "ary Match terms and Multi-path DDM will not be displayed in the Synonym Approval" +
                    " page.", new string[] {
                        "VAL",
                        "PBMCC_197255_014",
                        "Release2015.3.0",
                        "IncreaseTimeout_240000"});
#line 426
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "SynonymListName",
                        "Dictionary",
                        "Version",
                        "Locale"});
            table53.AddRow(new string[] {
                        "WhoDrugDDEB2_DDM",
                        "WhoDrugDDEB2",
                        "201503",
                        "ENG"});
#line 428
   testRunner.Given("a \"Approval\" Coder setup with no tasks and no synonyms and dictionaries", ((string)(null)), table53, "Given ");
#line 431
   testRunner.When("I configure dictionary \"WhoDrugDDEB2\" with \"Auto Approve\" set to \"true\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 432
   testRunner.When("the following externally managed verbatim requests are made \"AutoApproveSynonymAp" +
                    "provalWhoDrugDDEB2.json\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term"});
            table54.AddRow(new string[] {
                        "JUNIOR ASPRIN"});
            table54.AddRow(new string[] {
                        "PAIN"});
            table54.AddRow(new string[] {
                        "VITAMIN-A"});
            table54.AddRow(new string[] {
                        "VITAMIN-C"});
#line 433
   testRunner.Then("the following coding decisions require manual coding", ((string)(null)), table54, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Assigned Term"});
            table55.AddRow(new string[] {
                        "TYLENOL COUGH",
                        "Tylenol cough"});
            table55.AddRow(new string[] {
                        "TYLENOL INFANT",
                        "Tylenol infant"});
#line 439
   testRunner.And("the following coding decisions require approval", ((string)(null)), table55, "And ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Term"});
            table56.AddRow(new string[] {
                        "PENICILLIN V BASIC",
                        "Penicillin v basic"});
            table56.AddRow(new string[] {
                        "ADVIL COLD",
                        "Advil cold"});
#line 443
   testRunner.And("the following terms were autocoded and approved", ((string)(null)), table56, "And ");
#line 447
   testRunner.When("all task filters are cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 448
   testRunner.When("task \"JUNIOR ASPRIN\" is coded to term \"JUNIOR ASPRIN\" at search level \"Trade Name" +
                    "\" with code \"000027 01 583\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 449
   testRunner.Then("no synonym terms require approval", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 450
   testRunner.And("the number of synonyms created for list \"WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM" +
                    "\" is \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 451
   testRunner.And("a synonym for verbatim term \"JUNIOR ASPRIN\" should be created and exist in list \"" +
                    "WhoDrugDDEB2 ENG 201503 WhoDrugDDEB2_DDM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
