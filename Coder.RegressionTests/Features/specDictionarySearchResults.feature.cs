// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.RegressionTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("This feature will verify the behavior of the coding system\'s Dictionary Search an" +
        "d Results Content")]
    [NUnit.Framework.CategoryAttribute("specDictionarySearchResults.feature")]
    [NUnit.Framework.CategoryAttribute("CoderCore")]
    public partial class ThisFeatureWillVerifyTheBehaviorOfTheCodingSystemSDictionarySearchAndResultsContentFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specDictionarySearchResults.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "This feature will verify the behavior of the coding system\'s Dictionary Search an" +
                    "d Results Content", "", ProgrammingLanguage.CSharp, new string[] {
                        "specDictionarySearchResults.feature",
                        "CoderCore"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A dictionary search for MedDRA (JPN) with template high to low will provide dicti" +
            "onary levels in the following order: SOC, HLGT, HLT, PT, and LLT")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_002")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void ADictionarySearchForMedDRAJPNWithTemplateHighToLowWillProvideDictionaryLevelsInTheFollowingOrderSOCHLGTHLTPTAndLLT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A dictionary search for MedDRA (JPN) with template high to low will provide dicti" +
                    "onary levels in the following order: SOC, HLGT, HLT, PT, and LLT", new string[] {
                        "VAL",
                        "PBMCC_154852_002",
                        "Release2015.3.0",
                        "IncreaseTimeout_360000"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 11
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA JPN 15" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
  testRunner.And("I begin a search in dictionary \"MedDRA 15.0 Japanese\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
  testRunner.And("I select Synonym List \"Without Synonyms\" and Template \"High To Low\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
  testRunner.And("I enter \"ウィップル病\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table1.AddRow(new string[] {
                        "Low Level Term"});
#line 15
  testRunner.And("I select the following levels for the search", ((string)(null)), table1, "And ");
#line 18
  testRunner.And("I want only exact match results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level"});
            table2.AddRow(new string[] {
                        "胃腸障害",
                        "10017947",
                        "SOC"});
            table2.AddRow(new string[] {
                        "吸収不良性疾患",
                        "10025477",
                        "HLGT"});
            table2.AddRow(new string[] {
                        "吸収不良症候群",
                        "10025480",
                        "HLT"});
            table2.AddRow(new string[] {
                        "ホイップル病",
                        "10047931",
                        "PT"});
            table2.AddRow(new string[] {
                        "ウィップル病",
                        "10047933",
                        "LLT"});
#line 20
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A dictionary search for J-Drug (JPN) will provide correct dictionary levels in th" +
            "e following order: (大) High-Level, (中) Mid-Level, (小) Low-Level, and (細) Detaile" +
            "d Classifications")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_008")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void ADictionarySearchForJ_DrugJPNWillProvideCorrectDictionaryLevelsInTheFollowingOrder大High_Level中Mid_Level小Low_LevelAnd細DetailedClassifications()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A dictionary search for J-Drug (JPN) will provide correct dictionary levels in th" +
                    "e following order: (大) High-Level, (中) Mid-Level, (小) Low-Level, and (細) Detaile" +
                    "d Classifications", new string[] {
                        "VAL",
                        "PBMCC_154852_008",
                        "Release2015.3.0"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 34
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"JDrug JPN 201" +
                    "4h2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
  testRunner.And("I begin a search in dictionary \"J-Drug 2014h2 Japanese\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
  testRunner.And("I select Synonym List \"Without Synonyms\" and Template \"High To Low\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
  testRunner.And("I enter \"プロタミン製剤\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table3.AddRow(new string[] {
                        "Detailed Classification"});
#line 38
  testRunner.And("I select the following levels for the search", ((string)(null)), table3, "And ");
#line 41
  testRunner.And("I want only exact match results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level"});
            table4.AddRow(new string[] {
                        "代謝性医薬品",
                        "3",
                        "大"});
            table4.AddRow(new string[] {
                        "血液・体液用薬",
                        "33",
                        "中"});
            table4.AddRow(new string[] {
                        "その他の血液・体液用薬",
                        "339",
                        "小"});
            table4.AddRow(new string[] {
                        "プロタミン製剤",
                        "3391",
                        "細"});
#line 43
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A dictionary search for J-Drug (JPN) will provide correct dictionary levels in th" +
            "e following order: (大) High-Level, (中) Mid-Level, (小) Low-Level, (細) Detailed, (" +
            "般) Preferred Name, (区) Category, (薬) Drug Name, (英) English Name")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_009")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void ADictionarySearchForJ_DrugJPNWillProvideCorrectDictionaryLevelsInTheFollowingOrder大High_Level中Mid_Level小Low_Level細Detailed般PreferredName区Category薬DrugName英EnglishName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A dictionary search for J-Drug (JPN) will provide correct dictionary levels in th" +
                    "e following order: (大) High-Level, (中) Mid-Level, (小) Low-Level, (細) Detailed, (" +
                    "般) Preferred Name, (区) Category, (薬) Drug Name, (英) English Name", new string[] {
                        "VAL",
                        "PBMCC_154852_009",
                        "Release2015.3.0"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 56
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"JDrug JPN 201" +
                    "4h2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
  testRunner.And("I begin a search in dictionary \"J-Drug 2014h2 Japanese\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
  testRunner.And("I select Synonym List \"Without Synonyms\" and Template \"High To Low\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
  testRunner.And("I enter \"コカイン塩酸塩\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table5.AddRow(new string[] {
                        "Drug Name"});
#line 60
  testRunner.And("I select the following levels for the search", ((string)(null)), table5, "And ");
#line 63
  testRunner.And("I want only exact match results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
  testRunner.And("I expand the search result for term \"コカイン塩酸塩\" with code \"8121700\" at level \"薬\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level"});
            table6.AddRow(new string[] {
                        "麻薬",
                        "8",
                        "大"});
            table6.AddRow(new string[] {
                        "アルカロイド系麻薬（天然麻薬）",
                        "81",
                        "中"});
            table6.AddRow(new string[] {
                        "コカアルカロイド系製剤",
                        "812",
                        "小"});
            table6.AddRow(new string[] {
                        "コカイン系製剤",
                        "8121",
                        "細"});
            table6.AddRow(new string[] {
                        "コカイン塩酸塩",
                        "8121700",
                        "般"});
            table6.AddRow(new string[] {
                        "外",
                        "6",
                        "区"});
            table6.AddRow(new string[] {
                        "コカイン塩酸塩",
                        "8121700",
                        "薬"});
            table6.AddRow(new string[] {
                        "COCAINE HYDROCHLORIDE",
                        "8121700",
                        "英"});
#line 66
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Consecutive searches against WHODrug Dictionaries against term code should respon" +
            "d within several seconds")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_124197_001")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.0")]
        public virtual void ConsecutiveSearchesAgainstWHODrugDictionariesAgainstTermCodeShouldRespondWithinSeveralSeconds()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Consecutive searches against WHODrug Dictionaries against term code should respon" +
                    "d within several seconds", new string[] {
                        "VAL",
                        "PBMCC_124197_001",
                        "Release2015.3.0"});
#line 81
this.ScenarioSetup(scenarioInfo);
#line 82
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"WHODrugDDEB2 " +
                    "ENG 201003\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Dictionary Name",
                        "Search Text",
                        "Text Target",
                        "Levels"});
            table7.AddRow(new string[] {
                        "WHODrug-DDE-B2-201003-English",
                        "003467 01 001",
                        "Code",
                        "Preferred Name"});
            table7.AddRow(new string[] {
                        "WHODrug-DDE-B2-201003-English",
                        "005542 01 001",
                        "Code",
                        "Preferred Name"});
            table7.AddRow(new string[] {
                        "WHODrug-DDE-B2-201003-English",
                        "009012 01 001",
                        "Code",
                        "Preferred Name"});
#line 83
  testRunner.And("the following dictionary searches", ((string)(null)), table7, "And ");
#line 88
  testRunner.When("the above specified dictionary searches are executed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
  testRunner.Then("all searches executed should have completed within \"5\" seconds", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An open dictionary search result that is associated to a previously created synon" +
            "ym should be positively identified in MedDRA")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_199327_001a")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.1")]
        public virtual void AnOpenDictionarySearchResultThatIsAssociatedToAPreviouslyCreatedSynonymShouldBePositivelyIdentifiedInMedDRA()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An open dictionary search result that is associated to a previously created synon" +
                    "ym should be positively identified in MedDRA", new string[] {
                        "VAL",
                        "PBMCC_199327_001a",
                        "Release2015.3.1"});
#line 94
this.ScenarioSetup(scenarioInfo);
#line 95
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 15" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 96
  testRunner.And("a synonym list file named \"MedDRA_150_ENG_20.txt\" is uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
  testRunner.And("I begin a search in dictionary \"MedDRA 15.0 English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
  testRunner.And("I select Synonym List \"Primary List\" and Template \"Low to High\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
  testRunner.And("I enter \"10030617\" as a \"Code\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table8.AddRow(new string[] {
                        "Low Level Term"});
#line 100
  testRunner.And("I select the following levels for the search", ((string)(null)), table8, "And ");
#line 103
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level",
                        "Has Synonym"});
            table9.AddRow(new string[] {
                        "Open fracture of second cervical vertebra",
                        "10030617",
                        "LLT",
                        "True"});
#line 104
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An open dictionary search result that is associated to a previously created synon" +
            "ym should be positively identified in WHODrugDDEB2")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_199327_001b")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.1")]
        public virtual void AnOpenDictionarySearchResultThatIsAssociatedToAPreviouslyCreatedSynonymShouldBePositivelyIdentifiedInWHODrugDDEB2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An open dictionary search result that is associated to a previously created synon" +
                    "ym should be positively identified in WHODrugDDEB2", new string[] {
                        "VAL",
                        "PBMCC_199327_001b",
                        "Release2015.3.1"});
#line 111
this.ScenarioSetup(scenarioInfo);
#line 112
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"WHODrugDDEB2 " +
                    "ENG 201206\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 113
  testRunner.And("a synonym list file named \"WHODrug_201206_ENG_2.txt\" is uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 114
  testRunner.And("I begin a search in dictionary \"WHODrugDDEB2 201206 English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
  testRunner.And("I select Synonym List \"Primary List\" and Template \"Low to High\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
  testRunner.And("I enter \"000039 02 063\" as a \"Code\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table10.AddRow(new string[] {
                        "Trade Name"});
#line 117
  testRunner.And("I select the following levels for the search", ((string)(null)), table10, "And ");
#line 120
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level",
                        "Has Synonym"});
            table11.AddRow(new string[] {
                        "ADRENALIN HYDROCHLORIDE",
                        "000039 02 063",
                        "TN",
                        "True"});
#line 121
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An open dictionary search result that is associated to a previously created synon" +
            "ym should be positively identified in JDrug")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_199327_001c")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.1")]
        public virtual void AnOpenDictionarySearchResultThatIsAssociatedToAPreviouslyCreatedSynonymShouldBePositivelyIdentifiedInJDrug()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An open dictionary search result that is associated to a previously created synon" +
                    "ym should be positively identified in JDrug", new string[] {
                        "VAL",
                        "PBMCC_199327_001c",
                        "Release2015.3.1"});
#line 129
this.ScenarioSetup(scenarioInfo);
#line 130
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"JDrug ENG 201" +
                    "5H1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 131
  testRunner.And("a synonym list file named \"JDrug_2015H1_ENG_2.txt\" is uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
  testRunner.And("I begin a search in dictionary \"JDrug 2015H1 English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
  testRunner.And("I select Synonym List \"Primary List\" and Template \"Low to High\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
  testRunner.And("I enter \"CHONDRON\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table12.AddRow(new string[] {
                        "Drug Name"});
#line 135
  testRunner.And("I select the following levels for the search", ((string)(null)), table12, "And ");
#line 138
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level",
                        "Has Synonym"});
            table13.AddRow(new string[] {
                        "CHONDRON",
                        "399100102",
                        "薬",
                        "True"});
            table13.AddRow(new string[] {
                        "CHONDRON",
                        "131970902",
                        "薬",
                        "True"});
#line 139
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An open dictionary search result that is associated to a previously created synon" +
            "ym should be positively identified in AZDD")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_199327_001d")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.1")]
        public virtual void AnOpenDictionarySearchResultThatIsAssociatedToAPreviouslyCreatedSynonymShouldBePositivelyIdentifiedInAZDD()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An open dictionary search result that is associated to a previously created synon" +
                    "ym should be positively identified in AZDD", new string[] {
                        "VAL",
                        "PBMCC_199327_001d",
                        "Release2015.3.1"});
#line 148
this.ScenarioSetup(scenarioInfo);
#line 149
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"AZDD ENG 15.1" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 150
  testRunner.And("a synonym list file named \"AZDD_151_ENG_2.txt\" is uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
  testRunner.And("I begin a search in dictionary \"AZDD 15.1 English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
  testRunner.And("I select Synonym List \"Primary List\" and Template \"Low to High\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
  testRunner.And("I enter \"Typhoid\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table14.AddRow(new string[] {
                        "Preferred Name"});
#line 154
  testRunner.And("I select the following levels for the search", ((string)(null)), table14, "And ");
#line 157
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level",
                        "Has Synonym"});
            table15.AddRow(new string[] {
                        "TYPHOID VACCINE",
                        "001670 01 001",
                        "PN",
                        "True"});
            table15.AddRow(new string[] {
                        "CHOLERA VACCINE+TYPHOID VACCINE",
                        "003886 01 001",
                        "PN",
                        "True"});
#line 158
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An open dictionary search with multiple synonyms should positively identify all r" +
            "esults associated to a synonym")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_199327_002")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.1")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void AnOpenDictionarySearchWithMultipleSynonymsShouldPositivelyIdentifyAllResultsAssociatedToASynonym()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An open dictionary search with multiple synonyms should positively identify all r" +
                    "esults associated to a synonym", new string[] {
                        "VAL",
                        "PBMCC_199327_002",
                        "Release2015.3.1",
                        "IncreaseTimeout_360000"});
#line 167
this.ScenarioSetup(scenarioInfo);
#line 168
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 15" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 169
  testRunner.And("a synonym list file named \"MedDRA_150_ENG_20.txt\" is uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
  testRunner.And("I begin a search in dictionary \"MedDRA 15.0 English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
  testRunner.And("I select Synonym List \"Primary List\" and Template \"Low to High\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
  testRunner.And("I enter \"Closed fracture of second cervical vertebra\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table16.AddRow(new string[] {
                        "Low Level Term"});
#line 173
  testRunner.And("I select the following levels for the search", ((string)(null)), table16, "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Operator",
                        "Attribute",
                        "Text"});
            table17.AddRow(new string[] {
                        "Has",
                        "High Level Term",
                        "Spinal fractures and dislocations"});
#line 176
  testRunner.And("I select the following higher level terms for the search", ((string)(null)), table17, "And ");
#line 179
  testRunner.And("I want only primary path results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level",
                        "Has Synonym"});
            table18.AddRow(new string[] {
                        "Closed fracture of second cervical vertebra",
                        "10009589",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed dislocation, second cervical vertebra",
                        "10009394",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Open fracture of second cervical vertebra",
                        "10030617",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed fracture of cervical vertebra, unspecified level",
                        "10009534",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed fracture of fifth cervical vertebra",
                        "10009544",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed fracture of seventh cervical vertebra",
                        "10009591",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed fracture of sixth cervical vertebra",
                        "10009599",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed fracture of first cervical vertebra",
                        "10009545",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed fracture of fourth cervical vertebra",
                        "10009548",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed fracture of third cervical vertebra",
                        "10009612",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed dislocation, cervical vertebra",
                        "10009383",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Open dislocation, second cervical vertebra",
                        "10030396",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Fracture of vertebra",
                        "10017266",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed dislocation, first cervical vertebra",
                        "10009387",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed dislocation, fourth cervical vertebra",
                        "10009388",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed dislocation, seventh cervical vertebra",
                        "10009395",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed dislocation, third cervical vertebra",
                        "10009398",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed dislocation, cervical vertebra, unspecified",
                        "10009384",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed dislocation, fifth cervical vertebra",
                        "10009386",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed dislocation, sixth cervical vertebra",
                        "10009396",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Closed dislocation, sixth cervical vertebra",
                        "10009396",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Open fracture of multiple cervical vertebrae",
                        "10030589",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Lumbar vertebral fracture L3",
                        "10049959",
                        "LLT",
                        "True"});
            table18.AddRow(new string[] {
                        "Thoracic vertebral fracture T10",
                        "10049963",
                        "LLT",
                        "True"});
#line 181
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table18, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A browse and code for a term that is associated to a previously created synonym s" +
            "hould be positively identified in MedDRA")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_199327_003a")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.1")]
        public virtual void ABrowseAndCodeForATermThatIsAssociatedToAPreviouslyCreatedSynonymShouldBePositivelyIdentifiedInMedDRA()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A browse and code for a term that is associated to a previously created synonym s" +
                    "hould be positively identified in MedDRA", new string[] {
                        "VAL",
                        "PBMCC_199327_003a",
                        "Release2015.3.1"});
#line 211
this.ScenarioSetup(scenarioInfo);
#line 212
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 15" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 213
  testRunner.And("coding task \"Adverse Event 4\" for dictionary level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
  testRunner.And("a synonym list file named \"MedDRA_150_ENG_20.txt\" is uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
  testRunner.When("a browse and code for task \"Adverse Event 4\" is performed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 216
  testRunner.And("the browse and code search is done for \"10009589\" against \"Code\" at Level \"Low Le" +
                    "vel Term\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level",
                        "Has Synonym"});
            table19.AddRow(new string[] {
                        "Closed fracture of second cervical vertebra",
                        "10009589",
                        "LLT",
                        "True"});
#line 217
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A browse and code for a term that is associated to a previously created synonym s" +
            "hould be positively identified in WHODrugDDEB2")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_199327_003b")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.1")]
        public virtual void ABrowseAndCodeForATermThatIsAssociatedToAPreviouslyCreatedSynonymShouldBePositivelyIdentifiedInWHODrugDDEB2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A browse and code for a term that is associated to a previously created synonym s" +
                    "hould be positively identified in WHODrugDDEB2", new string[] {
                        "VAL",
                        "PBMCC_199327_003b",
                        "Release2015.3.1"});
#line 225
this.ScenarioSetup(scenarioInfo);
#line 226
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"WHODrugDDEB2 " +
                    "ENG 201206\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 227
    testRunner.And("coding task \"Adverse Event 4\" for dictionary level \"PRODUCTSYNONYM\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
  testRunner.And("a synonym list file named \"WHODrug_201206_ENG_2.txt\" is uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
  testRunner.When("a browse and code for task \"Adverse Event 4\" is performed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 230
  testRunner.And("the browse and code search is done for \"000039 02 063\" against \"Code\" at Level \"T" +
                    "rade Name\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level",
                        "Has Synonym"});
            table20.AddRow(new string[] {
                        "ADRENALIN HYDROCHLORIDE",
                        "000039 02 063",
                        "TN",
                        "True"});
#line 231
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A browse and code for a term that is associated to a previously created synonym s" +
            "hould be positively identified in JDrug")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_199327_003c")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.1")]
        public virtual void ABrowseAndCodeForATermThatIsAssociatedToAPreviouslyCreatedSynonymShouldBePositivelyIdentifiedInJDrug()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A browse and code for a term that is associated to a previously created synonym s" +
                    "hould be positively identified in JDrug", new string[] {
                        "VAL",
                        "PBMCC_199327_003c",
                        "Release2015.3.1"});
#line 240
this.ScenarioSetup(scenarioInfo);
#line 241
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"JDrug ENG 201" +
                    "5H1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 242
  testRunner.And("coding task \"Adverse Event 4\" for dictionary level \"DrugName\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 243
  testRunner.And("a synonym list file named \"JDrug_2015H1_ENG_2.txt\" is uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 244
  testRunner.When("a browse and code for task \"Adverse Event 4\" is performed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 245
  testRunner.And("the browse and code search is done for \"CHONDRON\" against \"Text\" at Level \"Drug N" +
                    "ame\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level",
                        "Has Synonym"});
            table21.AddRow(new string[] {
                        "CHONDRON",
                        "399100102",
                        "薬",
                        "True"});
            table21.AddRow(new string[] {
                        "CHONDRON",
                        "131970902",
                        "薬",
                        "True"});
#line 246
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A browse and code for a term that is associated to a previously created synonym s" +
            "hould be positively identified in AZDD")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_199327_003d")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.1")]
        public virtual void ABrowseAndCodeForATermThatIsAssociatedToAPreviouslyCreatedSynonymShouldBePositivelyIdentifiedInAZDD()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A browse and code for a term that is associated to a previously created synonym s" +
                    "hould be positively identified in AZDD", new string[] {
                        "VAL",
                        "PBMCC_199327_003d",
                        "Release2015.3.1"});
#line 255
this.ScenarioSetup(scenarioInfo);
#line 256
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"AZDD ENG 15.1" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 257
  testRunner.And("coding task \"Adverse Event 4\" for dictionary level \"PRODUCT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
  testRunner.And("a synonym list file named \"AZDD_151_ENG_2.txt\" is uploaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 259
  testRunner.When("a browse and code for task \"Adverse Event 4\" is performed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 260
  testRunner.And("the browse and code search is done for \"Typhoid\" against \"Text\" at Level \"Preferr" +
                    "ed Name\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level",
                        "Has Synonym"});
            table22.AddRow(new string[] {
                        "TYPHOID VACCINE",
                        "001670 01 001",
                        "PN",
                        "True"});
            table22.AddRow(new string[] {
                        "CHOLERA VACCINE+TYPHOID VACCINE",
                        "003886 01 001",
                        "PN",
                        "True"});
#line 261
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table22, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An open dictionary search with no synonyoms should not contain any results positi" +
            "vely identified as associated to a synonym")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_199327_004")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.1")]
        public virtual void AnOpenDictionarySearchWithNoSynonyomsShouldNotContainAnyResultsPositivelyIdentifiedAsAssociatedToASynonym()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An open dictionary search with no synonyoms should not contain any results positi" +
                    "vely identified as associated to a synonym", new string[] {
                        "VAL",
                        "PBMCC_199327_004",
                        "Release2015.3.1"});
#line 270
this.ScenarioSetup(scenarioInfo);
#line 271
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 15" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 272
  testRunner.And("I begin a search in dictionary \"MedDRA 15.0 English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 273
  testRunner.And("I select Synonym List \"Primary List\" and Template \"Low to High\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
  testRunner.And("I enter \"10058730\" as a \"Code\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table23.AddRow(new string[] {
                        "Low Level Term"});
#line 275
  testRunner.And("I select the following levels for the search", ((string)(null)), table23, "And ");
#line 278
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level",
                        "Has Synonym"});
            table24.AddRow(new string[] {
                        "Application site photosensitivity reaction",
                        "10058730",
                        "LLT",
                        "False"});
#line 279
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table24, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A browse and code for a term that is not associated to a synonym should not be po" +
            "sitively identified as associated to a synonym")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_199327_005")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.1")]
        public virtual void ABrowseAndCodeForATermThatIsNotAssociatedToASynonymShouldNotBePositivelyIdentifiedAsAssociatedToASynonym()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A browse and code for a term that is not associated to a synonym should not be po" +
                    "sitively identified as associated to a synonym", new string[] {
                        "VAL",
                        "PBMCC_199327_005",
                        "Release2015.3.1"});
#line 286
this.ScenarioSetup(scenarioInfo);
#line 287
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 15" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 288
  testRunner.And("coding task \"Adverse Event 4\" for dictionary level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 289
  testRunner.When("a browse and code for task \"Adverse Event 4\" is performed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 290
  testRunner.And("the browse and code search is done for \"10009589\" against \"Code\" at Level \"Low Le" +
                    "vel Term\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level",
                        "Has Synonym"});
            table25.AddRow(new string[] {
                        "Closed fracture of second cervical vertebra",
                        "10009589",
                        "LLT",
                        "False"});
#line 291
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table25, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("A dictionary search with over 100 results should display results on multiple page" +
            "s")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_204358_001")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.2")]
        [NUnit.Framework.CategoryAttribute("UITest")]
        public virtual void ADictionarySearchWithOver100ResultsShouldDisplayResultsOnMultiplePages()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("A dictionary search with over 100 results should display results on multiple page" +
                    "s", new string[] {
                        "VAL",
                        "PBMCC_204358_001",
                        "Release2015.3.2",
                        "UITest"});
#line 299
this.ScenarioSetup(scenarioInfo);
#line 300
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA ENG 15" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 301
  testRunner.And("I begin a search in dictionary \"MedDRA 15.0 English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
  testRunner.And("I enter \"pain\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table26.AddRow(new string[] {
                        "Preferred Term"});
#line 303
  testRunner.And("I select the following levels for the search", ((string)(null)), table26, "And ");
#line 306
  testRunner.And("I do not want primary path results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 307
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level"});
            table27.AddRow(new string[] {
                        "Loin pain haematuria syndrome",
                        "10071137",
                        "PT"});
            table27.AddRow(new string[] {
                        "Musculoskeletal chest pain",
                        "10050819",
                        "PT"});
            table27.AddRow(new string[] {
                        "Paradoxical pain",
                        "10067055",
                        "PT"});
#line 308
  testRunner.Then("I verify the following information is contained in the browser search results", ((string)(null)), table27, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Multiple pages of dictionary search results should provide access to term propert" +
            "ies for all results")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_204358_002")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.2")]
        [NUnit.Framework.CategoryAttribute("UITest")]
        [NUnit.Framework.Timeout(360000)]
        public virtual void MultiplePagesOfDictionarySearchResultsShouldProvideAccessToTermPropertiesForAllResults()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Multiple pages of dictionary search results should provide access to term propert" +
                    "ies for all results", new string[] {
                        "VAL",
                        "PBMCC_204358_002",
                        "Release2015.3.2",
                        "UITest",
                        "IncreaseTimeout_360000"});
#line 319
this.ScenarioSetup(scenarioInfo);
#line 320
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"WHODrugDDEB2 " +
                    "ENG 201503\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 321
  testRunner.And("I begin a search in dictionary \"WHODrugDDEB2 201503 English\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 322
  testRunner.And("I enter \"betacarotene\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table28.AddRow(new string[] {
                        "Preferred Name"});
#line 323
  testRunner.And("I select the following levels for the search", ((string)(null)), table28, "And ");
#line 326
  testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Value"});
            table29.AddRow(new string[] {
                        "DRUGRECORDNUMBER",
                        "076980"});
            table29.AddRow(new string[] {
                        "NUMBEROFINGREDIENTS",
                        "15"});
#line 327
  testRunner.Then("I verify the following Selected Search Result Properties are displayed for term \"" +
                    "BETACAROTENE W/HISTIDINE/IRON/ISOLEUCINE/LEUC\" with code \"076980 01 001\" at leve" +
                    "l \"PN\"", ((string)(null)), table29, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Value"});
            table30.AddRow(new string[] {
                        "DRUGRECORDNUMBER",
                        "074427"});
            table30.AddRow(new string[] {
                        "NUMBEROFINGREDIENTS",
                        "23"});
#line 331
  testRunner.Then("I verify the following Selected Search Result Properties are displayed for term \"" +
                    "BETACAROTENE W/BIOFLAVONOIDS/CALCIU/07442701/\" with code \"074427 01 001\" at leve" +
                    "l \"PN\"", ((string)(null)), table30, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Value"});
            table31.AddRow(new string[] {
                        "DRUGRECORDNUMBER",
                        "082925"});
            table31.AddRow(new string[] {
                        "NUMBEROFINGREDIENTS",
                        "28"});
#line 335
  testRunner.Then("I verify the following Selected Search Result Properties are displayed for term \"" +
                    "ASCORBIC ACID W/BETACAROTENE/BIOTIN/08292501/\" with code \"082925 01 001\" at leve" +
                    "l \"PN\"", ((string)(null)), table31, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Value"});
            table32.AddRow(new string[] {
                        "DRUGRECORDNUMBER",
                        "081113"});
            table32.AddRow(new string[] {
                        "NUMBEROFINGREDIENTS",
                        "3"});
#line 339
  testRunner.Then("I verify the following Selected Search Result Properties are displayed for term \"" +
                    "ASCORBIC ACID W/BETACAROTENE/VITAMIN E NOS\" with code \"081113 01 001\" at level \"" +
                    "PN\"", ((string)(null)), table32, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MedDRA Dictionary Search Results should contain only terms for current paths")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("PBMCC_204440_001")]
        [NUnit.Framework.CategoryAttribute("Release2015.3.2")]
        public virtual void MedDRADictionarySearchResultsShouldContainOnlyTermsForCurrentPaths()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MedDRA Dictionary Search Results should contain only terms for current paths", new string[] {
                        "VAL",
                        "PBMCC_204440_001",
                        "Release2015.3.2"});
#line 348
this.ScenarioSetup(scenarioInfo);
#line 349
 testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms and dictionary \"MedDRA JPN 18" +
                    ".0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 350
 testRunner.And("I begin a search in dictionary \"MedDRA 18.0 Japanese\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
 testRunner.And("I select Synonym List \"Without Synonyms\" and Template \"Low to High\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
 testRunner.And("I enter \"高脂血症\" as a \"Text\" search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level"});
            table33.AddRow(new string[] {
                        "Low Level Term"});
#line 353
 testRunner.And("I select the following levels for the search", ((string)(null)), table33, "And ");
#line 356
 testRunner.And("I want only exact match results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 357
 testRunner.And("I want only primary path results", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 358
 testRunner.When("I execute the above specified search", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term Path",
                        "Code",
                        "Level"});
            table34.AddRow(new string[] {
                        "高脂血症",
                        "10062060",
                        "LLT"});
#line 359
 testRunner.Then("the dictionary search results should contain only the following terms", ((string)(null)), table34, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When navigating to the Browser page and performing, within Dictionary Term Search" +
            ", a dictionary browse for WhoDrugDDEB2 (ENG) you will see the correct dictionary" +
            " levels in the following order: ATC, ATC, ATC, ATC, PT, and TN")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_003")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchADictionaryBrowseForWhoDrugDDEB2ENGYouWillSeeTheCorrectDictionaryLevelsInTheFollowingOrderATCATCATCATCPTAndTN()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When navigating to the Browser page and performing, within Dictionary Term Search" +
                    ", a dictionary browse for WhoDrugDDEB2 (ENG) you will see the correct dictionary" +
                    " levels in the following order: ATC, ATC, ATC, ATC, PT, and TN", new string[] {
                        "DFT",
                        "PBMCC_154852_003",
                        "Release2015.2.0",
                        "ignore"});
#line 367
this.ScenarioSetup(scenarioInfo);
#line 369
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 370
  testRunner.When("I set dictionary term search for dictionary \"WhoDrugDDEB2\" locale \"ENG\" version \"" +
                    "201409\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Image Icon Level",
                        "Term",
                        "Code"});
            table35.AddRow(new string[] {
                        "ATC",
                        "NERVOUS SYSTEM",
                        "N"});
            table35.AddRow(new string[] {
                        "ATC",
                        "ANESTHETICS",
                        "N01"});
            table35.AddRow(new string[] {
                        "ATC",
                        "ANESTHETICS, LOCAL",
                        "N01B"});
            table35.AddRow(new string[] {
                        "ATC",
                        "AMIDES",
                        "N01BB"});
            table35.AddRow(new string[] {
                        "PT",
                        "MEPIVACAINE",
                        "000103 01 001 3"});
            table35.AddRow(new string[] {
                        "TN",
                        "MEPIVACAINUM",
                        "000103 01 007 0"});
#line 371
  testRunner.Then("I verify a browse for \"MEPIVACAINUM\" where the following dictionary information i" +
                    "s traversable and displayed,", ((string)(null)), table35, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When navigating to the Browser page and performing, within Dictionary Term Search" +
            ", a dictionary browse for WhoDrugDDEB2 (ENG) you will see the correct dictionary" +
            " levels in the following order: ATC, PT, and ING")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_004")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchADictionaryBrowseForWhoDrugDDEB2ENGYouWillSeeTheCorrectDictionaryLevelsInTheFollowingOrderATCPTAndING()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When navigating to the Browser page and performing, within Dictionary Term Search" +
                    ", a dictionary browse for WhoDrugDDEB2 (ENG) you will see the correct dictionary" +
                    " levels in the following order: ATC, PT, and ING", new string[] {
                        "DFT",
                        "PBMCC_154852_004",
                        "Release2015.2.0",
                        "ignore"});
#line 385
this.ScenarioSetup(scenarioInfo);
#line 387
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 388
  testRunner.When("I set dictionary term search for dictionary \"WhoDrugDDEB2\" locale \"ENG\" version \"" +
                    "201409\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Image Icon Level",
                        "Term",
                        "Code"});
            table36.AddRow(new string[] {
                        "ATC",
                        "NERVOUS SYSTEM",
                        "N"});
            table36.AddRow(new string[] {
                        "PT",
                        "ZATOSETRON",
                        "015179 01 001 0"});
            table36.AddRow(new string[] {
                        "ING",
                        "ZATOSETRON",
                        "015179 01 001 0 0123482224"});
#line 389
  testRunner.Then("I verify a browse for \"ZATOSETRON\" where the following dictionary information is " +
                    "traversable and displayed,", ((string)(null)), table36, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When navigating to the Browser page and performing, within Dictionary Term Search" +
            ", a dictionary browse for WHODrug_DDE_C (ENG) you will see the correct dictionar" +
            "y levels in the following order: ATC, MP, and ING")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_005")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchADictionaryBrowseForWHODrug_DDE_CENGYouWillSeeTheCorrectDictionaryLevelsInTheFollowingOrderATCMPAndING()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When navigating to the Browser page and performing, within Dictionary Term Search" +
                    ", a dictionary browse for WHODrug_DDE_C (ENG) you will see the correct dictionar" +
                    "y levels in the following order: ATC, MP, and ING", new string[] {
                        "DFT",
                        "PBMCC_154852_005",
                        "Release2015.2.0",
                        "ignore"});
#line 400
this.ScenarioSetup(scenarioInfo);
#line 402
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 403
  testRunner.When("I set dictionary term search for dictionary \"WHODrug_DDE_C\" locale \"ENG\" version " +
                    "\"201409\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Image Icon Level",
                        "Term",
                        "Code"});
            table37.AddRow(new string[] {
                        "ATC",
                        "NERVOUS SYSTEM",
                        "N"});
            table37.AddRow(new string[] {
                        "MP",
                        "ZATOSETRON",
                        "49650"});
            table37.AddRow(new string[] {
                        "ING",
                        "ZATOSETRON",
                        "81707"});
#line 404
  testRunner.Then("I verify a browse for \"ZATOSETRON\" where the following dictionary information is " +
                    "traversable and displayed,", ((string)(null)), table37, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When navigating to the Browser page and performing, within Dictionary Term Search" +
            ", a dictionary browse for WHODrug_DDE_C (ENG) you will see the correct dictionar" +
            "y levels in the following order: ATC, ATC, and MP")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_006")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchADictionaryBrowseForWHODrug_DDE_CENGYouWillSeeTheCorrectDictionaryLevelsInTheFollowingOrderATCATCAndMP()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When navigating to the Browser page and performing, within Dictionary Term Search" +
                    ", a dictionary browse for WHODrug_DDE_C (ENG) you will see the correct dictionar" +
                    "y levels in the following order: ATC, ATC, and MP", new string[] {
                        "DFT",
                        "PBMCC_154852_006",
                        "Release2015.2.0",
                        "ignore"});
#line 415
this.ScenarioSetup(scenarioInfo);
#line 417
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 418
  testRunner.When("I set dictionary term search for dictionary \"WHODrug_DDE_C\" locale \"ENG\" version " +
                    "\"201409\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Image Icon Level",
                        "Term",
                        "Code"});
            table38.AddRow(new string[] {
                        "ATC",
                        "ANTIPARASITIC PRODUCTS,INSECTICIDES AND REPELLENTS",
                        "P"});
            table38.AddRow(new string[] {
                        "ATC",
                        "ANTIPROTOZOALS",
                        "P01"});
            table38.AddRow(new string[] {
                        "MP",
                        "Antiprotozoals",
                        "50067"});
#line 419
  testRunner.Then("I verify a browse for \"Antiprotozoals\" where the following dictionary information" +
                    " is traversable and displayed,", ((string)(null)), table38, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"When navigating to the Browser page and performing, within Dictionary Term Search, a dictionary browse for J-Drug (ENG) you will see the correct dictionary levels in the following order: (大) High-Level, (中) Mid-Level, (小) Low-Level, (細) Detailed, (般) Preferred Name, (区) Category, (薬) Drug Name, (英) English Name")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_007")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchADictionaryBrowseForJ_DrugENGYouWillSeeTheCorrectDictionaryLevelsInTheFollowingOrder大High_Level中Mid_Level小Low_Level細Detailed般PreferredName区Category薬DrugName英EnglishName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"When navigating to the Browser page and performing, within Dictionary Term Search, a dictionary browse for J-Drug (ENG) you will see the correct dictionary levels in the following order: (大) High-Level, (中) Mid-Level, (小) Low-Level, (細) Detailed, (般) Preferred Name, (区) Category, (薬) Drug Name, (英) English Name", new string[] {
                        "DFT",
                        "PBMCC_154852_007",
                        "Release2015.2.0",
                        "ignore"});
#line 430
this.ScenarioSetup(scenarioInfo);
#line 432
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 433
  testRunner.When("I set dictionary term search for dictionary \"J-Drug\" locale \"ENG\" version \"201409" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Image Icon Level",
                        "Term",
                        "Code"});
            table39.AddRow(new string[] {
                        "大",
                        "NARCOTICS",
                        "8"});
            table39.AddRow(new string[] {
                        "中",
                        "ALKALOIDAL NARCOTICS(NATURAL NARCOTICS)",
                        "81"});
            table39.AddRow(new string[] {
                        "小",
                        "COCA ALKALOIDS PREPARATIONS",
                        "812"});
            table39.AddRow(new string[] {
                        "細",
                        "COCAINE, DERIVATIVES AND PREPARATIONS",
                        "8121"});
            table39.AddRow(new string[] {
                        "般",
                        "COCAINE HYDROCHLORIDE",
                        "8121700"});
            table39.AddRow(new string[] {
                        "区",
                        "EXTERNAL MEDICATION",
                        "6"});
            table39.AddRow(new string[] {
                        "薬",
                        "COCAINE HYDROCHLORIDE",
                        "8121700"});
            table39.AddRow(new string[] {
                        "英",
                        "COCAINE HYDROCHLORIDE",
                        "8121700"});
#line 434
  testRunner.Then("I verify a browse for \"COCAINE HYDROCHLORIDE\" where the following dictionary info" +
                    "rmation is traversable and displayed,", ((string)(null)), table39, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When navigating to the Browser page and performing, within Dictionary Term Search" +
            ", a dictionary browse for MedDRA (ENG) you will see the correct dictionary PRIMA" +
            "RY levels in the following order: SOC, HLGT, HLT, PT, and LLT")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_57406_010")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchADictionaryBrowseForMedDRAENGYouWillSeeTheCorrectDictionaryPRIMARYLevelsInTheFollowingOrderSOCHLGTHLTPTAndLLT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When navigating to the Browser page and performing, within Dictionary Term Search" +
                    ", a dictionary browse for MedDRA (ENG) you will see the correct dictionary PRIMA" +
                    "RY levels in the following order: SOC, HLGT, HLT, PT, and LLT", new string[] {
                        "DFT",
                        "PBMCC_57406_010",
                        "Release2015.2.0",
                        "ignore"});
#line 453
this.ScenarioSetup(scenarioInfo);
#line 455
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 456
  testRunner.When("I set dictionary term search for dictionary \"MedDRA\" locale \"ENG\" version \"15.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Image Icon Level",
                        "Term",
                        "Code"});
            table40.AddRow(new string[] {
                        "Primary SOC",
                        "Nervous system disorders",
                        "10029205"});
            table40.AddRow(new string[] {
                        "Primary HLGT",
                        "Headaches",
                        "10019231"});
            table40.AddRow(new string[] {
                        "Primary HLT",
                        "Headaches NEC",
                        "10019233"});
            table40.AddRow(new string[] {
                        "Primary PT",
                        "Headache",
                        "10019211"});
            table40.AddRow(new string[] {
                        "Primary LLT",
                        "Chronic headaches",
                        "10053850"});
#line 457
  testRunner.Then("I verify a browse for \"Chronic headaches\" where the following dictionary informat" +
                    "ion is traversable and displayed,", ((string)(null)), table40, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When navigating to the Browser page and performing, within Dictionary Term Search" +
            ", a dictionary browse for MedDRA (JPN) you will see the correct dictionary PRIMA" +
            "RY levels in the following order: SOC, HLGT, HLT, PT, and LLT")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_57406_011")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchADictionaryBrowseForMedDRAJPNYouWillSeeTheCorrectDictionaryPRIMARYLevelsInTheFollowingOrderSOCHLGTHLTPTAndLLT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When navigating to the Browser page and performing, within Dictionary Term Search" +
                    ", a dictionary browse for MedDRA (JPN) you will see the correct dictionary PRIMA" +
                    "RY levels in the following order: SOC, HLGT, HLT, PT, and LLT", new string[] {
                        "DFT",
                        "PBMCC_57406_011",
                        "Release2015.2.0",
                        "ignore"});
#line 470
this.ScenarioSetup(scenarioInfo);
#line 472
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 473
  testRunner.When("I set dictionary term search for dictionary \"MedDRA\" locale \"JPN\" version \"15.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Image Icon Level",
                        "Term",
                        "Code"});
            table41.AddRow(new string[] {
                        "Primary SOC",
                        "神経系障害",
                        "10029205"});
            table41.AddRow(new string[] {
                        "Primary HLGT",
                        "頭痛",
                        "10019231"});
            table41.AddRow(new string[] {
                        "Primary HLT",
                        "頭痛ＮＥＣ",
                        "10019233"});
            table41.AddRow(new string[] {
                        "Primary PT",
                        "頭痛",
                        "10019211"});
            table41.AddRow(new string[] {
                        "Primary LLT",
                        "慢性頭痛",
                        "10053850"});
#line 474
  testRunner.Then("I verify a browse for \"Chronic headaches\" where the following dictionary informat" +
                    "ion is traversable and displayed,", ((string)(null)), table41, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When navigating to the Browser page and performing, within Dictionary Term Search" +
            ", when performing a dictionary search for any level in MedDRA (ENG) you will see" +
            " the following Term Properties: Code, Term, Dictionary Level, Term Status")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_012")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchWhenPerformingADictionarySearchForAnyLevelInMedDRAENGYouWillSeeTheFollowingTermPropertiesCodeTermDictionaryLevelTermStatus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When navigating to the Browser page and performing, within Dictionary Term Search" +
                    ", when performing a dictionary search for any level in MedDRA (ENG) you will see" +
                    " the following Term Properties: Code, Term, Dictionary Level, Term Status", new string[] {
                        "DFT",
                        "PBMCC_154852_012",
                        "Release2015.2.0",
                        "ignore"});
#line 487
this.ScenarioSetup(scenarioInfo);
#line 489
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 490
  testRunner.When("I set dictionary term search for dictionary \"MedDRA\" locale \"ENG\" version \"15.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 491
  testRunner.And("I search for and select the term \"Blood alcohol excessive\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Property Value"});
            table42.AddRow(new string[] {
                        "Code",
                        "10005290"});
            table42.AddRow(new string[] {
                        "Term",
                        "Blood alcohol excessive"});
            table42.AddRow(new string[] {
                        "Dictionary Level",
                        "Low Level Term"});
            table42.AddRow(new string[] {
                        "Term Status",
                        "Active"});
#line 492
  testRunner.Then("I verify the following selected term properties:", ((string)(null)), table42, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for a Trade Name level in WhoDrugDDEB2 (ENG) you will see the following Term Properties: Code, Term, Dictionary Level, Drug Record, Sequence Number 1, Sequence Number 2, Check Digit, Source Year, Source, Source Country,Designation, Company, Company Country, Number of Ingredients, Year Quarter, Ingredients")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_013")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchWhenPerformingADictionarySearchForATradeNameLevelInWhoDrugDDEB2ENGYouWillSeeTheFollowingTermPropertiesCodeTermDictionaryLevelDrugRecordSequenceNumber1SequenceNumber2CheckDigitSourceYearSourceSourceCountryDesignationCompanyCompanyCountryNumberOfIngredientsYearQuarterIngredients()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for a Trade Name level in WhoDrugDDEB2 (ENG) you will see the following Term Properties: Code, Term, Dictionary Level, Drug Record, Sequence Number 1, Sequence Number 2, Check Digit, Source Year, Source, Source Country,Designation, Company, Company Country, Number of Ingredients, Year Quarter, Ingredients", new string[] {
                        "DFT",
                        "PBMCC_154852_013",
                        "Release2015.2.0",
                        "ignore"});
#line 504
this.ScenarioSetup(scenarioInfo);
#line 506
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 507
  testRunner.When("I set dictionary term search for dictionary \"WhoDrugDDEB2\" locale \"ENG\" version \"" +
                    "201409\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 508
  testRunner.And("I search on level \"Trade Name\" and select the term \"BLOOD BUILDER\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Property Value"});
            table43.AddRow(new string[] {
                        "Code",
                        "014934 01 006 8"});
            table43.AddRow(new string[] {
                        "Term",
                        "BLOOD BUILDER"});
            table43.AddRow(new string[] {
                        "Dictionary Level",
                        "Trade Name"});
            table43.AddRow(new string[] {
                        "Drug Record Number",
                        "014934"});
            table43.AddRow(new string[] {
                        "Sequence Number 1",
                        "01"});
            table43.AddRow(new string[] {
                        "Sequence Number 2",
                        "006"});
            table43.AddRow(new string[] {
                        "Check Digit",
                        "8"});
            table43.AddRow(new string[] {
                        "Source Year",
                        "05"});
            table43.AddRow(new string[] {
                        "Source",
                        "237, IMS Health"});
            table43.AddRow(new string[] {
                        "Source Country",
                        "N/A, Not Applicable"});
            table43.AddRow(new string[] {
                        "Designation",
                        "M"});
            table43.AddRow(new string[] {
                        "Company",
                        "UNS, NOT SPECIFIED"});
            table43.AddRow(new string[] {
                        "Company Country",
                        "UNS, Unspecified"});
            table43.AddRow(new string[] {
                        "Number of Ingredients",
                        "03"});
            table43.AddRow(new string[] {
                        "Year Quarter",
                        "061"});
            table43.AddRow(new string[] {
                        "Ingredients (3)",
                        "CYANOCOBALAMIN, FOLIC ACID, IRON"});
#line 509
  testRunner.Then("I verify the following selected term properties:", ((string)(null)), table43, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for a Preferred Name level in WhoDrugDDEB2 (ENG) you will see the following Term Properties: Coder, Term, Dictionary Level, Drug Record, Sequence Number 1, Sequence Number 2, Check Digit, Source Year, Source, Source Country, Designation, Number of Ingredients, Year Quarter, Ingredients")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_014")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchWhenPerformingADictionarySearchForAPreferredNameLevelInWhoDrugDDEB2ENGYouWillSeeTheFollowingTermPropertiesCoderTermDictionaryLevelDrugRecordSequenceNumber1SequenceNumber2CheckDigitSourceYearSourceSourceCountryDesignationNumberOfIngredientsYearQuarterIngredients()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for a Preferred Name level in WhoDrugDDEB2 (ENG) you will see the following Term Properties: Coder, Term, Dictionary Level, Drug Record, Sequence Number 1, Sequence Number 2, Check Digit, Source Year, Source, Source Country, Designation, Number of Ingredients, Year Quarter, Ingredients", new string[] {
                        "DFT",
                        "PBMCC_154852_014",
                        "Release2015.2.0",
                        "ignore"});
#line 533
this.ScenarioSetup(scenarioInfo);
#line 535
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 536
  testRunner.When("I set dictionary term search for dictionary \"WhoDrugDDEB2\" locale \"ENG\" version \"" +
                    "201409\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 537
  testRunner.And("I search on level \"Preferred Name\" and select the term \"FERRANIN COMPLEX\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Property Value"});
            table44.AddRow(new string[] {
                        "Code",
                        "014934 01 001 9"});
            table44.AddRow(new string[] {
                        "Term",
                        "FERRANIN COMPLEX"});
            table44.AddRow(new string[] {
                        "Dictionary Level",
                        "Preferred Name"});
            table44.AddRow(new string[] {
                        "Drug Record Number",
                        "014934"});
            table44.AddRow(new string[] {
                        "Sequence Number 1",
                        "01"});
            table44.AddRow(new string[] {
                        "Sequence Number 2",
                        "001"});
            table44.AddRow(new string[] {
                        "Check Digit",
                        "9"});
            table44.AddRow(new string[] {
                        "Source Year",
                        "00"});
            table44.AddRow(new string[] {
                        "Source",
                        "139, Manual Farmaceutico"});
            table44.AddRow(new string[] {
                        "Source Country",
                        "ARG, Argentina"});
            table44.AddRow(new string[] {
                        "Designation",
                        "M"});
            table44.AddRow(new string[] {
                        "Number of Ingredients",
                        "03"});
            table44.AddRow(new string[] {
                        "Year Quarter",
                        "044"});
            table44.AddRow(new string[] {
                        "Ingredients (3)",
                        "CYANOCOBALAMIN, FOLIC ACID, IRON"});
#line 538
  testRunner.Then("I verify the following selected term properties:", ((string)(null)), table44, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When navigating to the Browser page and performing, within Dictionary Term Search" +
            ", when performing a dictionary search for an ATC level in WhoDrugDDEB2 (ENG) you" +
            " will see the following Term Properties: Code, Term, Dictionary Level")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_015")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchWhenPerformingADictionarySearchForAnATCLevelInWhoDrugDDEB2ENGYouWillSeeTheFollowingTermPropertiesCodeTermDictionaryLevel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When navigating to the Browser page and performing, within Dictionary Term Search" +
                    ", when performing a dictionary search for an ATC level in WhoDrugDDEB2 (ENG) you" +
                    " will see the following Term Properties: Code, Term, Dictionary Level", new string[] {
                        "DFT",
                        "PBMCC_154852_015",
                        "Release2015.2.0",
                        "ignore"});
#line 560
this.ScenarioSetup(scenarioInfo);
#line 562
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 563
  testRunner.When("I set dictionary term search for dictionary \"WhoDrugDDEB2\" locale \"ENG\" version \"" +
                    "201409\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 564
  testRunner.And("I search on level \"ATC\" and select the term \"IRON IN OTHER COMBINATIONS\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Property Value"});
            table45.AddRow(new string[] {
                        "Code",
                        "B03AE"});
            table45.AddRow(new string[] {
                        "Term",
                        "IRON IN OTHER COMBINATIONS"});
            table45.AddRow(new string[] {
                        "Dictionary Level",
                        "ATC"});
#line 565
  testRunner.Then("I verify the following selected term properties:", ((string)(null)), table45, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for a Medicinal Product Level in WHODrug_DDE_C (ENG) you will see the following Term Properties: Code, Term, Dictionary Level, Drug Record, Sequence Number 1, Sequence Number 2, Sequence 3, Sequence 4, Generic, Country, Company, Marketing authorization holder, Source Year, Source, Source Country, Product type, Product group, Product group, Create date, Date changed, Ingredients")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_016")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchWhenPerformingADictionarySearchForAMedicinalProductLevelInWHODrug_DDE_CENGYouWillSeeTheFollowingTermPropertiesCodeTermDictionaryLevelDrugRecordSequenceNumber1SequenceNumber2Sequence3Sequence4GenericCountryCompanyMarketingAuthorizationHolderSourceYearSourceSourceCountryProductTypeProductGroupProductGroupCreateDateDateChangedIngredients()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for a Medicinal Product Level in WHODrug_DDE_C (ENG) you will see the following Term Properties: Code, Term, Dictionary Level, Drug Record, Sequence Number 1, Sequence Number 2, Sequence 3, Sequence 4, Generic, Country, Company, Marketing authorization holder, Source Year, Source, Source Country, Product type, Product group, Product group, Create date, Date changed, Ingredients", new string[] {
                        "DFT",
                        "PBMCC_154852_016",
                        "Release2015.2.0",
                        "ignore"});
#line 576
this.ScenarioSetup(scenarioInfo);
#line 578
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 579
  testRunner.When("I set dictionary term search for dictionary \"WHODrug_DDE_C\" locale \"ENG\" version " +
                    "\"201409\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 580
  testRunner.And("I search on level \"Medicinal Product\" and select the term \"Scorpion venom\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Property Value"});
            table46.AddRow(new string[] {
                        "Code",
                        "129431"});
            table46.AddRow(new string[] {
                        "Term",
                        "Scorpion venom"});
            table46.AddRow(new string[] {
                        "Dictionary Level",
                        "Medicinal Product"});
            table46.AddRow(new string[] {
                        "Drug Record Number",
                        "018707"});
            table46.AddRow(new string[] {
                        "Sequence Number 1",
                        "01"});
            table46.AddRow(new string[] {
                        "Sequence Number 2",
                        "001"});
            table46.AddRow(new string[] {
                        "Sequence Number 3",
                        "0000000001, Unspecified"});
            table46.AddRow(new string[] {
                        "Sequence Number 4",
                        "0000000001, Unspecified"});
            table46.AddRow(new string[] {
                        "Generic",
                        "Y"});
            table46.AddRow(new string[] {
                        "Country",
                        "N/A, Not Applicable"});
            table46.AddRow(new string[] {
                        "Company",
                        "0"});
            table46.AddRow(new string[] {
                        "Marketing authorization holder",
                        "0"});
            table46.AddRow(new string[] {
                        "Source Year",
                        "05"});
            table46.AddRow(new string[] {
                        "Source",
                        "CHE, NC Switzerland"});
            table46.AddRow(new string[] {
                        "Source Country",
                        "CHE, Switzerland"});
            table46.AddRow(new string[] {
                        "Product type",
                        "001, Medicinal product"});
            table46.AddRow(new string[] {
                        "Product group",
                        "0, None"});
            table46.AddRow(new string[] {
                        "Product group",
                        "20020701"});
            table46.AddRow(new string[] {
                        "Create date",
                        "20050331"});
            table46.AddRow(new string[] {
                        "Date changed",
                        "20050331"});
            table46.AddRow(new string[] {
                        "Ingredients (1)",
                        "Scorpion venom"});
#line 581
  testRunner.Then("I verify the following selected term properties:", ((string)(null)), table46, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for an Ingredient level in WHODrug_DDE_C (ENG) you will see the following Term Properties: Coder, Term, Dictionary Level, Source Year, Source, Source Country, Ingredient create date, Unit, Pharmaceutical form, Number of Ingredients, Pharmaceutical form create date, Substance, CAS Number, Language Code")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_017")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchWhenPerformingADictionarySearchForAnIngredientLevelInWHODrug_DDE_CENGYouWillSeeTheFollowingTermPropertiesCoderTermDictionaryLevelSourceYearSourceSourceCountryIngredientCreateDateUnitPharmaceuticalFormNumberOfIngredientsPharmaceuticalFormCreateDateSubstanceCASNumberLanguageCode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for an Ingredient level in WHODrug_DDE_C (ENG) you will see the following Term Properties: Coder, Term, Dictionary Level, Source Year, Source, Source Country, Ingredient create date, Unit, Pharmaceutical form, Number of Ingredients, Pharmaceutical form create date, Substance, CAS Number, Language Code", new string[] {
                        "DFT",
                        "PBMCC_154852_017",
                        "Release2015.2.0",
                        "ignore"});
#line 610
this.ScenarioSetup(scenarioInfo);
#line 612
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 613
  testRunner.When("I set dictionary term search for dictionary \"WHODrug_DDE_C\" locale \"ENG\" version " +
                    "\"201409\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 614
  testRunner.And("I search on level \"Ingredient\" and select the term \"Scorpion venom\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Property Value"});
            table47.AddRow(new string[] {
                        "Code",
                        "212382"});
            table47.AddRow(new string[] {
                        "Term",
                        "Scorpion venom"});
            table47.AddRow(new string[] {
                        "Dictionary Level",
                        "Ingredient"});
            table47.AddRow(new string[] {
                        "Source Year",
                        "05"});
            table47.AddRow(new string[] {
                        "Source",
                        "CHE, NC Switzerland"});
            table47.AddRow(new string[] {
                        "Source Country",
                        "CHE, Switzerland"});
            table47.AddRow(new string[] {
                        "Ingredient create date",
                        "20050331"});
            table47.AddRow(new string[] {
                        "Unit",
                        "38, unspec"});
            table47.AddRow(new string[] {
                        "Pharmaceutical form",
                        "1, Unspecified"});
            table47.AddRow(new string[] {
                        "Number of Ingredients",
                        "01"});
            table47.AddRow(new string[] {
                        "Pharmaceutical form create date",
                        "20050331"});
            table47.AddRow(new string[] {
                        "Substance",
                        "14116, Scorpion venom"});
            table47.AddRow(new string[] {
                        "CAS Number",
                        "8000060368"});
            table47.AddRow(new string[] {
                        "Language Code",
                        "En"});
#line 615
  testRunner.Then("I verify the following selected term properties:", ((string)(null)), table47, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for J-Drug (JPN) on a Drug Name Level you will see the following Term Properties: Code, Term, Dictionary Level, Usage Classification, Drug Name Kana, Manufacturer, Dosage Form, Drug Code Class 1, Maintain Flag Jpn, Maintain Date Jpn, Drug Coder Class 2, English Name")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_018")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchWhenPerformingADictionarySearchForJ_DrugJPNOnADrugNameLevelYouWillSeeTheFollowingTermPropertiesCodeTermDictionaryLevelUsageClassificationDrugNameKanaManufacturerDosageFormDrugCodeClass1MaintainFlagJpnMaintainDateJpnDrugCoderClass2EnglishName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for J-Drug (JPN) on a Drug Name Level you will see the following Term Properties: Code, Term, Dictionary Level, Usage Classification, Drug Name Kana, Manufacturer, Dosage Form, Drug Code Class 1, Maintain Flag Jpn, Maintain Date Jpn, Drug Coder Class 2, English Name", new string[] {
                        "DFT",
                        "PBMCC_154852_018",
                        "Release2015.2.0",
                        "ignore"});
#line 637
this.ScenarioSetup(scenarioInfo);
#line 639
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 640
  testRunner.When("I set dictionary term search for dictionary \"J-Drug\" locale \"JPN\" version \"2014H1" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 641
  testRunner.And("I search on level \"Drug Name\" and select the term \"パーキン糖衣錠\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Property Value"});
            table48.AddRow(new string[] {
                        "Code",
                        "116300101"});
            table48.AddRow(new string[] {
                        "Term",
                        "パーキン糖衣錠"});
            table48.AddRow(new string[] {
                        "Dictionary Level",
                        "Drug Name"});
            table48.AddRow(new string[] {
                        "Usage Classification",
                        "1, 内"});
            table48.AddRow(new string[] {
                        "Drug Name Kana",
                        "ﾊﾟ-ｷﾝﾄｳｲｼﾞﾖｳ"});
            table48.AddRow(new string[] {
                        "Preferred Name Kana",
                        "ﾌﾟﾛﾌｴﾅﾐﾝｴﾝｻﾝｴﾝ"});
            table48.AddRow(new string[] {
                        "Manufacturer",
                        "393, 田辺三菱"});
            table48.AddRow(new string[] {
                        "Dosage Form",
                        "21000000000000000000"});
            table48.AddRow(new string[] {
                        "Drug Code Class 1",
                        "0"});
            table48.AddRow(new string[] {
                        "Maintain Flag Jpn",
                        "B"});
            table48.AddRow(new string[] {
                        "Maintain Date Jpn",
                        "1008"});
            table48.AddRow(new string[] {
                        "Drug Code Class 2",
                        "4"});
            table48.AddRow(new string[] {
                        "English Name",
                        "116300101, PARKIN"});
#line 642
  testRunner.Then("I verify the following selected term properties:", ((string)(null)), table48, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for J-Drug (JPN) on a Preferred Name Level you will see the following Term Properties: Code, Term, Dictionary Level, Usage Classification, Drug Name Kana, Preferred Name Kana, Dosage Form, Drug Code Class 1, Maintain Flag Jpn, Maintain Date Jpn, Drug Coder Class 2, JAN Flag, Maintain Date Eng, Maintain Flag Eng, English Name")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_019")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchWhenPerformingADictionarySearchForJ_DrugJPNOnAPreferredNameLevelYouWillSeeTheFollowingTermPropertiesCodeTermDictionaryLevelUsageClassificationDrugNameKanaPreferredNameKanaDosageFormDrugCodeClass1MaintainFlagJpnMaintainDateJpnDrugCoderClass2JANFlagMaintainDateEngMaintainFlagEngEnglishName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for J-Drug (JPN) on a Preferred Name Level you will see the following Term Properties: Code, Term, Dictionary Level, Usage Classification, Drug Name Kana, Preferred Name Kana, Dosage Form, Drug Code Class 1, Maintain Flag Jpn, Maintain Date Jpn, Drug Coder Class 2, JAN Flag, Maintain Date Eng, Maintain Flag Eng, English Name", new string[] {
                        "DFT",
                        "PBMCC_154852_019",
                        "Release2015.2.0",
                        "ignore"});
#line 663
this.ScenarioSetup(scenarioInfo);
#line 665
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 666
  testRunner.When("I set dictionary term search for dictionary \"J-Drug\" locale \"JPN\" version \"2014H1" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 667
  testRunner.And("I search on level \"Preferred Name\" and select the term \"プロフェナミン塩酸塩\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Property Value"});
            table49.AddRow(new string[] {
                        "Code",
                        "1163001"});
            table49.AddRow(new string[] {
                        "Term",
                        "プロフェナミン塩酸塩"});
            table49.AddRow(new string[] {
                        "Dictionary Level",
                        "Preferred Name"});
            table49.AddRow(new string[] {
                        "Usage Classification",
                        "1, 内"});
            table49.AddRow(new string[] {
                        "Drug Name Kana",
                        "ﾌﾟﾛﾌｴﾅﾐﾝｴﾝｻﾝｴﾝ"});
            table49.AddRow(new string[] {
                        "Preferred Name Kana",
                        "ﾌﾟﾛﾌｴﾅﾐﾝｴﾝｻﾝｴﾝ"});
            table49.AddRow(new string[] {
                        "Dosage Form",
                        "21000000000000000000"});
            table49.AddRow(new string[] {
                        "Drug Code Class 1",
                        "0"});
            table49.AddRow(new string[] {
                        "Maintain Flag Jpn",
                        "B"});
            table49.AddRow(new string[] {
                        "Maintain Date Jpn",
                        "1008"});
            table49.AddRow(new string[] {
                        "Drug Code Class 2",
                        "3"});
            table49.AddRow(new string[] {
                        "JAN Flag",
                        "1"});
            table49.AddRow(new string[] {
                        "Maintain Date Eng",
                        "9806"});
            table49.AddRow(new string[] {
                        "Maintain Flag Eng",
                        "B"});
            table49.AddRow(new string[] {
                        "English Name",
                        "1163001, PROFENAMINE HYDROCHLORIDE"});
#line 668
  testRunner.Then("I verify the following selected term properties:", ((string)(null)), table49, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for J-Drug (JPN) on a Classification Level you will see the following Term Properties: Coder, Term, Dictionary Level, Drug Name Kana, Dosage Form, Drug Code Class 1, Maintain Flag Jpn, Maintain Date Jpn, Drug Code Class 2, English Name")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC_154852_020")]
        [NUnit.Framework.CategoryAttribute("Release2015.2.0")]
        public virtual void WhenNavigatingToTheBrowserPageAndPerformingWithinDictionaryTermSearchWhenPerformingADictionarySearchForJ_DrugJPNOnAClassificationLevelYouWillSeeTheFollowingTermPropertiesCoderTermDictionaryLevelDrugNameKanaDosageFormDrugCodeClass1MaintainFlagJpnMaintainDateJpnDrugCodeClass2EnglishName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"When navigating to the Browser page and performing, within Dictionary Term Search, when performing a dictionary search for J-Drug (JPN) on a Classification Level you will see the following Term Properties: Coder, Term, Dictionary Level, Drug Name Kana, Dosage Form, Drug Code Class 1, Maintain Flag Jpn, Maintain Date Jpn, Drug Code Class 2, English Name", new string[] {
                        "DFT",
                        "PBMCC_154852_020",
                        "Release2015.2.0",
                        "ignore"});
#line 691
this.ScenarioSetup(scenarioInfo);
#line 693
  testRunner.Given("a \"Basic\" Coder setup with no tasks and no synonyms", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 694
  testRunner.When("I set dictionary term search for dictionary \"J-Drug\" locale \"JPN\" version \"2014H1" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 695
  testRunner.And("I search on level \"Detailed Classification\" and select the term \"プロフェナミン製剤\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Property",
                        "Property Value"});
            table50.AddRow(new string[] {
                        "Code",
                        "1163"});
            table50.AddRow(new string[] {
                        "Term",
                        "プロフェナミン製剤"});
            table50.AddRow(new string[] {
                        "Dictionary Level",
                        "Detailed Classification"});
            table50.AddRow(new string[] {
                        "Drug Name Kana",
                        "ﾌﾟﾛﾌｴﾅﾐﾝｾｲｻﾞｲ"});
            table50.AddRow(new string[] {
                        "Dosage Form",
                        "00000000000000000000"});
            table50.AddRow(new string[] {
                        "Drug Code Class 1",
                        "0"});
            table50.AddRow(new string[] {
                        "Maintain Flag Jpn",
                        "B"});
            table50.AddRow(new string[] {
                        "Maintain Date Jpn",
                        "9108"});
            table50.AddRow(new string[] {
                        "Drug Code Class 2",
                        "2"});
            table50.AddRow(new string[] {
                        "English Name",
                        "1163, PROFENAMINE AND PREPARATIONS"});
#line 696
  testRunner.Then("I verify the following selected term properties:", ((string)(null)), table50, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
