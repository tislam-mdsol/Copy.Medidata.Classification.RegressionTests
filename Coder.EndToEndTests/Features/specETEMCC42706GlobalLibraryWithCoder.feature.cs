// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.EndToEndTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Global library will support Coder settings.  This will allow forms that contain C" +
        "oder settings to be copied.")]
    public partial class GlobalLibraryWillSupportCoderSettings_ThisWillAllowFormsThatContainCoderSettingsToBeCopied_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specETEMCC42706GlobalLibraryWithCoder.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Global library will support Coder settings.  This will allow forms that contain C" +
                    "oder settings to be copied.", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify coping a form that contains Coder settings within a Project that the Coder" +
            " settings get copied to the new form.")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC42706_10")]
        [NUnit.Framework.CategoryAttribute("ETE_RaveCoderCore")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void VerifyCopingAFormThatContainsCoderSettingsWithinAProjectThatTheCoderSettingsGetCopiedToTheNewForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify coping a form that contains Coder settings within a Project that the Coder" +
                    " settings get copied to the new form.", new string[] {
                        "DFT",
                        "PBMCC42706_10",
                        "ETE_RaveCoderCore",
                        "Release2016.1.0"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 9
 testRunner.Given("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.And("a project registration with dictionary \"WhoDrugB2 200703 ENG\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("a Rave CRF copy source is added for the project", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "Coding Level",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table1.AddRow(new string[] {
                        "ETE2",
                        "CodingField10",
                        "<Dictionary>",
                        "<Locale>",
                        "PRODUCTSYNONYM",
                        "1",
                        "true",
                        "true"});
#line 13
 testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Supplemental"});
            table2.AddRow(new string[] {
                        "ETE2",
                        "CodingField10",
                        "SUPPDD"});
#line 16
 testRunner.And("the following supplementals fields for following forms", ((string)(null)), table2, "And ");
#line 19
 testRunner.When("a Rave Draft is published and pushed using draft \"<Draft>\" for Project \"<SourceSy" +
                    "stemStudyName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.And("a new Draft \"NewCopiedDraft\" is created through copy wizard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "Coding Level",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table3.AddRow(new string[] {
                        "ETE2",
                        "CodingField10",
                        "<Dictionary>",
                        "<Locale>",
                        "PRODUCTSYNONYM",
                        "1",
                        "true",
                        "true"});
#line 21
 testRunner.Then("verify the CRF has the following options for draft \"NewCopiedDraft\"", ((string)(null)), table3, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Supplemental"});
            table4.AddRow(new string[] {
                        "ETE2",
                        "CodingField10",
                        "SUPPDD"});
#line 24
 testRunner.And("verify the following supplemental fields for following forms", ((string)(null)), table4, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Coder settings get copied from a form that contains Coder settings to a fo" +
            "rm from another Project that has Coder registered")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC42706_20")]
        [NUnit.Framework.CategoryAttribute("ETE_RaveCoderCore")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void VerifyCoderSettingsGetCopiedFromAFormThatContainsCoderSettingsToAFormFromAnotherProjectThatHasCoderRegistered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Coder settings get copied from a form that contains Coder settings to a fo" +
                    "rm from another Project that has Coder registered", new string[] {
                        "DFT",
                        "PBMCC42706_20",
                        "ETE_RaveCoderCore",
                        "Release2016.1.0"});
#line 80
this.ScenarioSetup(scenarioInfo);
#line 82
 testRunner.Given("iMedidata App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 83
 testRunner.And("a coder study is created named \"SecondRaveCoderStudy\" for environment \"Prod\" with" +
                    " site \"Active Site 2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.And("a project registration with dictionary \"WhoDrugB2 200703 ENG\" for Project \"Second" +
                    "RaveCoderStudy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
 testRunner.And("a project registration with dictionary \"WhoDrugB2 200703 ENG\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "Coding Level",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table5.AddRow(new string[] {
                        "ETE2",
                        "CodingField10",
                        "<Dictionary>",
                        "<Locale>",
                        "PRODUCTSYNONYM",
                        "1",
                        "true",
                        "true"});
#line 88
 testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Supplemental"});
            table6.AddRow(new string[] {
                        "ETE2",
                        "CodingField10",
                        "SUPPDD"});
#line 91
 testRunner.And("the following supplementals fields for following forms", ((string)(null)), table6, "And ");
#line 94
 testRunner.When("a Rave Draft is published and pushed using draft \"<Draft>\" for Project \"<SourceSy" +
                    "stemStudyName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
 testRunner.And("a Rave CRF copy source is added for copy target project \"SecondRaveCoderStudy\" us" +
                    "ing copy source project \"<SourceSystemStudyName>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.And("a new Draft \"NewCopiedDraft\" is created through copy wizard for project \"SecondRa" +
                    "veCoderStudy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "Coding Level",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table7.AddRow(new string[] {
                        "ETE2",
                        "CodingField10",
                        "<Dictionary>",
                        "<Locale>",
                        "PRODUCTSYNONYM",
                        "1",
                        "true",
                        "true"});
#line 97
 testRunner.Then("verify the CRF has the following options for draft \"NewCopiedDraft\" for Project \"" +
                    "SecondRaveCoderStudy\"", ((string)(null)), table7, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Supplemental"});
            table8.AddRow(new string[] {
                        "ETE2",
                        "CodingField10",
                        "SUPPDD"});
#line 100
 testRunner.And("verify the following supplemental fields for following forms", ((string)(null)), table8, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify Coder settings are not copied from a form that contains Coder settings to " +
            "a from from another Project that does not have Coder registered")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC42706_30")]
        [NUnit.Framework.CategoryAttribute("ETE_RaveCoderCore")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void VerifyCoderSettingsAreNotCopiedFromAFormThatContainsCoderSettingsToAFromFromAnotherProjectThatDoesNotHaveCoderRegistered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Coder settings are not copied from a form that contains Coder settings to " +
                    "a from from another Project that does not have Coder registered", new string[] {
                        "DFT",
                        "PBMCC42706_30",
                        "ETE_RaveCoderCore",
                        "Release2016.1.0"});
#line 110
this.ScenarioSetup(scenarioInfo);
#line 113
 testRunner.Given("iMedidata App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 114
 testRunner.And("a coder study is created named \"SecondRaveCoderStudy\" for environment \"Prod\" with" +
                    " site \"Active Site 2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
 testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.And("a project registration with dictionary \"WhoDrugB2 200703 ENG\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "Coding Level",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table9.AddRow(new string[] {
                        "ETE2",
                        "CodingField10",
                        "<Dictionary>",
                        "<Locale>",
                        "PRODUCTSYNONYM",
                        "1",
                        "true",
                        "true"});
#line 118
 testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Supplemental"});
            table10.AddRow(new string[] {
                        "ETE2",
                        "CodingField10",
                        "SUPPDD"});
#line 121
 testRunner.And("the following supplementals fields for following forms", ((string)(null)), table10, "And ");
#line 124
 testRunner.When("a Rave Draft is published and pushed using draft \"<Draft>\" for Project \"<SourceSy" +
                    "stemStudyName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
 testRunner.And("a Rave CRF copy source is added for copy target project \"SecondRaveCoderStudy\" us" +
                    "ing copy source project \"<SourceSystemStudyName>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.And("a new Draft \"NewCopiedDraft\" is created through copy wizard for project \"SecondRa" +
                    "veCoderStudy\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "Coding Level",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table11.AddRow(new string[] {
                        "ETE2",
                        "CodingField10",
                        "<Dictionary>",
                        "<Locale>",
                        "PRODUCTSYNONYM",
                        "1",
                        "true",
                        "true"});
#line 127
 testRunner.Then("verify the Rave Coder setup does not have the following options for draft \"NewCop" +
                    "iedDraft\" for Project \"SecondRaveCoderStudy\"", ((string)(null)), table11, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Supplemental"});
            table12.AddRow(new string[] {
                        "ETE2",
                        "CodingField10",
                        "SUPPDD"});
#line 130
 testRunner.And("verify the following supplemental fields for following forms are not present", ((string)(null)), table12, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
