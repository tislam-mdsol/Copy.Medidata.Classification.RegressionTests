// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.EndToEndTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Verify Integration between Rave Coder Synonyms")]
    [NUnit.Framework.CategoryAttribute("EndToEndDynamicSegment")]
    public partial class VerifyIntegrationBetweenRaveCoderSynonymsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specETE_ENGRaveCoderSynonyms.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Verify Integration between Rave Coder Synonyms", "", ProgrammingLanguage.CSharp, new string[] {
                        "EndToEndDynamicSegment"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify in Rave that Verbatim terms with a synonym that have been accepted during " +
            "the synonym upversioning process, will ReCode automatically during study upversi" +
            "oning to new accepted synonym and be sent back to Rave with the new path")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PB11147_001ETE")]
        [NUnit.Framework.CategoryAttribute("Release2012.2.0")]
        [NUnit.Framework.CategoryAttribute("DE2089")]
        public virtual void VerifyInRaveThatVerbatimTermsWithASynonymThatHaveBeenAcceptedDuringTheSynonymUpversioningProcessWillReCodeAutomaticallyDuringStudyUpversioningToNewAcceptedSynonymAndBeSentBackToRaveWithTheNewPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify in Rave that Verbatim terms with a synonym that have been accepted during " +
                    "the synonym upversioning process, will ReCode automatically during study upversi" +
                    "oning to new accepted synonym and be sent back to Rave with the new path", new string[] {
                        "DFT",
                        "PB11147_001ETE",
                        "Release2012.2.0",
                        "DE2089"});
#line 13
this.ScenarioSetup(scenarioInfo);
#line 15
 testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 15.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.And("an unactivated synonym list \"MedDRA ENG 18.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table1.AddRow(new string[] {
                        "ETE5",
                        "Coding Field",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "true",
                        "false"});
#line 19
  testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table1, "And ");
#line 22
 testRunner.When("a Rave Draft is published and pushed using draft \"<Draft>\" for Project \"<StudyNam" +
                    "e>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.And("adding a new subject \"TST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table2.AddRow(new string[] {
                        "Coding Field",
                        "Adverse Event 1",
                        ""});
#line 24
 testRunner.And("adding a new verbatim term to form \"ETE5\"", ((string)(null)), table2, "And ");
#line 27
 testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.When("task \"Adverse Event 1\" is coded to term \"Infusion site bruising\" at search level " +
                    "\"Lower Level Term\" with code \"10059203\" at level \"LLT\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term Path"});
            table3.AddRow(new string[] {
                        "SOC",
                        "10022891",
                        "Investigations"});
            table3.AddRow(new string[] {
                        "HLGT",
                        "10040879",
                        "Skin investigations"});
            table3.AddRow(new string[] {
                        "HLT",
                        "10040862",
                        "Skin histopathology procedures"});
            table3.AddRow(new string[] {
                        "PT",
                        "10004873",
                        "Biopsy skin"});
            table3.AddRow(new string[] {
                        "LLT",
                        "10004873",
                        "Biopsy skin"});
#line 31
 testRunner.Then("the coding decision for verbatim \"Adverse Event 1\" on form \"ETE5\" for field \"Codi" +
                    "ng Field\" contains the following data", ((string)(null)), table3, "Then ");
#line 38
 testRunner.When("starting synonym list migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
 testRunner.And("accepting the reconciliation suggestion for the synonym \"Adverse Event 1\" under t" +
                    "he category \"Path Does Not Exist\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("completing synonym migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("performing Study Impact Analysis", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.Then("the verbatim term \"Adverse Event 1\" exists under Path Changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
    testRunner.When("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 44
 testRunner.Then("study migration is complete for the latest version", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Category",
                        "Workflow Status"});
            table4.AddRow(new string[] {
                        "Adverse Event 1",
                        "Coded but not Completed",
                        "Waiting Approval"});
#line 45
 testRunner.And("the following study report information exists", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Comment",
                        "Workflow Status"});
            table5.AddRow(new string[] {
                        "Adverse Event 1",
                        "Version Change - From MedDRA-15_0-English To MedDRA-18_0-English. Recoded due to " +
                            "synonym change across versions",
                        "Waiting Approval"});
#line 48
 testRunner.And("the term has the following coding history comments", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify in Rave that Verbatim terms with a synonym that have been accepted during " +
            "the synonym upversioning process, while in a reclassified state will ReCode auto" +
            "matically during study upversioning")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PB11147_001bETE")]
        [NUnit.Framework.CategoryAttribute("Release2012.2.0")]
        [NUnit.Framework.CategoryAttribute("DE1655")]
        public virtual void VerifyInRaveThatVerbatimTermsWithASynonymThatHaveBeenAcceptedDuringTheSynonymUpversioningProcessWhileInAReclassifiedStateWillReCodeAutomaticallyDuringStudyUpversioning()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify in Rave that Verbatim terms with a synonym that have been accepted during " +
                    "the synonym upversioning process, while in a reclassified state will ReCode auto" +
                    "matically during study upversioning", new string[] {
                        "DFT",
                        "PB11147_001bETE",
                        "Release2012.2.0",
                        "DE1655"});
#line 58
this.ScenarioSetup(scenarioInfo);
#line 60
 testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 11.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
 testRunner.And("an unactivated synonym list \"MedDRA ENG 18.0 New_Primary_List\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table6.AddRow(new string[] {
                        "ETE5",
                        "Coding Field",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "false",
                        "true"});
#line 64
  testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table6, "And ");
#line 67
 testRunner.When("a Rave Draft is published and pushed using draft \"<Draft>\" for Project \"<StudyNam" +
                    "e>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
 testRunner.And("adding a new subject \"TST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table7.AddRow(new string[] {
                        "Coding Field",
                        "Adverse Event 1",
                        ""});
#line 69
 testRunner.And("adding a new verbatim term to form \"ETE5\"", ((string)(null)), table7, "And ");
#line 72
 testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.When("task \"Adverse Event 1\" is coded to term \"Infusion site bruising\" at search level " +
                    "\"Lower Level Term\" with code \"10059203\" at level \"LLT\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term Path"});
            table8.AddRow(new string[] {
                        "SOC",
                        "10022891",
                        "Investigations"});
            table8.AddRow(new string[] {
                        "HLGT",
                        "10040879",
                        "Skin investigations"});
            table8.AddRow(new string[] {
                        "HLT",
                        "10040862",
                        "Skin histopathology procedures"});
            table8.AddRow(new string[] {
                        "PT",
                        "10004873",
                        "Biopsy skin"});
            table8.AddRow(new string[] {
                        "LLT",
                        "10004873",
                        "Biopsy skin"});
#line 75
 testRunner.Then("the coding decision for verbatim \"Adverse Event 1\" on form \"ETE5\" for field \"Codi" +
                    "ng Field\" contains the following data", ((string)(null)), table8, "Then ");
#line 82
 testRunner.When("starting synonym list migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.And("accepting the reconciliation suggestion for the synonym \"Adverse Event 1\" under t" +
                    "he category \"Path Does Not Exist\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.And("completing synonym migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.And("reclassifying task \"Adverse Event 1\" with Include Autocoded Items set to \"True\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
 testRunner.And("performing Study Impact Analysis", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.Then("the verbatim term \"Adverse Event 1\" exists under Path Changed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 88
    testRunner.When("performing study migration", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
 testRunner.Then("study migration is complete for the latest version", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Category",
                        "Workflow Status"});
            table9.AddRow(new string[] {
                        "Adverse Event 1",
                        "Coded but not Completed",
                        "Waiting Approval"});
#line 90
 testRunner.And("the following study report information exists", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim",
                        "Comment",
                        "Workflow Status"});
            table10.AddRow(new string[] {
                        "Adverse Event 1",
                        "Version Change - From MedDRA-15_0-English To MedDRA-18_0-English. Recoded due to " +
                            "synonym change across versions",
                        "Waiting Approval"});
#line 93
 testRunner.And("the term has the following coding history comments", ((string)(null)), table10, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"Verify in Rave that a new exact match should re-code automatically upon study upversioning completing, while in a reclassified state the term will ReCode automatically during study upversioning to new accepted synonym and be sent back to Rave with the new path")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PB11147_001cETE")]
        [NUnit.Framework.CategoryAttribute("Release2012.2.0")]
        [NUnit.Framework.CategoryAttribute("DE1655")]
        public virtual void VerifyInRaveThatANewExactMatchShouldRe_CodeAutomaticallyUponStudyUpversioningCompletingWhileInAReclassifiedStateTheTermWillReCodeAutomaticallyDuringStudyUpversioningToNewAcceptedSynonymAndBeSentBackToRaveWithTheNewPath()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"Verify in Rave that a new exact match should re-code automatically upon study upversioning completing, while in a reclassified state the term will ReCode automatically during study upversioning to new accepted synonym and be sent back to Rave with the new path", new string[] {
                        "DFT",
                        "PB11147_001cETE",
                        "Release2012.2.0",
                        "DE1655"});
#line 102
this.ScenarioSetup(scenarioInfo);
#line 103
 testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 13.1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 104
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table11.AddRow(new string[] {
                        "ETE1",
                        "CoderField1",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "false",
                        "true",
                        ""});
#line 105
  testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table11, "And ");
#line 108
 testRunner.When("a Rave Draft is published and pushed using draft \"<Draft>\" for Project \"<StudyNam" +
                    "e>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
 testRunner.And("adding a new subject \"TST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table12.AddRow(new string[] {
                        "AdverseEvent1",
                        "Adverse Event 1",
                        ""});
#line 110
 testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table12, "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table13.AddRow(new string[] {
                        "AdverseEvent1",
                        "CARBOHYDRATE INTOLERANCE",
                        ""});
#line 113
 testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table13, "And ");
#line 116
 testRunner.When("task \"Adverse Event 1\" is coded to term \"Infusion site bruising\" at search level " +
                    "\"Lower Level Term\" with code \"10059203\" at level \"LLT\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
 testRunner.And("a Rave submitted coding task \"CARBOHYDRATE INTOLERANCE\" for subject \"CoderSubject" +
                    "\" on field \"Coding Field\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
    testRunner.When("task \"CARBOHYDRATE INTOLERANCE\" is coded to term \"Carbohydrate tolerance decrease" +
                    "d\" at search level \"Lower Level Term\" with code \"10007218\" at level \"LLT\" and a " +
                    "synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term"});
            table14.AddRow(new string[] {
                        "SOC",
                        "10022891",
                        "Investigations"});
            table14.AddRow(new string[] {
                        "HLGT",
                        "10027432",
                        "Metabolic, nutritional and blood gas investigations"});
            table14.AddRow(new string[] {
                        "HLT",
                        "10007217",
                        "Carbohydrate tolerance analyses (incl diabetes)"});
            table14.AddRow(new string[] {
                        "PT",
                        "10007218",
                        "Carbohydrate tolerance decreased"});
            table14.AddRow(new string[] {
                        "LLT",
                        "10007218",
                        "Carbohydrate tolerance decreased"});
#line 119
 testRunner.Then("Rave should contain the following coding decision information for subject \"CoderS" +
                    "ubject\" on field \"Coding Field\"", ((string)(null)), table14, "Then ");
#line 126
 testRunner.And("a new synonym list is created for \"MedDRA ENG 14.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.And("a reconcile synonym and study impact analysis migration is performed between \"Med" +
                    "DRA ENG 13.1\" to \"MedDRA ENG 14.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And("term \"CARBOHYDRATE INTOLERANCE\" for \"MedDRA 14.0\" with Include Autocode Items \"ch" +
                    "ecked\" is reclassified", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term"});
            table15.AddRow(new string[] {
                        "SOC",
                        "10027433",
                        "Metabolism and nutrition disorders"});
            table15.AddRow(new string[] {
                        "HLGT",
                        "10016950",
                        "Food intolerance syndromes"});
            table15.AddRow(new string[] {
                        "HLT",
                        "10042454",
                        "Sugar intolerance (excl glucose intolerance)"});
            table15.AddRow(new string[] {
                        "PT",
                        "10071200",
                        "Carbohydrate intolerance"});
            table15.AddRow(new string[] {
                        "LLT",
                        "10071200",
                        "Carbohydrate intolerance"});
#line 129
 testRunner.Then("Rave Adverse Events form \"ETE1\" should display", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify in Rave that a new exact match should re-code automatically upon study upv" +
            "ersioning completing.")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PB11130_001ETE")]
        [NUnit.Framework.CategoryAttribute("Release2012.2.0")]
        public virtual void VerifyInRaveThatANewExactMatchShouldRe_CodeAutomaticallyUponStudyUpversioningCompleting_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify in Rave that a new exact match should re-code automatically upon study upv" +
                    "ersioning completing.", new string[] {
                        "DFT",
                        "PB11130_001ETE",
                        "Release2012.2.0"});
#line 141
this.ScenarioSetup(scenarioInfo);
#line 142
 testRunner.Given("a Rave project registration with dictionary \"AZDD ENG 6.1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table16.AddRow(new string[] {
                        "ETE1",
                        "CoderField1",
                        "<Dictionary>",
                        "<Locale>",
                        "TN",
                        "1",
                        "false",
                        "true",
                        ""});
#line 144
  testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table16, "And ");
#line 147
 testRunner.When("a Rave Draft is published and pushed using draft \"<Draft>\" for Project \"<StudyNam" +
                    "e>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 148
 testRunner.And("adding a new subject \"TST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table17.AddRow(new string[] {
                        "AdverseEvent1",
                        "APO-TAMIS",
                        ""});
#line 149
 testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table17, "And ");
#line 152
 testRunner.When("task \"APO-TAMIS\" is coded to to term \"APO-K\" at search level \"Trade Name\" with co" +
                    "de \"000314 02 046\" at level \"TN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term"});
            table18.AddRow(new string[] {
                        "ATC",
                        "A",
                        "ALIMENTARY TRACT AND METABOLISM"});
            table18.AddRow(new string[] {
                        "ATC",
                        "G",
                        "BLOOD AND BLOOD FORMING ORGANS"});
            table18.AddRow(new string[] {
                        "ATC",
                        "G04",
                        "BLOOD SUBSTITUTES AND PERFUSION SOLUTIONS"});
            table18.AddRow(new string[] {
                        "ATC",
                        "G04C",
                        "I.V. SOLUTION ADDITIVES"});
            table18.AddRow(new string[] {
                        "ATC",
                        "G04CA",
                        "Electrolyte solutions"});
            table18.AddRow(new string[] {
                        "PN",
                        "012803 02 001",
                        "POTASSIUM CHLORIDE"});
            table18.AddRow(new string[] {
                        "TN",
                        "012803 02 519",
                        "APO-K"});
#line 153
 testRunner.Then("Rave should contain the following coding decision information for subject \"CoderS" +
                    "ubject\" on field \"Coding Field\"", ((string)(null)), table18, "Then ");
#line 162
 testRunner.And("a new synonym list is created for \"AZDD ENG 11.1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.And("a reconcile synonym and study impact analysis migration is performed between \"AZD" +
                    "D ENG 6.1\" to \"AZDD ENG 11.1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.And("term \"CARBOHYDRATE INTOLERANCE\" for \"AZDD 11.1\" with Include Autocode Items \"chec" +
                    "ked\" is reclassified", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term"});
            table19.AddRow(new string[] {
                        "ATC",
                        "G",
                        "GENITO URINARY SYSTEM AND SEX HORMONES"});
            table19.AddRow(new string[] {
                        "ATC",
                        "G04",
                        "UROLOGICALS"});
            table19.AddRow(new string[] {
                        "ATC",
                        "G04C",
                        "DRUGS USED IN BENIGN PROSTATIC HYPERTROPHY"});
            table19.AddRow(new string[] {
                        "ATC",
                        "G04CA",
                        "Alpha-adrenoreceptor antagonists"});
            table19.AddRow(new string[] {
                        "PN",
                        "012803 02 001",
                        "TAMSULOSIN HYDROCHLORIDE"});
            table19.AddRow(new string[] {
                        "TN",
                        "012803 02 519",
                        "APO-TAMIS"});
#line 165
 testRunner.Then("Rave Adverse Events form \"ETE1\" should display", ((string)(null)), table19, "Then ");
#line 173
 testRunner.And("the rave audit trail contains the following message \"APO-TAMIS - version 11.1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify in Rave a new exact match should re-code automatically upon study upversio" +
            "ning completing.")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PB11130_002ETE")]
        [NUnit.Framework.CategoryAttribute("Release2012.2.0")]
        public virtual void VerifyInRaveANewExactMatchShouldRe_CodeAutomaticallyUponStudyUpversioningCompleting_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify in Rave a new exact match should re-code automatically upon study upversio" +
                    "ning completing.", new string[] {
                        "DFT",
                        "PB11130_002ETE",
                        "Release2012.2.0"});
#line 179
this.ScenarioSetup(scenarioInfo);
#line 180
 testRunner.Given("a Rave project registration with dictionary \"AZDD ENG 6.1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 181
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table20.AddRow(new string[] {
                        "ETE1",
                        "CoderField1",
                        "<Dictionary>",
                        "<Locale>",
                        "TN",
                        "1",
                        "false",
                        "true",
                        ""});
#line 182
  testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table20, "And ");
#line 185
 testRunner.When("a Rave Draft is published and pushed using draft \"<Draft>\" for Project \"<StudyNam" +
                    "e>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 186
 testRunner.And("adding a new subject \"TST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table21.AddRow(new string[] {
                        "AdverseEvent1",
                        "LOVAZA",
                        ""});
#line 187
 testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table21, "And ");
#line 190
 testRunner.When("task \"LOVAZA\" is coded to to term \"LOVASTATIN\" at search level \"PREFERRED NAME\" w" +
                    "ith code \"008967 01 001\" at level \"PN\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term"});
            table22.AddRow(new string[] {
                        "ATC",
                        "C",
                        "CARDIOVASCULAR SYSTEM"});
            table22.AddRow(new string[] {
                        "ATC",
                        "C10",
                        "LIPID MODIFYING AGENTS"});
            table22.AddRow(new string[] {
                        "ATC",
                        "C10A",
                        "LIPID MODIFYING AGENTS, PLAIN"});
            table22.AddRow(new string[] {
                        "ATC",
                        "C10AA",
                        "HMG CoA reductase inhibitors"});
            table22.AddRow(new string[] {
                        "PN",
                        "008967 01 001",
                        "LOVASTATIN"});
#line 191
 testRunner.Then("Rave should contain the following coding decision information for subject \"CoderS" +
                    "ubject\" on field \"Coding Field\"", ((string)(null)), table22, "Then ");
#line 198
 testRunner.And("a new synonym list is created for \"AZDD ENG 11.1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.And("a reconcile synonym and study impact analysis migration is performed between \"AZD" +
                    "D ENG 6.1\" to \"AZDD ENG 11.1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
 testRunner.And("term \"CARBOHYDRATE INTOLERANCE\" for \"AZDD 11.1\" with Include Autocode Items \"chec" +
                    "ked\" is reclassified", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term"});
            table23.AddRow(new string[] {
                        "ATC",
                        "C",
                        "CARDIOVASCULAR SYSTEM"});
            table23.AddRow(new string[] {
                        "ATC",
                        "C10",
                        "LIPID MODIFYING AGENTS"});
            table23.AddRow(new string[] {
                        "ATC",
                        "C10A",
                        "LIPID MODIFYING AGENTS, PLAIN"});
            table23.AddRow(new string[] {
                        "ATC",
                        "C10AX",
                        "Other lipid modifying agents"});
            table23.AddRow(new string[] {
                        "PN",
                        "014037 01 001",
                        "OMEGA-3 MARINE TRIGLYCERIDES"});
#line 201
 testRunner.Then("Rave Adverse Events form \"ETE1\" should display", ((string)(null)), table23, "Then ");
#line 208
 testRunner.And("the rave audit trail contains the following message \"LOVAZA - version 11.1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("An exact match should remain coded upon study upversioning completing when matchi" +
            "ng the same exact match with the same term path in the new dictionary version an" +
            "d not be re-submitted to rave given just the update of a new dictionary version." +
            "")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PB11130_003ETE")]
        [NUnit.Framework.CategoryAttribute("Release2012.2.0")]
        [NUnit.Framework.CategoryAttribute("DE2193")]
        public virtual void AnExactMatchShouldRemainCodedUponStudyUpversioningCompletingWhenMatchingTheSameExactMatchWithTheSameTermPathInTheNewDictionaryVersionAndNotBeRe_SubmittedToRaveGivenJustTheUpdateOfANewDictionaryVersion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("An exact match should remain coded upon study upversioning completing when matchi" +
                    "ng the same exact match with the same term path in the new dictionary version an" +
                    "d not be re-submitted to rave given just the update of a new dictionary version." +
                    "", new string[] {
                        "DFT",
                        "PB11130_003ETE",
                        "Release2012.2.0",
                        "DE2193"});
#line 214
this.ScenarioSetup(scenarioInfo);
#line 215
 testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 11.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 216
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table24.AddRow(new string[] {
                        "ETE1",
                        "CoderField1",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "false",
                        "true",
                        ""});
#line 217
  testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table24, "And ");
#line 220
 testRunner.When("a Rave Draft is published and pushed using draft \"<Draft>\" for Project \"<StudyNam" +
                    "e>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 221
 testRunner.And("adding a new subject \"TST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table25.AddRow(new string[] {
                        "AdverseEvent1",
                        "Vision yellow",
                        ""});
#line 222
 testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term"});
            table26.AddRow(new string[] {
                        "SOC",
                        "10015919",
                        "Eye disorders"});
            table26.AddRow(new string[] {
                        "HLGT",
                        "10047518",
                        "Vision disorders"});
            table26.AddRow(new string[] {
                        "HLT",
                        "10047538",
                        "Visual colour distortions"});
            table26.AddRow(new string[] {
                        "PT",
                        "10048216",
                        "Xanthopsia"});
            table26.AddRow(new string[] {
                        "LLT",
                        "10047527",
                        "Vision yellow"});
#line 225
 testRunner.Then("Rave should contain the following coding decision information for subject \"CoderS" +
                    "ubject\" on field \"Coding Field\"", ((string)(null)), table26, "Then ");
#line 232
 testRunner.And("a new synonym list is created for \"MedDRA ENG 11.1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 233
 testRunner.And("a reconcile synonym and study impact analysis migration are performed between \"Me" +
                    "dDRA ENG 11.0\" to \"MedDRA ENG 11.1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 234
 testRunner.And("term \"Adverse Event 1\" for \"MedDRA 12.0\" with Include Autocode Items \"checked\" is" +
                    " reclassified", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term"});
            table27.AddRow(new string[] {
                        "SOC",
                        "10022117",
                        "Injury, poisoning and procedural complications"});
            table27.AddRow(new string[] {
                        "HLGT",
                        "10001316",
                        "Administration site reactions"});
            table27.AddRow(new string[] {
                        "HLT",
                        "10068753",
                        "Infusion site reactions"});
            table27.AddRow(new string[] {
                        "PT",
                        "10065463",
                        "Infusion site haematoma"});
            table27.AddRow(new string[] {
                        "LLT",
                        "10059203",
                        "Infusion site bruising"});
#line 235
 testRunner.Then("Rave Adverse Events form \"ETE1\" should display", ((string)(null)), table27, "Then ");
#line 242
 testRunner.And("the rave audit trail should not contain the following message \"- version 11.1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
