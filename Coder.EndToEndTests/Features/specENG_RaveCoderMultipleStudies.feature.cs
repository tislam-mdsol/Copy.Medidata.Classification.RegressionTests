// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.EndToEndTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Test the full round trip integration from Rave to Coder back to Rave using Multip" +
        "le Studies")]
    [NUnit.Framework.CategoryAttribute("specENG_RaveCoderMultipleStudies.feature")]
    [NUnit.Framework.CategoryAttribute("EndToEndMultipleProdStudy")]
    public partial class TestTheFullRoundTripIntegrationFromRaveToCoderBackToRaveUsingMultipleStudiesFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specENG_RaveCoderMultipleStudies.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Test the full round trip integration from Rave to Coder back to Rave using Multip" +
                    "le Studies", "", ProgrammingLanguage.CSharp, new string[] {
                        "specENG_RaveCoderMultipleStudies.feature",
                        "EndToEndMultipleProdStudy"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test that Rave is able to send coding terms to Coder even when more than 1 study " +
            "is on the same Rave URL")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PB1.1.2.016")]
        [NUnit.Framework.CategoryAttribute("ReleasePatch08")]
        public virtual void TestThatRaveIsAbleToSendCodingTermsToCoderEvenWhenMoreThan1StudyIsOnTheSameRaveURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test that Rave is able to send coding terms to Coder even when more than 1 study " +
                    "is on the same Rave URL", new string[] {
                        "DFT",
                        "PB1.1.2.016",
                        "ReleasePatch08"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("a Rave project registration with dictionary \"WhoDrug-DDE-B2 ENG 200703\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table1.AddRow(new string[] {
                        "ETE19",
                        "LL Coding Field",
                        "<Dictionary>",
                        "",
                        "PRODUCTSYNONYM",
                        "1",
                        "true",
                        "true",
                        "DSearchlist Std Sup"});
#line 13
  testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table1, "And ");
#line 16
 testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.And("a Rave Draft is published using draft \"<DraftName>\" for Project \"<UatStudyName>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("adding a new subject \"TST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table2.AddRow(new string[] {
                        "Log Coding Field",
                        "child advil cold extreme",
                        ""});
            table2.AddRow(new string[] {
                        "Dynamic Search List Supplemental Field B",
                        "Sup1",
                        "DynamicSearchList"});
#line 19
 testRunner.And("adding a new verbatim term to form \"ETE19\"", ((string)(null)), table2, "And ");
#line 23
 testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Term",
                        "Value"});
            table3.AddRow(new string[] {
                        "ETE19.DSEARCHLISTSTDSUP",
                        "Sup1"});
#line 24
 testRunner.Then("the \"child advil cold extreme\" task has the following supplemental information", ((string)(null)), table3, "Then ");
#line 27
 testRunner.When("task \"child advil cold extreme\" is coded to term \"CHILDRENS ADVIL COLD\" at search" +
                    " level \"Trade Name\" with code \"010502 01 015\" at level \"TN\" and a synonym is cre" +
                    "ated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term Path"});
            table4.AddRow(new string[] {
                        "ATC",
                        "M",
                        "MUSCULO-SKELETAL SYSTEM"});
            table4.AddRow(new string[] {
                        "ATC",
                        "M01",
                        "ANTIINFLAMMATORY AND ANTIRHEUMATIC PRODUCTS"});
            table4.AddRow(new string[] {
                        "ATC",
                        "M01A",
                        "ANTIINFLAMMATORY/ANTIRHEUMATIC PROD.,NON-STEROIDS"});
            table4.AddRow(new string[] {
                        "ATC",
                        "M01AE",
                        "PROPIONIC ACID DERIVATIVES"});
            table4.AddRow(new string[] {
                        "PRODUCT",
                        "010502 01 001",
                        "CO-ADVIL"});
            table4.AddRow(new string[] {
                        "PRODUCTSYNONYM",
                        "010502 01 015",
                        "CHILDRENS ADVIL COLD"});
#line 29
 testRunner.Then("the coding decision for verbatim \"child advil cold extreme\" on form \"ETE19\" for f" +
                    "ield \"Coding Field\" contains the following data", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
