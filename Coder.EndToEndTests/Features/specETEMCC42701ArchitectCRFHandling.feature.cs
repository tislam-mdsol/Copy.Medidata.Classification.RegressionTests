// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.EndToEndTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Architect CRF download will contain Coder settings and Architect upload will save" +
        " Coder settings")]
    public partial class ArchitectCRFDownloadWillContainCoderSettingsAndArchitectUploadWillSaveCoderSettingsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specETEMCC42701ArchitectCRFHandling.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Architect CRF download will contain Coder settings and Architect upload will save" +
                    " Coder settings", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When downloading an architect CRF spreadsheet containing Coder information on a p" +
            "roject that has registered to a Coding Dictionary, Coding configuration data wil" +
            "l be present upon selection")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC42701_10")]
        [NUnit.Framework.CategoryAttribute("ETE_RaveCoderCore")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void WhenDownloadingAnArchitectCRFSpreadsheetContainingCoderInformationOnAProjectThatHasRegisteredToACodingDictionaryCodingConfigurationDataWillBePresentUponSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When downloading an architect CRF spreadsheet containing Coder information on a p" +
                    "roject that has registered to a Coding Dictionary, Coding configuration data wil" +
                    "l be present upon selection", new string[] {
                        "DFT",
                        "PBMCC42701_10",
                        "ETE_RaveCoderCore",
                        "Release2016.1.0"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 9
    testRunner.Given("a Rave project registration with dictionary \"WhoDrug_DDE_B2 ENG 201509\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "Coding Level",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table1.AddRow(new string[] {
                        "ETE2",
                        "Coding Field",
                        "<Dictionary>",
                        "<Locale>",
                        "PRODUCTSYNONYM",
                        "1",
                        "true",
                        "true"});
#line 11
 testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Supplemental Field"});
            table2.AddRow(new string[] {
                        "ETE2",
                        "Log Supp Field1",
                        "LOGSUPPFIELD1"});
            table2.AddRow(new string[] {
                        "ETE2",
                        "Std Supp Field 4",
                        "LOGSUPPFIELD2"});
#line 14
 testRunner.And("supplemental terms for the following fields", ((string)(null)), table2, "And ");
#line 18
 testRunner.When("downloading Rave Architect CRF named \"ETE_Study_Draft.zip\" located to \"C:\\Temp\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "Coding Level",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table3.AddRow(new string[] {
                        "ETE2",
                        "Coding Field",
                        "<Dictionary>",
                        "<Locale>",
                        "PRODUCTSYNONYM",
                        "1",
                        "true",
                        "true"});
#line 19
 testRunner.Then("verify file \"ETE_Study_Draft.zip\" located in \"C:\\Temp\" has the following Rave Arc" +
                    "hitect CRF Coder Configuration information", ((string)(null)), table3, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Supplemental Field"});
            table4.AddRow(new string[] {
                        "ETE2",
                        "Coding Field",
                        "LOGSUPPFIELD2"});
            table4.AddRow(new string[] {
                        "ETE2",
                        "Coding Field",
                        "LOGSUPPFIELD4"});
#line 22
 testRunner.And("verify file \"ETE_Study_Draft.zip\" located in \"C:\\Temp\" has the following Rave Arc" +
                    "hitect CRF Coder Supplemental Terms information", ((string)(null)), table4, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When uploading an architect spreadsheet to a project that is not registered to a " +
            "Coding Dictionary, then the upload should fail.")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("PBMCC42701_40")]
        [NUnit.Framework.CategoryAttribute("ETE_RaveCoderCore")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void WhenUploadingAnArchitectSpreadsheetToAProjectThatIsNotRegisteredToACodingDictionaryThenTheUploadShouldFail_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When uploading an architect spreadsheet to a project that is not registered to a " +
                    "Coding Dictionary, then the upload should fail.", new string[] {
                        "DFT",
                        "PBMCC42701_40",
                        "ETE_RaveCoderCore",
                        "Release2016.1.0"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 34
 testRunner.Given("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
 testRunner.When("uploading a rave architect draft template \"MCC42701_40.xls\" to \"Draft 1\" for stud" +
                    "y \"<Study>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.Then("I verify the following CRF upload message \"Error while reading row 5. Field OID \'" +
                    "CODERTERM1\' in form OID \'ETE1\' : Coding dictionary \'MedDRAMedHistory (Coder)\' no" +
                    "t found in the target database.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
