// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.EndToEndTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Test full round trip integration from Rave to Coder")]
    public partial class TestFullRoundTripIntegrationFromRaveToCoderFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specRaveCoderFormConfigurations.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Test full round trip integration from Rave to Coder", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Register 1 dictionary in Coder, verify Rave only shows 1 Coder dictionary, regist" +
            "er another dictionary in Coder, verify there are now 2 dictionaries in Rave")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_Form_config_register_dictionaries")]
        [NUnit.Framework.CategoryAttribute("PB1.1.2-008")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void Register1DictionaryInCoderVerifyRaveOnlyShows1CoderDictionaryRegisterAnotherDictionaryInCoderVerifyThereAreNow2DictionariesInRave()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Register 1 dictionary in Coder, verify Rave only shows 1 Coder dictionary, regist" +
                    "er another dictionary in Coder, verify there are now 2 dictionaries in Rave", new string[] {
                        "DFT",
                        "ETE_ENG_Form_config_register_dictionaries",
                        "PB1.1.2-008",
                        "Release2016.1.0"});
#line 7
  this.ScenarioSetup(scenarioInfo);
#line 8
    testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 12.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table1.AddRow(new string[] {
                        "ETE5",
                        "coderFieldETE5",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "true",
                        "false",
                        ""});
#line 10
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table1, "And ");
#line 13
    testRunner.Then("the Coding Dictionary Dropdown should \"see\" contain value \"CODER-MEDRA\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
    testRunner.And("the Coding Dictionary Dropdown should \"not see\" contain value \"CODER- WhoDrugDDEB" +
                    "2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
    testRunner.And("I preform a Coder project registraion for \"WhoDrugDDEB2 ENG 200703\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
    testRunner.Then("the Coding Dictionary Dropdown should \"see\" contain value \"CODER-MEDRA\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
    testRunner.Then("the Coding Dictionary Dropdown should \"see\" contain value \"CODER- WhoDrugDDEB2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Test that Edit checks and derivations both fire when a coding response is sent ba" +
            "ck to Rave from Coder")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_Form_config_edit_checks_and_derivations")]
        [NUnit.Framework.CategoryAttribute("PB1.1.2-017")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void TestThatEditChecksAndDerivationsBothFireWhenACodingResponseIsSentBackToRaveFromCoder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Test that Edit checks and derivations both fire when a coding response is sent ba" +
                    "ck to Rave from Coder", new string[] {
                        "DFT",
                        "ETE_ENG_Form_config_edit_checks_and_derivations",
                        "PB1.1.2-017",
                        "Release2016.1.0"});
#line 26
  this.ScenarioSetup(scenarioInfo);
#line 27
    testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 12.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table2.AddRow(new string[] {
                        "ETE11",
                        "AETERM",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "true",
                        "false",
                        ""});
#line 29
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table2, "And ");
#line 32
    testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
    testRunner.And("adding a new subject \"TEST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table3.AddRow(new string[] {
                        "AdverseEvent1",
                        "Headache",
                        ""});
#line 34
    testRunner.When("adding a new verbatim term to form \"ETE11\"", ((string)(null)), table3, "When ");
#line 37
    testRunner.And("I note down memo \"NowTimeStampBeforeCoding\" with data from \"Rave Log Table\" in co" +
                    "lumn \"NOW\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
    testRunner.And("I note down memo \"TestTimeStampBeforeCoding\" with data from \"Rave Log Table\" in c" +
                    "olumn \"Test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
    testRunner.When("I wait for text \"Headaches NEC\" to show up, selecting Rave form \"ETE11\" and link " +
                    "\"Headache\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
    testRunner.And("I note down memo \"NowTimeStampAfterCoding\" with data from \"Rave Log Table\" in col" +
                    "umn \"NOW\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
    testRunner.And("I note down memo \"TestTimeStampAfterCoding\" with data from \"Rave Log Table\" in co" +
                    "lumn \"Test\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
    testRunner.Then("I verify datetime memo \"<NowTimeStampAfterCoding>\" is equal to memo \"<NowTimeStam" +
                    "pBeforeCoding>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
    testRunner.And("I verify datetime memo \"<TestTimeStampAfterCoding>\" is greater than memo \"<TestTi" +
                    "meStampBeforeCoding>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify setting up a second tag processing process does not affect Coder terms fro" +
            "m being sent over and coded")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_Form_config_second_tag_processing")]
        [NUnit.Framework.CategoryAttribute("PB1.1.2-018")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void VerifySettingUpASecondTagProcessingProcessDoesNotAffectCoderTermsFromBeingSentOverAndCoded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify setting up a second tag processing process does not affect Coder terms fro" +
                    "m being sent over and coded", new string[] {
                        "DFT",
                        "ETE_ENG_Form_config_second_tag_processing",
                        "PB1.1.2-018",
                        "Release2016.1.0"});
#line 50
  this.ScenarioSetup(scenarioInfo);
#line 51
    testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 12.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 52
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table4.AddRow(new string[] {
                        "ETE13",
                        "ETE131",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "true",
                        "false",
                        ""});
#line 53
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "SG Mapping TextField",
                        "SG Mapping Option",
                        "SG Mapping Form Dropdown",
                        "SG Mapping Folder Dropdown",
                        "SG Mappings CaseID Field Dropdown",
                        "SG Mappings TermHighlighted Field Dropdown",
                        "SG Dictinoary Mapping Dropdown 1",
                        "SG Dictinoary Mapping Dropdown 2",
                        "SG Dictinoary Mapping Dropdown 3"});
            table5.AddRow(new string[] {
                        "senderorganization",
                        "log Line form",
                        "ETE13",
                        "SG1",
                        "ETE131",
                        "ETE132",
                        "N/A",
                        "Yes, highlighted by the reporter, NOT Serious, 1",
                        "Yes, highlighted by the reporter, SERIOUS, 3"});
#line 57
    testRunner.And("Create Study Group Configuration form \"New SG Config\" with the following data", ((string)(null)), table5, "And ");
#line 78
    testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
    testRunner.And("adding a new subject \"TEST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table6.AddRow(new string[] {
                        "AdverseEvent1",
                        "Headache",
                        ""});
#line 80
    testRunner.When("adding a new verbatim term to form \"ETE13\"", ((string)(null)), table6, "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Coding Level",
                        "Code",
                        "Term"});
            table7.AddRow(new string[] {
                        "SOC",
                        "10029205",
                        "Nervous system disorders"});
            table7.AddRow(new string[] {
                        "HLGT",
                        "10019231",
                        "Headaches"});
            table7.AddRow(new string[] {
                        "HLT",
                        "10019233",
                        "Headaches NEC"});
            table7.AddRow(new string[] {
                        "PT",
                        "10019211",
                        "Headache"});
            table7.AddRow(new string[] {
                        "LLT",
                        "10019198",
                        "Head pain"});
#line 83
    testRunner.Then("the field \"CoderField1\" on form \"ETE13\" for study \"<Study>\" site \"<Site>\" subject" +
                    " \"TEST\" contains the following coding decision data", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Enter project registration in Coder, setup Rave study, enter verbatim with the li" +
            "mit of 450 characters in Rave, code verbatim in Coder, and see results in Rave")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_Form_config_char_limit")]
        [NUnit.Framework.CategoryAttribute("PB1.1.2-022")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void EnterProjectRegistrationInCoderSetupRaveStudyEnterVerbatimWithTheLimitOf450CharactersInRaveCodeVerbatimInCoderAndSeeResultsInRave()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Enter project registration in Coder, setup Rave study, enter verbatim with the li" +
                    "mit of 450 characters in Rave, code verbatim in Coder, and see results in Rave", new string[] {
                        "DFT",
                        "ETE_ENG_Form_config_char_limit",
                        "PB1.1.2-022",
                        "Release2016.1.0"});
#line 96
  this.ScenarioSetup(scenarioInfo);
#line 97
    testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 12.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 98
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table8.AddRow(new string[] {
                        "ETE1",
                        "Adverse Event 1",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "true",
                        "false",
                        ""});
#line 99
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table8, "And ");
#line 102
    testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 103
    testRunner.And("adding a new subject \"TEST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table9.AddRow(new string[] {
                        "AdverseEvent1",
                        @"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij",
                        ""});
#line 104
    testRunner.When("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table9, "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Coding Level",
                        "Code",
                        "Term"});
            table10.AddRow(new string[] {
                        "SOC",
                        "10029205",
                        "Nervous system disorders"});
            table10.AddRow(new string[] {
                        "HLGT",
                        "10019231",
                        "Headaches"});
            table10.AddRow(new string[] {
                        "HLT",
                        "10019233",
                        "Headaches NEC"});
            table10.AddRow(new string[] {
                        "PT",
                        "10019211",
                        "Headache"});
            table10.AddRow(new string[] {
                        "LLT",
                        "10019198",
                        "Head pain"});
#line 107
    testRunner.Then("the field \"CoderField1\" on form \"ETE1\" for study \"<Study>\" site \"<Site>\" subject " +
                    "\"TEST2\" contains the following coding decision data", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify that when you have more than 10 instances of a repeat parent folder, terms" +
            " are still able to be sent to Coder from Rave and Rave is still able to receive " +
            "both coding decisions and rejects from Coder.")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_Form_config_repeat_parent_folders")]
        [NUnit.Framework.CategoryAttribute("PB1.1.2-024")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void VerifyThatWhenYouHaveMoreThan10InstancesOfARepeatParentFolderTermsAreStillAbleToBeSentToCoderFromRaveAndRaveIsStillAbleToReceiveBothCodingDecisionsAndRejectsFromCoder_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that when you have more than 10 instances of a repeat parent folder, terms" +
                    " are still able to be sent to Coder from Rave and Rave is still able to receive " +
                    "both coding decisions and rejects from Coder.", new string[] {
                        "DFT",
                        "ETE_ENG_Form_config_repeat_parent_folders",
                        "PB1.1.2-024",
                        "Release2016.1.0"});
#line 121
  this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Basic Rave Coder Submission and reconsider term and recode")]
        public virtual void BasicRaveCoderSubmissionAndReconsiderTermAndRecode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Basic Rave Coder Submission and reconsider term and recode", ((string[])(null)));
#line 122
  this.ScenarioSetup(scenarioInfo);
#line 123
    testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 12.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 124
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table11.AddRow(new string[] {
                        "ETE1",
                        "Adverse Event 1",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "true",
                        "false",
                        ""});
#line 125
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table11, "And ");
#line 128
    testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 129
    testRunner.And("adding a new subject \"TEST\" with \"10\" added \"ParentRepeat\" events", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table12.AddRow(new string[] {
                        "AdverseEvent1",
                        "terrible head pain 1",
                        ""});
#line 130
    testRunner.And("adding a new verbatim term to form \"ETE1\" for \"ParentRepeat (1)\"", ((string)(null)), table12, "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table13.AddRow(new string[] {
                        "AdverseEvent1",
                        "terrible head pain 4",
                        ""});
#line 133
    testRunner.And("adding a new verbatim term to form \"ETE1\" for \"ParentRepeat (4)\"", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table14.AddRow(new string[] {
                        "AdverseEvent1",
                        "terrible head pain 6",
                        ""});
#line 136
    testRunner.And("adding a new verbatim term to form \"ETE1\" for \"ParentRepeat (6)\"", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table15.AddRow(new string[] {
                        "AdverseEvent1",
                        "terrible head pain 8",
                        ""});
#line 139
    testRunner.And("adding a new verbatim term to form \"ETE1\" for \"ParentRepeat (8)\"", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "query"});
            table16.AddRow(new string[] {
                        "Rejecting Decision due to bad term"});
#line 142
    testRunner.Then("on field \"CoderField1\" on form \"ETE1\" for study \"<Study>\" site \"<Site>\" subject \"" +
                    "TEST\" for \"ParentRepeat (3)\" I submit a query with the following data", ((string)(null)), table16, "Then ");
#line 145
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "value1",
                        "text",
                        "value2"});
            table17.AddRow(new string[] {
                        "terrible head pain 4",
                        "headache",
                        "Headache"});
            table17.AddRow(new string[] {
                        "terrible head pain 6",
                        "Basilar migraine",
                        "Basilar migraine"});
            table17.AddRow(new string[] {
                        "terrible head pain 8",
                        "migraine",
                        "Migraine"});
#line 146
    testRunner.And("With data below, I browse and code Term \"<value1>\" located in \"Coder Main Table\" " +
                    "on row \"1\", entering value \"<text>\" and selecting \"<value2>\" located in \"Diction" +
                    "ary Tree Table\"", ((string)(null)), table17, "And ");
#line 151
    testRunner.And("I navigate to Rave App form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Coding Level",
                        "Code",
                        "Term"});
            table18.AddRow(new string[] {
                        "PT",
                        "10019211",
                        "Headache"});
            table18.AddRow(new string[] {
                        "HLT",
                        "10019233",
                        "Headaches NEC"});
            table18.AddRow(new string[] {
                        "HLGT",
                        "10019231",
                        "Headaches"});
            table18.AddRow(new string[] {
                        "SOC",
                        "10029205",
                        "Nervous system disorders"});
            table18.AddRow(new string[] {
                        "LLT",
                        "",
                        ""});
#line 152
    testRunner.Then("the field \"CoderField1\" on form \"ETE1\" for study \"<Study>\" site \"<Site>\" subject " +
                    "\"TEST\" for \"ParentRepeat (4)\" contains the following coding decision data", ((string)(null)), table18, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Coding Level",
                        "Code",
                        "Term"});
            table19.AddRow(new string[] {
                        "PT",
                        "10050258",
                        "Basilar migraine"});
            table19.AddRow(new string[] {
                        "HLT",
                        "10027603",
                        "Migraine headaches"});
            table19.AddRow(new string[] {
                        "HLGT",
                        "10019231",
                        "Headaches"});
            table19.AddRow(new string[] {
                        "SOC",
                        "10029205",
                        "Nervous system disorders"});
            table19.AddRow(new string[] {
                        "LLT",
                        "",
                        ""});
#line 159
    testRunner.Then("the field \"CoderField1\" on form \"ETE1\" for study \"<Study>\" site \"<Site>\" subject " +
                    "\"TEST\" for \"ParentRepeat (6)\" contains the following coding decision data", ((string)(null)), table19, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Coding Level",
                        "Code",
                        "Term"});
            table20.AddRow(new string[] {
                        "PT",
                        "10027599",
                        "Migraine"});
            table20.AddRow(new string[] {
                        "HLT",
                        "10027603",
                        "Migraine headaches"});
            table20.AddRow(new string[] {
                        "HLGT",
                        "10019231",
                        "Headaches"});
            table20.AddRow(new string[] {
                        "SOC",
                        "10029205",
                        "Nervous system disorders"});
            table20.AddRow(new string[] {
                        "LLT",
                        "",
                        ""});
#line 166
    testRunner.Then("the field \"CoderField1\" on form \"ETE1\" for study \"<Study>\" site \"<Site>\" subject " +
                    "\"TEST\" for \"ParentRepeat (8)\" contains the following coding decision data", ((string)(null)), table20, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "querytext"});
            table21.AddRow(new string[] {
                        "Rejecting Decision due to bad term"});
#line 173
    testRunner.Then("the field \"CoderField1\" on form \"ETE1\" for study \"<Study>\" site \"<Site>\" subject " +
                    "\"TEST\" for \"ParentRepeat (3)\" contains the following coding decision data", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify that after submitting a blank log line on an auto-coded term displays no d" +
            "ata and when resubmitting an auto-coded term that the coded decision appears")]
        [NUnit.Framework.CategoryAttribute("MCC-207807")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_Form_config")]
        public virtual void VerifyThatAfterSubmittingABlankLogLineOnAnAuto_CodedTermDisplaysNoDataAndWhenResubmittingAnAuto_CodedTermThatTheCodedDecisionAppears()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify that after submitting a blank log line on an auto-coded term displays no d" +
                    "ata and when resubmitting an auto-coded term that the coded decision appears", new string[] {
                        "MCC-207807",
                        "ETE_ENG_Form_config"});
#line 180
  this.ScenarioSetup(scenarioInfo);
#line 181
    testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 12.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 182
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table22.AddRow(new string[] {
                        "ETE1",
                        "Adverse Event 1",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "true",
                        "false",
                        ""});
#line 183
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table22, "And ");
#line 186
    testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 187
    testRunner.And("adding a new subject \"TEST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table23.AddRow(new string[] {
                        "AdverseEvent1",
                        "headache",
                        ""});
#line 188
    testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Coding Level",
                        "Code",
                        "Term"});
            table24.AddRow(new string[] {
                        "SOC",
                        "10029205",
                        "Nervous system disorders"});
            table24.AddRow(new string[] {
                        "HLGT",
                        "10019231",
                        "Headaches"});
            table24.AddRow(new string[] {
                        "HLT",
                        "10019233",
                        "Headaches NEC"});
            table24.AddRow(new string[] {
                        "PT",
                        "10019211",
                        "Headache"});
            table24.AddRow(new string[] {
                        "LLT",
                        "10019198",
                        "Head pain"});
#line 191
    testRunner.Then("the field \"CoderField1\" on form \"ETE13\" for study \"<Study>\" site \"<Site>\" subject" +
                    " \"TEST\" contains the following coding decision data", ((string)(null)), table24, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table25.AddRow(new string[] {
                        "ETE3",
                        "",
                        ""});
#line 198
    testRunner.And("I edit verbatim \"terrible head pain \" on form \"ETE1\" for study \"<Study>\" site \"<S" +
                    "ite>\" subject \"TEST\"", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Coding Level",
                        "Code",
                        "Term"});
            table26.AddRow(new string[] {
                        "",
                        "",
                        ""});
#line 201
    testRunner.Then("the field \"CoderField1\" on form \"ETE1\" for study \"<Study>\" site \"<Site>\" subject " +
                    "\"TEST\" contains the following coding decision data", ((string)(null)), table26, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table27.AddRow(new string[] {
                        "Adverse Event 1",
                        "headache",
                        ""});
#line 204
    testRunner.And("I edit verbatim \"terrible head pain \" on form \"ETE1\" for study \"<Study>\" site \"<S" +
                    "ite>\" subject \"TEST\"", ((string)(null)), table27, "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Coding Level",
                        "Code",
                        "Term"});
            table28.AddRow(new string[] {
                        "SOC",
                        "10029205",
                        "Nervous system disorders"});
            table28.AddRow(new string[] {
                        "HLGT",
                        "10019231",
                        "Headaches"});
            table28.AddRow(new string[] {
                        "HLT",
                        "10019233",
                        "Headaches NEC"});
            table28.AddRow(new string[] {
                        "PT",
                        "10019211",
                        "Headache"});
            table28.AddRow(new string[] {
                        "LLT",
                        "10019198",
                        "Head pain"});
#line 207
    testRunner.Then("the field \"CoderField1\" on form \"ETE13\" for study \"<Study>\" site \"<Site>\" subject" +
                    " \"TEST\" contains the following coding decision data", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
