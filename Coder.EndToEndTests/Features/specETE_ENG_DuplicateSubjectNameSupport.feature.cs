// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.EndToEndTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Coding decisions will post in EDC regardless of subject name")]
    public partial class CodingDecisionsWillPostInEDCRegardlessOfSubjectNameFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specETE_ENG_DuplicateSubjectNameSupport.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Coding decisions will post in EDC regardless of subject name", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Subject with duplicate names when one is inactivated will still be able to receiv" +
            "e coding decisions")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_dup_namesupport")]
        [NUnit.Framework.CategoryAttribute("PB3.6.6_001")]
        [NUnit.Framework.CategoryAttribute("Release2016_1_0")]
        [NUnit.Framework.CategoryAttribute("EndToEndDynamicSegment")]
        public virtual void SubjectWithDuplicateNamesWhenOneIsInactivatedWillStillBeAbleToReceiveCodingDecisions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Subject with duplicate names when one is inactivated will still be able to receiv" +
                    "e coding decisions", new string[] {
                        "DFT",
                        "ETE_ENG_dup_namesupport",
                        "PB3.6.6_001",
                        "Release2016_1_0",
                        "EndToEndDynamicSegment"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("a Rave project registration with dictionary \"WhoDrug-DDE-B2 ENG 200703\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
  testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "Coding Level",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table1.AddRow(new string[] {
                        "ETE2",
                        "Coding Field",
                        "<Dictionary>",
                        "<Locale>",
                        "PRODUCTSYNONYM",
                        "1",
                        "true",
                        "true"});
#line 13
  testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table1, "And ");
#line 16
  testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
  testRunner.And("adding a set of duplicate subject with initial \"TST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
  testRunner.And("deactivating a duplicate subject", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table2.AddRow(new string[] {
                        "Coding Field",
                        "HeadBang",
                        "LongText"});
#line 30
  testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table2, "And ");
#line 33
  testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
  testRunner.And("task \"HeadBang\" is coded to term \"ACHES-N-PAIN\" at search level \"Low Level Term\" " +
                    "with code \"??????????????\" at level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
  testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term Path"});
            table3.AddRow(new string[] {
                        "SOC",
                        "10007541",
                        "Cardiac disorders"});
            table3.AddRow(new string[] {
                        "HLGT",
                        "10007521",
                        "Cardiac arrhythmias"});
            table3.AddRow(new string[] {
                        "HLT",
                        "10042600",
                        "Supraventricular arrhythmias"});
            table3.AddRow(new string[] {
                        "PT",
                        "10003658",
                        "Atrial fibrillation"});
            table3.AddRow(new string[] {
                        "LLT",
                        "10003658",
                        "Atrial fibrillation"});
#line 36
  testRunner.Then("the coding decision for verbatim \"HeadBang\" on form \"ETE1\" for field \"Coding Fiel" +
                    "d\" contains the following data", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
