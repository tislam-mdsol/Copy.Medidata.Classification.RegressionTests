// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.EndToEndTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("The following scenarios will serve as a coder setup script")]
    [NUnit.Framework.CategoryAttribute("specRaveModulesIntegration.feature")]
    public partial class TheFollowingScenariosWillServeAsACoderSetupScriptFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specRaveModulesIntegration.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "The following scenarios will serve as a coder setup script", "", ProgrammingLanguage.CSharp, new string[] {
                        "specRaveModulesIntegration.feature"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Successfully upload a configuration file in Rave Modules")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("Deployment")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        [NUnit.Framework.CategoryAttribute("PBMCC211000")]
        public virtual void SuccessfullyUploadAConfigurationFileInRaveModules()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successfully upload a configuration file in Rave Modules", new string[] {
                        "DFT",
                        "Deployment",
                        "Release2016.1.0",
                        "PBMCC211000"});
#line 9
 this.ScenarioSetup(scenarioInfo);
#line 10
 testRunner.Given("a configuration file to be uploaded in Rave Modules", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.When("the configuration file \"RaveCoreConfig_eng.xls\" is uploaded in Rave Modules", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.Then("a verification message \"Save successful\" is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Assign Roles to Users in Rave")]
        [NUnit.Framework.CategoryAttribute("DDF")]
        [NUnit.Framework.CategoryAttribute("Deployment")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        [NUnit.Framework.CategoryAttribute("PBMCC211000")]
        public virtual void AssignRolesToUsersInRave()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Assign Roles to Users in Rave", new string[] {
                        "DDF",
                        "Deployment",
                        "Release2016.1.0",
                        "PBMCC211000"});
#line 18
 this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("a new user \"coderimport\" that needs to be assigned roles", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Upload a Rave Draft CRF template")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        [NUnit.Framework.CategoryAttribute("PBMCC_216333_001")]
        [NUnit.Framework.CategoryAttribute("EndToEnd")]
        [NUnit.Framework.CategoryAttribute("IncreaseTimeout_180000")]
        public virtual void UploadARaveDraftCRFTemplate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Upload a Rave Draft CRF template", new string[] {
                        "DFT",
                        "Release2016.1.0",
                        "PBMCC_216333_001",
                        "EndToEnd",
                        "IncreaseTimeout_180000"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 29
testRunner.Given("Rave Modules App Segment \"<Segment>\" is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 30
testRunner.When("uploading a rave architect draft template \"RaveDraft_Template.xml\" to \"RaveCoderD" +
                    "raft\" for study \"<SourceSystemStudyName>\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
