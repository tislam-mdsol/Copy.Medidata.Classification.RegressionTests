// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.EndToEndTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("specCoderSetupSteps")]
    [NUnit.Framework.CategoryAttribute("specCoderSetup.feature")]
    [NUnit.Framework.CategoryAttribute("EndToEndStaticSegment")]
    public partial class SpecCoderSetupStepsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specCoderSetup.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "specCoderSetupSteps", "Enroll a new segment in Coder\r\nRoll out a dictionary\r\nCreate and assign workflow " +
                    "role, general role, page study role and dictionary role", ProgrammingLanguage.CSharp, new string[] {
                        "specCoderSetup.feature",
                        "EndToEndStaticSegment"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CoderAdmin enrolls a new segment in Coder and rolls out a new dictionary")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        [NUnit.Framework.CategoryAttribute("PBMCC_211000_003")]
        public virtual void CoderAdminEnrollsANewSegmentInCoderAndRollsOutANewDictionary()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CoderAdmin enrolls a new segment in Coder and rolls out a new dictionary", new string[] {
                        "DFT",
                        "Release2016.1.0",
                        "PBMCC_211000_003"});
#line 12
this.ScenarioSetup(scenarioInfo);
#line 13
 testRunner.Given("a new segment to be enrolled in Coder", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.When("a dictionary \"MedDRA (eng)\" is rolled out", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create and assign workflow role, general role, page study role and dictionary rol" +
            "e")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        [NUnit.Framework.CategoryAttribute("PBMCC_211000_004")]
        public virtual void CreateAndAssignWorkflowRoleGeneralRolePageStudyRoleAndDictionaryRole()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create and assign workflow role, general role, page study role and dictionary rol" +
                    "e", new string[] {
                        "DFT",
                        "Release2016.1.0",
                        "PBMCC_211000_004"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
 testRunner.Given("a new Coder User", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
 testRunner.When("creating and activating a new workflow role called \"Workflow Admin\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.And("assigning workflow role \"Workflow Admin\" for \"All\" study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("creating and activating a \"Page Study Security\" role called \"StudyAdmin\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("assigning \"Page Study Security\" General Role \"StudyAdmin\" for \"All\" type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("creating and activating a \"Page Dictionary Security\" role called \"DictAdmin\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("assigning \"Page Dictionary Security\" General Role \"DictAdmin\" for \"All\" type", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
