// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.EndToEndTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Log line coding fields in Rave EDC who have been set with landscape view in Rave " +
        "Architect will display coded decisions.")]
    public partial class LogLineCodingFieldsInRaveEDCWhoHaveBeenSetWithLandscapeViewInRaveArchitectWillDisplayCodedDecisions_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ETE_ENG_LandscapeView.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Log line coding fields in Rave EDC who have been set with landscape view in Rave " +
                    "Architect will display coded decisions.", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify a coding decision is visible for a submitted log line verbatim in a landsc" +
            "ape form in EDC")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("MCC-207752-005")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void VerifyACodingDecisionIsVisibleForASubmittedLogLineVerbatimInALandscapeFormInEDC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify a coding decision is visible for a submitted log line verbatim in a landsc" +
                    "ape form in EDC", new string[] {
                        "VAL",
                        "MCC-207752-005",
                        "Release2016.1.0"});
#line 6
this.ScenarioSetup(scenarioInfo);
#line 8
testRunner.Given("a Rave project registration with dictionary \"WHODRUGB2 200703 ENG\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "Coding Level",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table1.AddRow(new string[] {
                        "ETE12",
                        "Coding Field",
                        "<Dictionary>",
                        "",
                        "LLT",
                        "1",
                        "true",
                        "true"});
#line 10
testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table1, "And ");
#line 13
testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
testRunner.When("adding a new subject \"TST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table2.AddRow(new string[] {
                        "Coding Field",
                        "terrible head pain",
                        "LongText"});
#line 15
testRunner.And("adding a new verbatim term to form \"ETE12\"", ((string)(null)), table2, "And ");
#line 18
testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
testRunner.And("task \"terrible head pain\" is coded to term \"ACHES-N-PAIN\" at search level \"Low Le" +
                    "vel Term\" with code \"??????????????\" at level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term Path"});
            table3.AddRow(new string[] {
                        "SOC",
                        "10007541",
                        "Cardiac disorders"});
            table3.AddRow(new string[] {
                        "HLGT",
                        "10007521",
                        "Cardiac arrhythmias"});
            table3.AddRow(new string[] {
                        "HLT",
                        "10042600",
                        "Supraventricular arrhythmias"});
            table3.AddRow(new string[] {
                        "PT",
                        "10003658",
                        "Atrial fibrillation"});
            table3.AddRow(new string[] {
                        "LLT",
                        "10003658",
                        "Atrial fibrillation"});
#line 21
testRunner.Then("the coding decision for verbatim \"terrible head pain\" on form \"ETE2\" for field \"C" +
                    "oding Field\" contains the following data", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify a coding decisions is visible for multi-log line submissions in a landscap" +
            "e form in EDC")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("MCC-207752-006")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void VerifyACodingDecisionsIsVisibleForMulti_LogLineSubmissionsInALandscapeFormInEDC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify a coding decisions is visible for multi-log line submissions in a landscap" +
                    "e form in EDC", new string[] {
                        "VAL",
                        "MCC-207752-006",
                        "Release2016.1.0"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 35
testRunner.Given("a Rave project registration with dictionary \"WHODRUGB2 200703 ENG\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "Coding Level",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table4.AddRow(new string[] {
                        "ETE12",
                        "Coding Field",
                        "<Dictionary>",
                        "",
                        "LLT",
                        "1",
                        "true",
                        "true"});
#line 37
testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table4, "And ");
#line 40
testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
testRunner.When("adding a new subject \"TST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table5.AddRow(new string[] {
                        "Coding Field",
                        "terrible head pain",
                        "LongText"});
#line 42
testRunner.And("adding a new verbatim term to form \"ETE12\"", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table6.AddRow(new string[] {
                        "Coding Field",
                        "Ankle Pain",
                        "LongText"});
#line 45
testRunner.And("adding a new verbatim term to form \"ETE12\"", ((string)(null)), table6, "And ");
#line 48
testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
testRunner.And("task \"terrible head pain\" is coded to term \"ACHES-N-PAIN\" at search level \"Low Le" +
                    "vel Term\" with code \"??????????????\" at level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term Path"});
            table7.AddRow(new string[] {
                        "SOC",
                        "10007541",
                        "Cardiac disorders"});
            table7.AddRow(new string[] {
                        "HLGT",
                        "10007521",
                        "Cardiac arrhythmias"});
            table7.AddRow(new string[] {
                        "HLT",
                        "10042600",
                        "Supraventricular arrhythmias"});
            table7.AddRow(new string[] {
                        "PT",
                        "10003658",
                        "Atrial fibrillation"});
            table7.AddRow(new string[] {
                        "LLT",
                        "10003658",
                        "Atrial fibrillation"});
#line 51
testRunner.Then("the coding decision for verbatim \"terrible head pain\" on form \"ETE2\" for field \"C" +
                    "oding Field\" contains the following data", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify a coding decision is visible for a submitted log line verbatim in a landsc" +
            "ape form in EDC that contains a Rave Query.")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("MCC-207752-007")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void VerifyACodingDecisionIsVisibleForASubmittedLogLineVerbatimInALandscapeFormInEDCThatContainsARaveQuery_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify a coding decision is visible for a submitted log line verbatim in a landsc" +
                    "ape form in EDC that contains a Rave Query.", new string[] {
                        "VAL",
                        "MCC-207752-007",
                        "Release2016.1.0"});
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
testRunner.Given("a Rave project registration with dictionary \"WHODRUGB2 200703 ENG\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 65
testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "Coding Level",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table8.AddRow(new string[] {
                        "ETE12",
                        "Coding Field",
                        "<Dictionary>",
                        "",
                        "LLT",
                        "1",
                        "true",
                        "true"});
#line 66
testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table8, "And ");
#line 69
testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
testRunner.When("adding a new subject \"TST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table9.AddRow(new string[] {
                        "Coding Field",
                        "terrible head pain",
                        "LongText"});
#line 71
testRunner.And("adding a new verbatim term to form \"ETE12\"", ((string)(null)), table9, "And ");
#line 74
testRunner.And("I open a rave query for task \"terrible head pain\" on form \"ETE12\" with comment \"t" +
                    "his is a rave query\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
testRunner.And("task \"terrible head pain\" is coded to term \"ACHES-N-PAIN\" at search level \"Low Le" +
                    "vel Term\" with code \"??????????????\" at level \"LLT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term Path"});
            table10.AddRow(new string[] {
                        "SOC",
                        "10007541",
                        "Cardiac disorders"});
            table10.AddRow(new string[] {
                        "HLGT",
                        "10007521",
                        "Cardiac arrhythmias"});
            table10.AddRow(new string[] {
                        "HLT",
                        "10042600",
                        "Supraventricular arrhythmias"});
            table10.AddRow(new string[] {
                        "PT",
                        "10003658",
                        "Atrial fibrillation"});
            table10.AddRow(new string[] {
                        "LLT",
                        "10003658",
                        "Atrial fibrillation"});
#line 78
testRunner.Then("the coding decision for verbatim \"terrible head pain\" on form \"ETE2\" for field \"C" +
                    "oding Field\" contains the following data", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
