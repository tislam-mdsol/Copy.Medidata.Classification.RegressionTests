// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.EndToEndTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("When a Coder query is answered or cancelled, the verbatim will be resent to Coder" +
        ".")]
    public partial class WhenACoderQueryIsAnsweredOrCancelledTheVerbatimWillBeResentToCoder_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specETE_UpdatingQueriesResendTermsBackToCoder.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "When a Coder query is answered or cancelled, the verbatim will be resent to Coder" +
                    ".", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When a Coder query is answered and the verbatim is not updated, the verbatim is r" +
            "esent to Coder")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_updated_query_answer_query")]
        [NUnit.Framework.CategoryAttribute("PB3.3.3-006")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void WhenACoderQueryIsAnsweredAndTheVerbatimIsNotUpdatedTheVerbatimIsResentToCoder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When a Coder query is answered and the verbatim is not updated, the verbatim is r" +
                    "esent to Coder", new string[] {
                        "DFT",
                        "ETE_ENG_updated_query_answer_query",
                        "PB3.3.3-006",
                        "Release2016.1.0"});
#line 7
  this.ScenarioSetup(scenarioInfo);
#line 8
    testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 12.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table1.AddRow(new string[] {
                        "ETE1",
                        "Adverse Event 1",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "true",
                        "false",
                        ""});
#line 10
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table1, "And ");
#line 13
    testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
    testRunner.And("adding a new subject \"TEST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table2.AddRow(new string[] {
                        "AdverseEvent1",
                        "terrible head pain",
                        ""});
#line 15
    testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table2, "And ");
#line 18
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
    testRunner.Then("I submit coder query \"Open query due to bad term\" for task \"terrible head pain\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
    testRunner.Then("I should see the query status \"open\" for task \"terrible head pain\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 21
    testRunner.And("I navigate to Rave App form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
    testRunner.And("I Answer query for form \"ETE1\" for \"Subject\" with value \"Answered\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
    testRunner.And("I browse and code task \"terrible head pain\" entering value \"head pain\" and select" +
                    "ing \"Headaches\" located in Dictionary Tree Table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
    testRunner.And("I navigate to Rave App form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Coding Level",
                        "Code",
                        "Term"});
            table3.AddRow(new string[] {
                        "SOC",
                        "10029205",
                        "Nervous system disorders"});
            table3.AddRow(new string[] {
                        "HLGT",
                        "10019231",
                        "Headaches"});
            table3.AddRow(new string[] {
                        "HLT",
                        "10019233",
                        "Headaches NEC"});
            table3.AddRow(new string[] {
                        "PT",
                        "10019211",
                        "Headache"});
            table3.AddRow(new string[] {
                        "LLT",
                        "10019198",
                        "Head pain"});
#line 26
    testRunner.Then("the field \"CoderField1\" on form \"ETE1\" for study \"<Study>\" site \"<Site>\" subject " +
                    "\"TEST\" contains the following coding decision data", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When a Coder query is cancelled and the verbatim is not updated, the verbatim is " +
            "resent to Coder")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_updated_query_cancel_query")]
        [NUnit.Framework.CategoryAttribute("PB3.3.3-004")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void WhenACoderQueryIsCancelledAndTheVerbatimIsNotUpdatedTheVerbatimIsResentToCoder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When a Coder query is cancelled and the verbatim is not updated, the verbatim is " +
                    "resent to Coder", new string[] {
                        "DFT",
                        "ETE_ENG_updated_query_cancel_query",
                        "PB3.3.3-004",
                        "Release2016.1.0"});
#line 39
  this.ScenarioSetup(scenarioInfo);
#line 40
    testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 12.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table4.AddRow(new string[] {
                        "ETE1",
                        "Adverse Event 1",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "true",
                        "false",
                        ""});
#line 42
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table4, "And ");
#line 45
    testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
    testRunner.And("adding a new subject \"TEST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table5.AddRow(new string[] {
                        "AdverseEvent1",
                        "terrible head pain",
                        ""});
#line 47
    testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table5, "And ");
#line 50
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
    testRunner.Then("I submit coder query \"Rejecting Decision due to bad term\" for task \"terrible head" +
                    " pain\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
    testRunner.Then("I should see the query status \"open\" for task \"terrible head pain\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
    testRunner.And("I navigate to Rave App form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
    testRunner.And("I cancel query for term \"terrible head pain\" on form \"ETE1\" for \"Subject\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
    testRunner.And("I browse and code task \"terrible head pain\" entering value \"head pain\" and select" +
                    "ing \"Headaches\" located in Dictionary Tree Table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
    testRunner.And("I navigate to Rave App form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Coding Level",
                        "Code",
                        "Term"});
            table6.AddRow(new string[] {
                        "SOC",
                        "10029205",
                        "Nervous system disorders"});
            table6.AddRow(new string[] {
                        "HLGT",
                        "10019231",
                        "Headaches"});
            table6.AddRow(new string[] {
                        "HLT",
                        "10019233",
                        "Headaches NEC"});
            table6.AddRow(new string[] {
                        "PT",
                        "10019211",
                        "Headache"});
            table6.AddRow(new string[] {
                        "LLT",
                        "10019198",
                        "Head pain"});
#line 58
    testRunner.Then("the field \"CoderField1\" on form \"ETE1\" for study \"<Study>\" site \"<Site>\" subject " +
                    "\"TEST\" contains the following coding decision data", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify a Coder query is answered and the verbatim is updated, the updated verbati" +
            "m is resent to Coder")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_updated_query_answer_query_view_term_in_coder")]
        [NUnit.Framework.CategoryAttribute("PB3.3.3-005")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void VerifyACoderQueryIsAnsweredAndTheVerbatimIsUpdatedTheUpdatedVerbatimIsResentToCoder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify a Coder query is answered and the verbatim is updated, the updated verbati" +
                    "m is resent to Coder", new string[] {
                        "DFT",
                        "ETE_ENG_updated_query_answer_query_view_term_in_coder",
                        "PB3.3.3-005",
                        "Release2016.1.0"});
#line 71
  this.ScenarioSetup(scenarioInfo);
#line 72
    testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 12.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 73
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table7.AddRow(new string[] {
                        "ETE1",
                        "Adverse Event 1",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "true",
                        "false",
                        ""});
#line 74
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table7, "And ");
#line 77
    testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
    testRunner.And("adding a new subject \"TEST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table8.AddRow(new string[] {
                        "AdverseEvent1",
                        "terrible head pain",
                        ""});
#line 79
    testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table8, "And ");
#line 82
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
    testRunner.Then("I submit coder query \"Rejecting Decision due to bad term\" for task \"terrible head" +
                    " pain\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 84
    testRunner.Then("I should see the query status \"open\" for task \"terrible head pain\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 85
    testRunner.And("I navigate to Rave App form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
    testRunner.And("I cancel query for term \"terrible head pain\" on form \"ETE1\" for \"Subject\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
    testRunner.And("answer query for form \"ETE1\" for \"Subject\" with value \"Answered Query.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
    testRunner.And("I browse and code task \"terrible head pain\" entering value \"head pain\" and select" +
                    "ing \"Headaches\" located in Dictionary Tree Table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
    testRunner.And("I navigate to Rave App form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Coding Level",
                        "Code",
                        "Term"});
            table9.AddRow(new string[] {
                        "SOC",
                        "10029205",
                        "Nervous system disorders"});
            table9.AddRow(new string[] {
                        "HLGT",
                        "10019231",
                        "Headaches"});
            table9.AddRow(new string[] {
                        "HLT",
                        "10019233",
                        "Headaches NEC"});
            table9.AddRow(new string[] {
                        "PT",
                        "10019211",
                        "Headache"});
            table9.AddRow(new string[] {
                        "LLT",
                        "10019198",
                        "Head pain"});
#line 91
    testRunner.Then("the field \"CoderField1\" on form \"ETE1\" for study \"<Study>\" site \"<Site>\" subject " +
                    "\"TEST\" contains the following coding decision data", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When a Coder query is cancelled and the verbatim is updated, the updated verbatim" +
            " is resent to Coder")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_updated_query_change_term")]
        [NUnit.Framework.CategoryAttribute("PB3.3.3-006")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void WhenACoderQueryIsCancelledAndTheVerbatimIsUpdatedTheUpdatedVerbatimIsResentToCoder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When a Coder query is cancelled and the verbatim is updated, the updated verbatim" +
                    " is resent to Coder", new string[] {
                        "DFT",
                        "ETE_ENG_updated_query_change_term",
                        "PB3.3.3-006",
                        "Release2016.1.0"});
#line 103
  this.ScenarioSetup(scenarioInfo);
#line 104
    testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 12.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 105
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table10.AddRow(new string[] {
                        "ETE1",
                        "Adverse Event 1",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "true",
                        "false",
                        ""});
#line 106
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table10, "And ");
#line 109
    testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 110
    testRunner.And("adding a new subject \"TEST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table11.AddRow(new string[] {
                        "AdverseEvent1",
                        "terrible head pain",
                        ""});
#line 111
    testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table11, "And ");
#line 114
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
    testRunner.Then("I submit coder query \"Rejecting Decision due to bad term\" for task \"head pain\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 116
    testRunner.Then("I should see the query status \"open\" for task \"terrible head pain\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 117
    testRunner.And("I navigate to Rave App form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
    testRunner.And("I cancel query for term \"terrible head pain\" on form \"ETE1\" for \"Subject\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
    testRunner.When("I change verbatim \"terrible head pain\" to \"bad head pain\" on form \"ETE1\" for \"Sub" +
                    "ject\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 120
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
    testRunner.Then("I should see task \"bad head pain\" in coder table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
