// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Coder.EndToEndTests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("When a Coder query is answered or cancelled, the verbatim will be resent to Coder" +
        ".")]
    [NUnit.Framework.CategoryAttribute("specETE_UpdatingQueriesResendTermsBackToCoder.feature")]
    [NUnit.Framework.CategoryAttribute("EndToEndDynamicSegment")]
    public partial class WhenACoderQueryIsAnsweredOrCancelledTheVerbatimWillBeResentToCoder_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "specETE_UpdatingQueriesResendTermsBackToCoder.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "When a Coder query is answered or cancelled, the verbatim will be resent to Coder" +
                    ".", "", ProgrammingLanguage.CSharp, new string[] {
                        "specETE_UpdatingQueriesResendTermsBackToCoder.feature",
                        "EndToEndDynamicSegment"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When a Coder query is answered and the verbatim is not updated, the verbatim is r" +
            "esent to Coder")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_updated_query_answer_query")]
        [NUnit.Framework.CategoryAttribute("PB3.3.3_006")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void WhenACoderQueryIsAnsweredAndTheVerbatimIsNotUpdatedTheVerbatimIsResentToCoder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When a Coder query is answered and the verbatim is not updated, the verbatim is r" +
                    "esent to Coder", new string[] {
                        "VAL",
                        "ETE_ENG_updated_query_answer_query",
                        "PB3.3.3_006",
                        "Release2016.1.0"});
#line 10
  this.ScenarioSetup(scenarioInfo);
#line 12
    testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 11.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table1.AddRow(new string[] {
                        "ETE1",
                        "Coding Field",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "false",
                        "false"});
#line 14
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table1, "And ");
#line 17
    testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
    testRunner.And("adding a new subject \"TEST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table2.AddRow(new string[] {
                        "Coding Field",
                        "terrible head pain",
                        "LongText"});
#line 19
    testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table2, "And ");
#line 22
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("I open a query for task \"terrible head pain\" with comment \"Open query due to bad " +
                    "term\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("a coding task \"terrible head pain\" returns to \"Open\" query status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("the coder query to the Rave form \"ETE1\" field \"Coding Field\" with verbatim term \"" +
                    "terrible head pain\" is responded to with \"Answered Response\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("a coding task \"terrible head pain\" returns to \"Closed\" query status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("task \"terrible head pain\" is coded to term \"Head pain\" at search level \"Low Level" +
                    " Term\" with code \"10019198\" at level \"LLT\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term Path"});
            table3.AddRow(new string[] {
                        "SOC",
                        "10029205",
                        "Nervous system disorders"});
            table3.AddRow(new string[] {
                        "HLGT",
                        "10019231",
                        "Headaches"});
            table3.AddRow(new string[] {
                        "HLT",
                        "10019233",
                        "Headaches NEC"});
            table3.AddRow(new string[] {
                        "PT",
                        "10019211",
                        "Headache"});
            table3.AddRow(new string[] {
                        "LLT",
                        "10019198",
                        "Head pain"});
#line 31
 testRunner.Then("the coding decision for verbatim \"terrible head pain\" on form \"ETE1\" for field \"C" +
                    "oding Field\" contains the following data", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When a Coder query is cancelled and the verbatim is not updated, the verbatim is " +
            "resent to Coder")]
        [NUnit.Framework.CategoryAttribute("VAL")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_updated_query_cancel_query")]
        [NUnit.Framework.CategoryAttribute("PB3.3.3_004")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void WhenACoderQueryIsCancelledAndTheVerbatimIsNotUpdatedTheVerbatimIsResentToCoder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When a Coder query is cancelled and the verbatim is not updated, the verbatim is " +
                    "resent to Coder", new string[] {
                        "VAL",
                        "ETE_ENG_updated_query_cancel_query",
                        "PB3.3.3_004",
                        "Release2016.1.0"});
#line 44
  this.ScenarioSetup(scenarioInfo);
#line 46
 testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 11.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 47
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table4.AddRow(new string[] {
                        "ETE1",
                        "Coding Field",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "false",
                        "false"});
#line 48
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table4, "And ");
#line 51
    testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
    testRunner.And("adding a new subject \"TEST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table5.AddRow(new string[] {
                        "Coding Field",
                        "terrible head pain",
                        "LongText"});
#line 53
    testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table5, "And ");
#line 56
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And("I open a query for task \"terrible head pain\" with comment \"Rejecting Decision due" +
                    " to bad term\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.And("a coding task \"terrible head pain\" returns to \"Open\" query status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("the coder query to the Rave form \"ETE1\" field \"Coding Field\" with verbatim term \"" +
                    "terrible head pain\" is canceled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And("a coding task \"terrible head pain\" returns to \"Cancelled\" query status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.And("task \"terrible head pain\" is coded to term \"Head pain\" at search level \"Low Level" +
                    " Term\" with code \"10019198\" at level \"LLT\" and a synonym is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Level",
                        "Code",
                        "Term Path"});
            table6.AddRow(new string[] {
                        "SOC",
                        "10029205",
                        "Nervous system disorders"});
            table6.AddRow(new string[] {
                        "HLGT",
                        "10019231",
                        "Headaches"});
            table6.AddRow(new string[] {
                        "HLT",
                        "10019233",
                        "Headaches NEC"});
            table6.AddRow(new string[] {
                        "PT",
                        "10019211",
                        "Headache"});
            table6.AddRow(new string[] {
                        "LLT",
                        "10019198",
                        "Head pain"});
#line 65
 testRunner.Then("the coding decision for verbatim \"terrible head pain\" on form \"ETE1\" for field \"C" +
                    "oding Field\" contains the following data", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify a Coder query is answered and the verbatim is updated, the updated verbati" +
            "m is resent to Coder")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_updated_query_answer_query_view_term_in_coder")]
        [NUnit.Framework.CategoryAttribute("PB3.3.3-005")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void VerifyACoderQueryIsAnsweredAndTheVerbatimIsUpdatedTheUpdatedVerbatimIsResentToCoder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify a Coder query is answered and the verbatim is updated, the updated verbati" +
                    "m is resent to Coder", new string[] {
                        "DFT",
                        "ETE_ENG_updated_query_answer_query_view_term_in_coder",
                        "PB3.3.3-005",
                        "Release2016.1.0"});
#line 79
  this.ScenarioSetup(scenarioInfo);
#line 85
    testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 12.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval",
                        "SupplementalTerms"});
            table7.AddRow(new string[] {
                        "ETE1",
                        "Adverse Event 1",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "true",
                        "false",
                        ""});
#line 87
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table7, "And ");
#line 90
    testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
    testRunner.And("adding a new subject \"TEST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table8.AddRow(new string[] {
                        "AdverseEvent1",
                        "terrible head pain",
                        ""});
#line 92
    testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table8, "And ");
#line 95
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
    testRunner.Then("I submit coder query \"Rejecting Decision due to bad term\" for task \"terrible head" +
                    " pain\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 97
    testRunner.Then("I should see the query status \"open\" for task \"terrible head pain\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 98
    testRunner.And("I navigate to Rave App form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
    testRunner.And("I cancel query for term \"terrible head pain\" on form \"ETE1\" for \"Subject\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
    testRunner.And("answer query for form \"ETE1\" for \"Subject\" with value \"Answered Query.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
    testRunner.And("I browse and code task \"terrible head pain\" entering value \"head pain\" and select" +
                    "ing \"Headaches\" located in Dictionary Tree Table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
    testRunner.And("I navigate to Rave App form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Coding Level",
                        "Code",
                        "Term"});
            table9.AddRow(new string[] {
                        "SOC",
                        "10029205",
                        "Nervous system disorders"});
            table9.AddRow(new string[] {
                        "HLGT",
                        "10019231",
                        "Headaches"});
            table9.AddRow(new string[] {
                        "HLT",
                        "10019233",
                        "Headaches NEC"});
            table9.AddRow(new string[] {
                        "PT",
                        "10019211",
                        "Headache"});
            table9.AddRow(new string[] {
                        "LLT",
                        "10019198",
                        "Head pain"});
#line 104
    testRunner.Then("the field \"CoderField1\" on form \"ETE1\" for study \"<Study>\" site \"<Site>\" subject " +
                    "\"TEST\" contains the following coding decision data", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("When a Coder query is cancelled and the verbatim is updated, the updated verbatim" +
            " is resent to Coder")]
        [NUnit.Framework.CategoryAttribute("DFT")]
        [NUnit.Framework.CategoryAttribute("ETE_ENG_updated_query_change_term")]
        [NUnit.Framework.CategoryAttribute("PB3.3.3-006")]
        [NUnit.Framework.CategoryAttribute("Release2016.1.0")]
        public virtual void WhenACoderQueryIsCancelledAndTheVerbatimIsUpdatedTheUpdatedVerbatimIsResentToCoder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When a Coder query is cancelled and the verbatim is updated, the updated verbatim" +
                    " is resent to Coder", new string[] {
                        "DFT",
                        "ETE_ENG_updated_query_change_term",
                        "PB3.3.3-006",
                        "Release2016.1.0"});
#line 116
  this.ScenarioSetup(scenarioInfo);
#line 118
   testRunner.Given("a Rave project registration with dictionary \"MedDRA ENG 12.0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 119
    testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form",
                        "Field",
                        "Dictionary",
                        "Locale",
                        "CodingLevel",
                        "Priority",
                        "IsApprovalRequired",
                        "IsAutoApproval"});
            table10.AddRow(new string[] {
                        "ETE1",
                        "Coding Field",
                        "<Dictionary>",
                        "<Locale>",
                        "LLT",
                        "1",
                        "true",
                        "false"});
#line 120
    testRunner.And("a Rave Coder setup with the following options", ((string)(null)), table10, "And ");
#line 123
    testRunner.When("a Rave Draft is published and pushed using draft \"<DraftName>\" for Project \"<Stud" +
                    "yName>\" to environment \"Prod\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 124
    testRunner.And("adding a new subject \"TEST\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table11.AddRow(new string[] {
                        "Coding Field",
                        "terrible head pain",
                        "LongText"});
#line 125
    testRunner.And("adding a new verbatim term to form \"ETE1\"", ((string)(null)), table11, "And ");
#line 128
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.And("I open a query for task \"terrible head pain\" with comment \"Rejecting Decision due" +
                    " to bad term\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.And("a coding task \"terrible head pain\" returns to \"Open\" query status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.And("Rave Modules App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.And("the coder query to the Rave form \"ETE1\" field \"Coding Field\" with verbatim term \"" +
                    "terrible head pain\" is canceled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "ControlType"});
            table12.AddRow(new string[] {
                        "Coding Field",
                        "bad head pain",
                        "LongText"});
#line 133
 testRunner.And("modifying a verbatim term of the log line containing \"terrible head pain\" on form" +
                    " \"ETE1\"", ((string)(null)), table12, "And ");
#line 136
    testRunner.And("Coder App Segment is loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
 testRunner.And("a coding task \"bad head pain\" returns to \"Closed\" query status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Verbatim Term",
                        "Queries"});
            table13.AddRow(new string[] {
                        "bad head pain",
                        "Closed"});
#line 138
 testRunner.Then("the coding task table has the following ordered information", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
